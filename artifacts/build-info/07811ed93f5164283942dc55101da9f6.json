{"id":"07811ed93f5164283942dc55101da9f6","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/CustomERC20.sol":{"content":"// SPDX-License-Identifier: MIT \npragma solidity ^0.8.19;\n\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { ERC20Permit } from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport { ERC20Burnable } from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IMintableERC20 {\n    function mint(address _to, uint256 _amount) external;\n}\n\ncontract CustomERC20 is IMintableERC20, ERC20, ERC20Permit, ERC20Burnable, Ownable {\n    using SafeERC20 for ERC20;\n\n    /// @notice Decimals of the token\n    uint8 private immutable DECIMALS;\n\n    /// @notice Emitted whenever tokens are minted for an account.\n    /// @param account Address of the account tokens are being minted for.\n    /// @param amount  Amount of tokens minted.\n    event Mint(address indexed account, uint256 amount);\n\n    /// @notice Emitted whenever tokens are burned from an account.\n    /// @param account Address of the account tokens are being burned from.\n    /// @param amount  Amount of tokens burned.\n    event Burn(address indexed account, uint256 amount);\n    \n    /// @param _name        ERC20 name.\n    /// @param _symbol      ERC20 symbol.\n    /// @param _decimals      ERC20 decimals. NOTE: This information is only used for _display_ purposes\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    )\n        Ownable(msg.sender)\n        ERC20(_name, _symbol)\n        ERC20Permit(_name)\n    {\n        DECIMALS = _decimals;\n    }\n\n    /// @notice Allows the owner to mint tokens.\n    /// @param _to     Address to mint tokens to.\n    /// @param _amount Amount of tokens to mint.\n    function mint(\n        address _to,\n        uint256 _amount\n    )\n        external\n        virtual\n        override(IMintableERC20)\n        onlyOwner\n    {\n        _mint(_to, _amount);\n        emit Mint(_to, _amount);\n    }\n\n    /// @dev Returns the number of decimals used to get its user representation.\n    /// For example, if `decimals` equals `2`, a balance of `505` tokens should\n    /// be displayed to a user as `5.05` (`505 / 10 ** 2`).\n    /// NOTE: This information is only used for _display_ purposes: it in\n    /// no way affects any of the arithmetic of the contract, including\n    /// {IERC20-balanceOf} and {IERC20-transfer}.\n    function decimals() public view override returns (uint8) {\n        return DECIMALS;\n    }\n\n}\n"},"contracts/FixedRateDistribution.sol":{"content":"// SPDX-License-Identifier: MIT \npragma solidity ^0.8.24;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n}\n\ncontract FixedRateDistribution is Ownable, ReentrancyGuard {\n    \n    using SafeMath for uint;\n    using SafeMath for uint256;\n\n    IERC20 token;\n    bool paused;\n    bool multiply;\n    uint256 rate;\n\n    constructor(\n        address _token,\n        bool _paused,\n        bool _multiply,\n        uint256 _rate\n    )\n        Ownable(msg.sender)\n    {\n        paused = _paused;\n        multiply = _multiply;\n        rate = _rate;\n\n        token = IERC20(_token);\n    }\n\n    receive() external payable {\n        require(!paused, \"Distribution is paused.\");\n\n        uint256 tokensToPay = 0;\n        if (multiply) {\n            tokensToPay = msg.value * rate;\n        } else {\n            tokensToPay = msg.value / rate;\n        }\n\n        require(\n            tokensToPay <= token.balanceOf(address(this)),\n            \"Not enough tokens available.\"\n        );\n        token.transfer(msg.sender, tokensToPay);\n    }\n\n    function setPaused(\n        bool _paused\n    )\n        external\n        onlyOwner\n    {\n        paused = _paused;\n    }\n\n    function setRate(\n        uint256 _rate\n    )\n        external\n        onlyOwner\n    {\n        rate = _rate;\n    }\n\n    function setMultiply(\n        bool _multiply\n    )\n        external\n        onlyOwner\n    {\n        multiply = _multiply;\n    }\n\n    function withdrawToken(\n        address tokenAddress,\n        address to,\n        uint256 amount\n    )\n        external\n        onlyOwner\n    {\n        IERC20(tokenAddress).transfer(to, amount);\n    }\n\n    function withdrawETH(\n        address payable _to,\n        uint256 amount\n    )\n        external\n        onlyOwner\n    {\n        (bool sent, bytes memory data) = _to.call{value: amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n    }\n\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/FixedRateDistribution.sol:111:21:\n    |\n111 |         (bool sent, bytes memory data) = _to.call{value: amount}(\"\");\n    |                     ^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":2206,"file":"contracts/FixedRateDistribution.sol","start":2189},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1737],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1738,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1737,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1737],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:139:2","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"288:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"307:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"627:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"660:6:2","nodeType":"VariableDeclaration","scope":184,"src":"652:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"676:7:2","nodeType":"VariableDeclaration","scope":184,"src":"668:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"693:6:2","nodeType":"VariableDeclaration","scope":184,"src":"685:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:2"},"src":"621:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"707:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"870:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"897:6:2","nodeType":"VariableDeclaration","scope":189,"src":"889:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:2"},"src":"864:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"911:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1102:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:2"},"src":"1075:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1126:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1517:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1509:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1526:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1553:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:2"},"src":"1476:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1567:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1752:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1781:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:2"},"src":"1746:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1797:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2003:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2031:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:2"},"src":"1997:43:2"}],"scope":310,"src":"278:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2044:141:2","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2196:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2216:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2446:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2473:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2465:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:2"},"src":"2440:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2486:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2629:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2652:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:2"},"src":"2623:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2675:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3004:6:2","nodeType":"VariableDeclaration","scope":234,"src":"2996:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3037:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:2"},"src":"2969:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3050:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3213:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3241:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3233:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:2"},"src":"3207:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3255:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3447:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:2"},"src":"3419:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3471:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3764:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3756:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3774:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:2"},"src":"3723:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3797:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3982:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4012:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4004:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:2"},"src":"3976:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4028:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4236:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4266:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4258:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:2"},"src":"4230:46:2"}],"scope":310,"src":"2186:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4280:143:2","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4434:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4455:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4862:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4854:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4878:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4870:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4895:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4887:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:2"},"src":"4821:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4926:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5089:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5118:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5110:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:2"},"src":"5083:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5132:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5325:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:2"},"src":"5296:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5349:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5653:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5645:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5671:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5663:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:2"},"src":"5610:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5684:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5900:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:2"},"src":"5863:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5916:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6155:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6147:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:2"},"src":"6118:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6171:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6488:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6507:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:2"},"src":"6456:73:2"}],"scope":310,"src":"4424:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6420:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1737],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1128]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1129,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1738,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1428:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1737,"src":"1428:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1428:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1437:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1437:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1437:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1445:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"1445:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1445:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1461:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1461:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1461:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1128,902,1737],"name":"ERC20","nameLocation":"1419:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1480:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1496:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1540:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1556:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1583:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1630:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1680:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1665:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1691:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1952:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1962:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1970:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1962:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1985:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1995:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1985:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1720:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1922:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1908:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1929:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1952:0:3"},"scope":824,"src":"1896:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1115],"body":{"id":369,"nodeType":"Block","src":"2134:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2151:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"2144:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2015:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2087:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"2119:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:3"},"scope":824,"src":"2074:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1121],"body":{"id":378,"nodeType":"Block","src":"2338:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2348:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2169:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"2291:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2323:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:3"},"scope":824,"src":"2276:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1127],"body":{"id":387,"nodeType":"Block","src":"3058:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"3068:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2375:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3019:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"3051:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:3"},"scope":824,"src":"3002:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"3205:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3222:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"3215:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"3090:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"3164:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"3196:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:3"},"scope":824,"src":"3144:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3373:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3390:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3400:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3383:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"3247:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3326:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3318:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3364:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:3"},"scope":824,"src":"3299:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3685:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3703:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3695:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3711:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3743:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3750:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3754:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3733:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3733:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3770:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3421:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3636:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3628:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3648:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3640:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3679:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:3"},"scope":824,"src":"3610:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3935:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3952:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3964:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3971:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3945:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3794:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3873:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3865:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3888:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3880:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:3"},"scope":824,"src":"3846:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4372:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4390:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4382:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4436:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4445:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4420:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4420:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4461:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3992:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4318:7:3","nodeType":"VariableDeclaration","scope":475,"src":"4310:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4335:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4327:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4366:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:3"},"scope":824,"src":"4293:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"5132:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"5150:7:3","nodeType":"VariableDeclaration","scope":506,"src":"5142:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"5160:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5204:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5213:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5182:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"5182:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5239:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5245:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5229:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"5229:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"5265:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4485:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"5069:4:3","nodeType":"VariableDeclaration","scope":507,"src":"5061:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"5083:2:3","nodeType":"VariableDeclaration","scope":507,"src":"5075:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"5095:5:3","nodeType":"VariableDeclaration","scope":507,"src":"5087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"5126:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:3"},"scope":824,"src":"5039:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5725:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5739:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5735:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5759:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5780:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"5773:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5834:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5830:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5852:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5873:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"5866:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5933:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5939:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5925:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5925:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5289:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5683:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5697:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5709:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5725:0:3"},"scope":824,"src":"5656:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6346:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6360:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6534:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6548:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6570:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6580:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6603:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6617:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6599:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6624:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6674:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6680:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6693:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6649:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"RevertStatement","src":"6642:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6727:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6834:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6852:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6866:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6834:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6356:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6380:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6496:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6512:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6496:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6910:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"7125:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"7139:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7284:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7294:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7284:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6906:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6928:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6942:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7073:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"7073:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7355:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7361:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7365:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7346:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7341:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5962:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6296:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6288:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6310:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6302:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6322:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6346:0:3"},"scope":824,"src":"6271:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7777:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7791:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7787:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7814:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7835:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"7828:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7907:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7916:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7887:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7887:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7384:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7744:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7736:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7761:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7753:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7777:0:3"},"scope":824,"src":"7721:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8303:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8317:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8313:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8340:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8361:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"8354:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8419:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8411:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8411:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7935:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8270:7:3","nodeType":"VariableDeclaration","scope":697,"src":"8262:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8287:5:3","nodeType":"VariableDeclaration","scope":697,"src":"8279:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8303:0:3"},"scope":824,"src":"8247:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"9063:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9082:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"9089:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9098:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"9073:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"9073:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8459:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"9015:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"9030:7:3","nodeType":"VariableDeclaration","scope":715,"src":"9022:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"9047:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9039:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"9063:0:3"},"scope":824,"src":"8989:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"10047:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"10057:89:3","trueBody":{"id":740,"nodeType":"Block","src":"10082:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"10103:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"RevertStatement","src":"10096:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10159:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"10155:90:3","trueBody":{"id":755,"nodeType":"Block","src":"10182:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"10203:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"RevertStatement","src":"10196:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"10254:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10273:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10284:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"10254:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10303:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10299:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10314:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10342:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10349:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10333:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10328:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"9123:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9975:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9967:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9990:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9982:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"10007:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9999:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:3","nodeType":"VariableDeclaration","scope":775,"src":"10014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"10047:0:3"},"scope":824,"src":"9949:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10752:388:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10762:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10799:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10806:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10789:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:3","memberName":"max","nodeType":"MemberAccess","src":"10848:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10824:310:3","trueBody":{"id":820,"nodeType":"Block","src":"10867:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10885:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10904:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10881:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10911:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10963:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10972:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10990:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10936:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"10929:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"11024:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"11061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"11068:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11077:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"11096:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"11052:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"11052:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10387:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10696:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10711:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10728:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10720:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10752:0:3"},"scope":824,"src":"10663:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1401:9741:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:11038:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"213:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"226:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"395:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:4","nodeType":"VariableDeclaration","scope":836,"src":"404:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:4","nodeType":"VariableDeclaration","scope":836,"src":"426:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:4","nodeType":"VariableDeclaration","scope":836,"src":"446:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:4"},"src":"389:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"467:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"626:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:4","nodeType":"VariableDeclaration","scope":845,"src":"635:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:4","nodeType":"VariableDeclaration","scope":845,"src":"658:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:4","nodeType":"VariableDeclaration","scope":845,"src":"683:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:4"},"src":"620:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"704:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":902,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"835:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"938:7:4","nodeType":"VariableDeclaration","scope":859,"src":"930:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"970:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:4"},"scope":902,"src":"911:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"985:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1229:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1221:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1241:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1233:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1266:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:4"},"scope":902,"src":"1203:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1278:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1574:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1566:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1589:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1581:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1621:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:4"},"scope":902,"src":"1547:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1636:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2333:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2325:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2350:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:4"},"scope":902,"src":"2308:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2387:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2719:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2711:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2733:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2725:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2745:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2737:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2770:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:4"},"scope":902,"src":"2689:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"203:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2673:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1737],"ERC20":[824],"ERC20Burnable":[948]},"id":949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":825,"src":"150:35:5","symbolAliases":[{"foreign":{"id":905,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"158:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1738,"src":"186:51:5","symbolAliases":[{"foreign":{"id":907,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"194:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":910,"name":"Context","nameLocations":["483:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1737,"src":"483:7:5"},"id":911,"nodeType":"InheritanceSpecifier","src":"483:7:5"},{"baseName":{"id":912,"name":"ERC20","nameLocations":["492:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"492:5:5"},"id":913,"nodeType":"InheritanceSpecifier","src":"492:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"239:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":948,"linearizedBaseContracts":[948,824,214,1128,902,1737],"name":"ERC20Burnable","nameLocation":"466:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":925,"nodeType":"Block","src":"662:43:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":920,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"678:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"692:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"672:26:5"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"504:109:5","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"value","nameLocation":"640:5:5","nodeType":"VariableDeclaration","scope":926,"src":"632:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:5"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"662:0:5"},"scope":948,"src":"618:87:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":946,"nodeType":"Block","src":"1086:93:5","statements":[{"expression":{"arguments":[{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1112:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"1121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1135:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":934,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1096:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"1096:45:5"},{"expression":{"arguments":[{"id":942,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1157:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1166:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":941,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"1151:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"1151:21:5"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"711:305:5","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":947,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:5","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"account","nameLocation":"1047:7:5","nodeType":"VariableDeclaration","scope":947,"src":"1039:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"value","nameLocation":"1064:5:5","nodeType":"VariableDeclaration","scope":947,"src":"1056:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:5"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"1086:0:5"},"scope":948,"src":"1021:158:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":949,"src":"448:733:5","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"124:1058:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[2804],"EIP712":[3031],"ERC20":[824],"ERC20Permit":[1102],"IERC20Permit":[1164],"Nonces":[1805]},"id":1103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":950,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":1165,"src":"148:48:6","symbolAliases":[{"foreign":{"id":951,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"156:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":825,"src":"197:35:6","symbolAliases":[{"foreign":{"id":953,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":2805,"src":"233:60:6","symbolAliases":[{"foreign":{"id":955,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"241:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":3032,"src":"294:62:6","symbolAliases":[{"foreign":{"id":957,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"302:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":1806,"src":"357:49:6","symbolAliases":[{"foreign":{"id":959,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"365:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":962,"name":"ERC20","nameLocations":["929:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"929:5:6"},"id":963,"nodeType":"InheritanceSpecifier","src":"929:5:6"},{"baseName":{"id":964,"name":"IERC20Permit","nameLocations":["936:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"936:12:6"},"id":965,"nodeType":"InheritanceSpecifier","src":"936:12:6"},{"baseName":{"id":966,"name":"EIP712","nameLocations":["950:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3031,"src":"950:6:6"},"id":967,"nodeType":"InheritanceSpecifier","src":"950:6:6"},{"baseName":{"id":968,"name":"Nonces","nameLocations":["958:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1805,"src":"958:6:6"},"id":969,"nodeType":"InheritanceSpecifier","src":"958:6:6"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"408:487:6","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1102,"linearizedBaseContracts":[1102,1805,3031,172,1164,824,214,1128,902,1737],"name":"ERC20Permit","nameLocation":"914:11:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":974,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:6","nodeType":"VariableDeclaration","scope":1102,"src":"971:146:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":971,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"1124:52:6","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":979,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:6","nodeType":"ErrorDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:6","nodeType":"VariableDeclaration","scope":979,"src":"1211:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:6"},"src":"1181:48:6"},{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"1235:45:6","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":986,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:6","nodeType":"ErrorDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"signer","nameLocation":"1320:6:6","nodeType":"VariableDeclaration","scope":986,"src":"1312:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"owner","nameLocation":"1336:5:6","nodeType":"VariableDeclaration","scope":986,"src":"1328:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:6"},"src":"1285:58:6"},{"body":{"id":996,"nodeType":"Block","src":"1624:2:6","statements":[]},"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"1349:220:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":997,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":992,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"1613:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":994,"kind":"baseConstructorSpecifier","modifierName":{"id":991,"name":"EIP712","nameLocations":["1606:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3031,"src":"1606:6:6"},"nodeType":"ModifierInvocation","src":"1606:17:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"name","nameLocation":"1600:4:6","nodeType":"VariableDeclaration","scope":997,"src":"1586:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":988,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:6"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"1624:0:6"},"scope":1102,"src":"1574:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1149],"body":{"id":1073,"nodeType":"Block","src":"1869:483:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1015,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1017,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1901:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1024,"nodeType":"IfStatement","src":"1879:97:6","trueBody":{"id":1023,"nodeType":"Block","src":"1911:65:6","statements":[{"errorCall":{"arguments":[{"id":1020,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1956:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1019,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"1932:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1022,"nodeType":"RevertStatement","src":"1925:40:6"}]}},{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:6","nodeType":"VariableDeclaration","scope":1073,"src":"1986:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1040,"initialValue":{"arguments":[{"arguments":[{"id":1030,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2028:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1031,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2045:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2052:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"2061:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2078:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"2068:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1037,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"2086:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1028,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1027,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:6"},{"assignments":[1042],"declarations":[{"constant":false,"id":1042,"mutability":"mutable","name":"hash","nameLocation":"2115:4:6","nodeType":"VariableDeclaration","scope":1073,"src":"2107:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1046,"initialValue":{"arguments":[{"id":1044,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2139:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1043,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"2122:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:6"},{"assignments":[1048],"declarations":[{"constant":false,"id":1048,"mutability":"mutable","name":"signer","nameLocation":"2169:6:6","nodeType":"VariableDeclaration","scope":1073,"src":"2161:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1056,"initialValue":{"arguments":[{"id":1051,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2192:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1052,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"2198:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1053,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"2201:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1054,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2204:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1049,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"2178:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2804_$","typeString":"type(library ECDSA)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2754,"src":"2178:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1057,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2220:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1058,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2230:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"2216:88:6","trueBody":{"id":1065,"nodeType":"Block","src":"2237:67:6","statements":[{"errorCall":{"arguments":[{"id":1061,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2279:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1062,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2287:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"2258:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"RevertStatement","src":"2251:42:6"}]}},{"expression":{"arguments":[{"id":1068,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2323:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2330:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"2339:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2314:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"2314:31:6"}]},"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"1632:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:6","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"owner","nameLocation":"1713:5:6","nodeType":"VariableDeclaration","scope":1074,"src":"1705:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"spender","nameLocation":"1736:7:6","nodeType":"VariableDeclaration","scope":1074,"src":"1728:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"value","nameLocation":"1761:5:6","nodeType":"VariableDeclaration","scope":1074,"src":"1753:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:6","nodeType":"VariableDeclaration","scope":1074,"src":"1776:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"v","nameLocation":"1808:1:6","nodeType":"VariableDeclaration","scope":1074,"src":"1802:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1007,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"r","nameLocation":"1827:1:6","nodeType":"VariableDeclaration","scope":1074,"src":"1819:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"s","nameLocation":"1846:1:6","nodeType":"VariableDeclaration","scope":1074,"src":"1838:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:6"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"1869:0:6"},"scope":1102,"src":"1680:672:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1157,1764],"body":{"id":1090,"nodeType":"Block","src":"2506:43:6","statements":[{"expression":{"arguments":[{"id":1087,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2536:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1085,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1102_$","typeString":"type(contract super ERC20Permit)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1764,"src":"2523:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1084,"id":1089,"nodeType":"Return","src":"2516:26:6"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"2358:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:6","nodeType":"FunctionDefinition","overrides":{"id":1081,"nodeType":"OverrideSpecifier","overrides":[{"id":1079,"name":"IERC20Permit","nameLocations":["2466:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"2466:12:6"},{"id":1080,"name":"Nonces","nameLocations":["2480:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1805,"src":"2480:6:6"}],"src":"2457:30:6"},"parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"owner","nameLocation":"2430:5:6","nodeType":"VariableDeclaration","scope":1091,"src":"2422:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:6"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"2497:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:6"},"scope":1102,"src":"2406:143:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1163],"body":{"id":1100,"nodeType":"Block","src":"2724:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1097,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"2741:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1096,"id":1099,"nodeType":"Return","src":"2734:27:6"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"2555:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:6","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"2681:2:6"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1101,"src":"2715:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:6"},"scope":1102,"src":"2656:112:6","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1103,"src":"896:1874:6","usedErrors":[184,189,194,203,208,213,979,986,1747,1888,1890,2467,2472,2477],"usedEvents":[152,836,845]}],"src":"122:2649:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1128]},"id":1129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1104,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1129,"sourceUnit":903,"src":"151:37:7","symbolAliases":[{"foreign":{"id":1105,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1108,"name":"IERC20","nameLocations":["305:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"305:6:7"},"id":1109,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"190:86:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1128,"linearizedBaseContracts":[1128,902],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1115,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1112,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1128,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1121,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1118,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1128,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1127,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1124,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1128,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1129,"src":"277:405:7","usedErrors":[],"usedEvents":[836,845]}],"src":"125:558:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1164]},"id":1165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1130,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"149:1963:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1164,"linearizedBaseContracts":[1164],"name":"IERC20Permit","nameLocation":"2123:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"2142:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1149,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:8","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"owner","nameLocation":"3030:5:8","nodeType":"VariableDeclaration","scope":1149,"src":"3022:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"spender","nameLocation":"3053:7:8","nodeType":"VariableDeclaration","scope":1149,"src":"3045:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"value","nameLocation":"3078:5:8","nodeType":"VariableDeclaration","scope":1149,"src":"3070:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:8","nodeType":"VariableDeclaration","scope":1149,"src":"3093:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"v","nameLocation":"3125:1:8","nodeType":"VariableDeclaration","scope":1149,"src":"3119:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1141,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"r","nameLocation":"3144:1:8","nodeType":"VariableDeclaration","scope":1149,"src":"3136:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"s","nameLocation":"3163:1:8","nodeType":"VariableDeclaration","scope":1149,"src":"3155:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:8"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"3179:0:8"},"scope":1164,"src":"2997:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"3186:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1157,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:8","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"owner","nameLocation":"3509:5:8","nodeType":"VariableDeclaration","scope":1157,"src":"3501:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:8"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1157,"src":"3539:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:8"},"scope":1164,"src":"3485:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"3554:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1163,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:8","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"3765:2:8"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"3791:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:8"},"scope":1164,"src":"3740:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1165,"src":"2113:1689:8","usedErrors":[],"usedEvents":[]}],"src":"123:3680:8"},"id":8},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1707],"IERC20":[902],"IERC20Permit":[1164],"SafeERC20":[1454]},"id":1455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1455,"sourceUnit":903,"src":"141:37:9","symbolAliases":[{"foreign":{"id":1167,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"149:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1455,"sourceUnit":1165,"src":"179:60:9","symbolAliases":[{"foreign":{"id":1169,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"187:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1455,"sourceUnit":1708,"src":"240:51:9","symbolAliases":[{"foreign":{"id":1171,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"248:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"293:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1454,"linearizedBaseContracts":[1454],"name":"SafeERC20","nameLocation":"759:9:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1176,"libraryName":{"id":1174,"name":"Address","nameLocations":["781:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1707,"src":"781:7:9"},"nodeType":"UsingForDirective","src":"775:26:9","typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"807:64:9","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1181,"name":"SafeERC20FailedOperation","nameLocation":"882:24:9","nodeType":"ErrorDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"token","nameLocation":"915:5:9","nodeType":"VariableDeclaration","scope":1181,"src":"907:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:9"},"src":"876:46:9"},{"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"928:71:9","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1190,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:9","nodeType":"ErrorDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"spender","nameLocation":"1051:7:9","nodeType":"VariableDeclaration","scope":1190,"src":"1043:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:9","nodeType":"VariableDeclaration","scope":1190,"src":"1060:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:9","nodeType":"VariableDeclaration","scope":1190,"src":"1086:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:9"},"src":"1004:109:9"},{"body":{"id":1213,"nodeType":"Block","src":"1375:88:9","statements":[{"expression":{"arguments":[{"id":1202,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1405:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1205,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1427:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":869,"src":"1427:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1207,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1444:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"1448:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1203,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1201,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1385:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$902_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"1385:71:9"}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1119:179:9","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:9","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"token","nameLocation":"1332:5:9","nodeType":"VariableDeclaration","scope":1214,"src":"1325:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":1193,"nodeType":"UserDefinedTypeName","pathNode":{"id":1192,"name":"IERC20","nameLocations":["1325:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1325:6:9"},"referencedDeclaration":902,"src":"1325:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"to","nameLocation":"1347:2:9","nodeType":"VariableDeclaration","scope":1214,"src":"1339:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"value","nameLocation":"1359:5:9","nodeType":"VariableDeclaration","scope":1214,"src":"1351:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:9"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"1375:0:9"},"scope":1454,"src":"1303:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"1792:98:9","statements":[{"expression":{"arguments":[{"id":1228,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"1822:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1231,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"1844:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":901,"src":"1844:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1233,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1865:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"1871:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"1875:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1229,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1227,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1802:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$902_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"ExpressionStatement","src":"1802:81:9"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"1469:228:9","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:9","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"token","nameLocation":"1735:5:9","nodeType":"VariableDeclaration","scope":1241,"src":"1728:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":1217,"nodeType":"UserDefinedTypeName","pathNode":{"id":1216,"name":"IERC20","nameLocations":["1728:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1728:6:9"},"referencedDeclaration":902,"src":"1728:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"from","nameLocation":"1750:4:9","nodeType":"VariableDeclaration","scope":1241,"src":"1742:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"to","nameLocation":"1764:2:9","nodeType":"VariableDeclaration","scope":1241,"src":"1756:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"value","nameLocation":"1776:5:9","nodeType":"VariableDeclaration","scope":1241,"src":"1768:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:9"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"1792:0:9"},"scope":1454,"src":"1702:188:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1271,"nodeType":"Block","src":"2167:139:9","statements":[{"assignments":[1253],"declarations":[{"constant":false,"id":1253,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:9","nodeType":"VariableDeclaration","scope":1271,"src":"2177:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1262,"initialValue":{"arguments":[{"arguments":[{"id":1258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1454","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1454","typeString":"library SafeERC20"}],"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:9","typeDescriptions":{}}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2231:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1254,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2200:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":879,"src":"2200:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:9"},{"expression":{"arguments":[{"id":1264,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2262:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},{"id":1265,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2269:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"2278:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2293:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1263,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2249:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$902_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1270,"nodeType":"ExpressionStatement","src":"2249:50:9"}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"1896:180:9","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:9","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"token","nameLocation":"2119:5:9","nodeType":"VariableDeclaration","scope":1272,"src":"2112:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"IERC20","nameLocations":["2112:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2112:6:9"},"referencedDeclaration":902,"src":"2112:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"spender","nameLocation":"2134:7:9","nodeType":"VariableDeclaration","scope":1272,"src":"2126:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"2151:5:9","nodeType":"VariableDeclaration","scope":1272,"src":"2143:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:9"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[],"src":"2167:0:9"},"scope":1454,"src":"2081:225:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"2607:370:9","statements":[{"id":1313,"nodeType":"UncheckedBlock","src":"2617:354:9","statements":[{"assignments":[1284],"declarations":[{"constant":false,"id":1284,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:9","nodeType":"VariableDeclaration","scope":1313,"src":"2641:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1293,"initialValue":{"arguments":[{"arguments":[{"id":1289,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1454","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1454","typeString":"library SafeERC20"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:9","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1291,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2699:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1285,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2668:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":879,"src":"2668:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2725:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1295,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2744:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"IfStatement","src":"2721:160:9","trueBody":{"id":1303,"nodeType":"Block","src":"2763:118:9","statements":[{"errorCall":{"arguments":[{"id":1298,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2821:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2830:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1300,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2848:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1297,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2788:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"RevertStatement","src":"2781:85:9"}]}},{"expression":{"arguments":[{"id":1306,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2907:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},{"id":1307,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2914:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2923:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1309,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2942:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1305,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2894:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$902_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"ExpressionStatement","src":"2894:66:9"}]}]},"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"2312:192:9","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:9","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"token","nameLocation":"2547:5:9","nodeType":"VariableDeclaration","scope":1315,"src":"2540:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":1275,"nodeType":"UserDefinedTypeName","pathNode":{"id":1274,"name":"IERC20","nameLocations":["2540:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2540:6:9"},"referencedDeclaration":902,"src":"2540:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"spender","nameLocation":"2562:7:9","nodeType":"VariableDeclaration","scope":1315,"src":"2554:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:9","nodeType":"VariableDeclaration","scope":1315,"src":"2571:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:9"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"2607:0:9"},"scope":1454,"src":"2509:468:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"3373:303:9","statements":[{"assignments":[1327],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:9","nodeType":"VariableDeclaration","scope":1361,"src":"3383:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1326,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1336,"initialValue":{"arguments":[{"expression":{"id":1330,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3426:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":889,"src":"3426:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3442:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"3451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1328,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:9"},{"condition":{"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:9","subExpression":{"arguments":[{"id":1338,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3498:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},{"id":1339,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"3505:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1337,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3474:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$902_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1360,"nodeType":"IfStatement","src":"3469:201:9","trueBody":{"id":1359,"nodeType":"Block","src":"3520:150:9","statements":[{"expression":{"arguments":[{"id":1343,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3554:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1346,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3576:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":889,"src":"3576:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1348,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3592:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1344,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1342,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"3534:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$902_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"3534:71:9"},{"expression":{"arguments":[{"id":1355,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3639:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},{"id":1356,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"3646:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1354,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"3619:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$902_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1358,"nodeType":"ExpressionStatement","src":"3619:40:9"}]}}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"2983:308:9","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:9","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"token","nameLocation":"3325:5:9","nodeType":"VariableDeclaration","scope":1362,"src":"3318:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":1318,"nodeType":"UserDefinedTypeName","pathNode":{"id":1317,"name":"IERC20","nameLocations":["3318:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"3318:6:9"},"referencedDeclaration":902,"src":"3318:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"spender","nameLocation":"3340:7:9","nodeType":"VariableDeclaration","scope":1362,"src":"3332:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"value","nameLocation":"3357:5:9","nodeType":"VariableDeclaration","scope":1362,"src":"3349:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:9"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"3373:0:9"},"scope":1454,"src":"3296:380:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1403,"nodeType":"Block","src":"4129:559:9","statements":[{"assignments":[1372],"declarations":[{"constant":false,"id":1372,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:9","nodeType":"VariableDeclaration","scope":1403,"src":"4478:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1371,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1380,"initialValue":{"arguments":[{"id":1378,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"4532:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1375,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"4512:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:9","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:9","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1528,"src":"4504:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1381,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4551:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:9","memberName":"length","nodeType":"MemberAccess","src":"4551:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:9","subExpression":{"arguments":[{"id":1387,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4589:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1388,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:9","typeDescriptions":{}}}],"id":1390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1385,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:9","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1402,"nodeType":"IfStatement","src":"4547:135:9","trueBody":{"id":1401,"nodeType":"Block","src":"4610:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1397,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"4664:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:9","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1394,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4631:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"RevertStatement","src":"4624:47:9"}]}}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"3682:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:9","nodeType":"FunctionDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"token","nameLocation":"4095:5:9","nodeType":"VariableDeclaration","scope":1404,"src":"4088:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":1365,"nodeType":"UserDefinedTypeName","pathNode":{"id":1364,"name":"IERC20","nameLocations":["4088:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"4088:6:9"},"referencedDeclaration":902,"src":"4088:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"data","nameLocation":"4115:4:9","nodeType":"VariableDeclaration","scope":1404,"src":"4102:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:9"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[],"src":"4129:0:9"},"scope":1454,"src":"4059:629:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1452,"nodeType":"Block","src":"5278:489:9","statements":[{"assignments":[1416,1418],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"success","nameLocation":"5579:7:9","nodeType":"VariableDeclaration","scope":1452,"src":"5574:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1415,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:9","nodeType":"VariableDeclaration","scope":1452,"src":"5588:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1417,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1426,"initialValue":{"arguments":[{"id":1424,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"5635:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1421,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"5623:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:9","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:9","memberName":"call","nodeType":"MemberAccess","src":"5615:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1427,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"5657:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1428,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5669:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:9","memberName":"length","nodeType":"MemberAccess","src":"5669:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1434,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5706:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1435,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:9","typeDescriptions":{}}}],"id":1437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1432,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:9","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1444,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"5738:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}],"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:9","typeDescriptions":{}}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:9","memberName":"code","nodeType":"MemberAccess","src":"5730:19:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:9","memberName":"length","nodeType":"MemberAccess","src":"5730:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1414,"id":1451,"nodeType":"Return","src":"5650:110:9"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"4694:490:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:9","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"token","nameLocation":"5229:5:9","nodeType":"VariableDeclaration","scope":1453,"src":"5222:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":1407,"nodeType":"UserDefinedTypeName","pathNode":{"id":1406,"name":"IERC20","nameLocations":["5222:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"5222:6:9"},"referencedDeclaration":902,"src":"5222:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"data","nameLocation":"5249:4:9","nodeType":"VariableDeclaration","scope":1453,"src":"5236:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:9"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"5272:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:9"},"scope":1454,"src":"5189:578:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1455,"src":"751:5018:9","usedErrors":[1181,1190],"usedEvents":[]}],"src":"115:5655:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1707]},"id":1708,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1456,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"127:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1707,"linearizedBaseContracts":[1707],"name":"Address","nameLocation":"203:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"217:94:10","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1462,"name":"AddressInsufficientBalance","nameLocation":"322:26:10","nodeType":"ErrorDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"account","nameLocation":"357:7:10","nodeType":"VariableDeclaration","scope":1462,"src":"349:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:10"},"src":"316:50:10"},{"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"372:75:10","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1467,"name":"AddressEmptyCode","nameLocation":"458:16:10","nodeType":"ErrorDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"target","nameLocation":"483:6:10","nodeType":"VariableDeclaration","scope":1467,"src":"475:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:10"},"src":"452:39:10"},{"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"497:89:10","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1470,"name":"FailedInnerCall","nameLocation":"597:15:10","nodeType":"ErrorDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"612:2:10"},"src":"591:24:10"},{"body":{"id":1510,"nodeType":"Block","src":"1602:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1480,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}],"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:10","typeDescriptions":{}}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"1640:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1493,"nodeType":"IfStatement","src":"1612:109:10","trueBody":{"id":1492,"nodeType":"Block","src":"1648:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1488,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:10","typeDescriptions":{}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1485,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"1669:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"RevertStatement","src":"1662:48:10"}]}},{"assignments":[1495,null],"declarations":[{"constant":false,"id":1495,"mutability":"mutable","name":"success","nameLocation":"1737:7:10","nodeType":"VariableDeclaration","scope":1510,"src":"1732:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1494,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1502,"initialValue":{"arguments":[{"hexValue":"","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1496,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1750:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:10","memberName":"call","nodeType":"MemberAccess","src":"1750:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1498,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"1772:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:10"},{"condition":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:10","subExpression":{"id":1503,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"1793:63:10","trueBody":{"id":1508,"nodeType":"Block","src":"1807:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1505,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1828:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"RevertStatement","src":"1821:24:10"}]}}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"621:905:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:10","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:10","nodeType":"VariableDeclaration","scope":1511,"src":"1550:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"amount","nameLocation":"1585:6:10","nodeType":"VariableDeclaration","scope":1511,"src":"1577:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:10"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"1602:0:10"},"scope":1707,"src":"1531:331:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"2794:62:10","statements":[{"expression":{"arguments":[{"id":1522,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2833:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1523,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2841:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1521,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2811:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1520,"id":1526,"nodeType":"Return","src":"2804:45:10"}]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"1868:832:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:10","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"target","nameLocation":"2735:6:10","nodeType":"VariableDeclaration","scope":1528,"src":"2727:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"data","nameLocation":"2756:4:10","nodeType":"VariableDeclaration","scope":1528,"src":"2743:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:10"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1528,"src":"2780:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1518,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:10"},"scope":1707,"src":"2705:151:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"3293:279:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1542,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:10","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"3331:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"nodeType":"IfStatement","src":"3303:108:10","trueBody":{"id":1554,"nodeType":"Block","src":"3338:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1550,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1707","typeString":"library Address"}],"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:10","typeDescriptions":{}}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1547,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"3359:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"RevertStatement","src":"3352:48:10"}]}},{"assignments":[1557,1559],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"success","nameLocation":"3426:7:10","nodeType":"VariableDeclaration","scope":1573,"src":"3421:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1556,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:10","nodeType":"VariableDeclaration","scope":1573,"src":"3435:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1558,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"id":1564,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"3488:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1560,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3462:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:10","memberName":"call","nodeType":"MemberAccess","src":"3462:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"3481:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:10"},{"expression":{"arguments":[{"id":1568,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3537:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1569,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3545:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1570,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"3554:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1567,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3510:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1539,"id":1572,"nodeType":"Return","src":"3503:62:10"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"2862:313:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:10","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"target","nameLocation":"3219:6:10","nodeType":"VariableDeclaration","scope":1574,"src":"3211:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"data","nameLocation":"3240:4:10","nodeType":"VariableDeclaration","scope":1574,"src":"3227:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1532,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"value","nameLocation":"3254:5:10","nodeType":"VariableDeclaration","scope":1574,"src":"3246:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:10"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"3279:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:10"},"scope":1707,"src":"3180:392:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1599,"nodeType":"Block","src":"3811:154:10","statements":[{"assignments":[1585,1587],"declarations":[{"constant":false,"id":1585,"mutability":"mutable","name":"success","nameLocation":"3827:7:10","nodeType":"VariableDeclaration","scope":1599,"src":"3822:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1584,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:10","nodeType":"VariableDeclaration","scope":1599,"src":"3836:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1586,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1592,"initialValue":{"arguments":[{"id":1590,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"3881:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1588,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"3863:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:10"},{"expression":{"arguments":[{"id":1594,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"3930:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3938:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1596,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"3947:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1593,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3903:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1583,"id":1598,"nodeType":"Return","src":"3896:62:10"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"3578:128:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:10","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"target","nameLocation":"3747:6:10","nodeType":"VariableDeclaration","scope":1600,"src":"3739:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"data","nameLocation":"3768:4:10","nodeType":"VariableDeclaration","scope":1600,"src":"3755:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1578,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:10"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1600,"src":"3797:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:10"},"scope":1707,"src":"3711:254:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"4203:156:10","statements":[{"assignments":[1611,1613],"declarations":[{"constant":false,"id":1611,"mutability":"mutable","name":"success","nameLocation":"4219:7:10","nodeType":"VariableDeclaration","scope":1625,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:10","nodeType":"VariableDeclaration","scope":1625,"src":"4228:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"4275:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1614,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"4255:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:10"},{"expression":{"arguments":[{"id":1620,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"4324:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1621,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1622,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4341:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1619,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"4297:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1609,"id":1624,"nodeType":"Return","src":"4290:62:10"}]},"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"3971:130:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:10","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"target","nameLocation":"4144:6:10","nodeType":"VariableDeclaration","scope":1626,"src":"4136:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"data","nameLocation":"4165:4:10","nodeType":"VariableDeclaration","scope":1626,"src":"4152:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:10"},"returnParameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"4189:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1607,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:10"},"scope":1707,"src":"4106:253:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1665,"nodeType":"Block","src":"4783:424:10","statements":[{"condition":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:10","subExpression":{"id":1638,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1663,"nodeType":"Block","src":"4857:344:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1645,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"5045:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:10","memberName":"length","nodeType":"MemberAccess","src":"5045:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1649,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"5071:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:10","memberName":"code","nodeType":"MemberAccess","src":"5071:11:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:10","memberName":"length","nodeType":"MemberAccess","src":"5071:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1660,"nodeType":"IfStatement","src":"5041:119:10","trueBody":{"id":1659,"nodeType":"Block","src":"5096:64:10","statements":[{"errorCall":{"arguments":[{"id":1656,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"5138:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1655,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5121:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"RevertStatement","src":"5114:31:10"}]}},{"expression":{"id":1661,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"5180:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1637,"id":1662,"nodeType":"Return","src":"5173:17:10"}]},"id":1664,"nodeType":"IfStatement","src":"4793:408:10","trueBody":{"id":1644,"nodeType":"Block","src":"4807:44:10","statements":[{"expression":{"arguments":[{"id":1641,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"4829:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1640,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4821:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1643,"nodeType":"ExpressionStatement","src":"4821:19:10"}]}}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"4365:255:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:10","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"target","nameLocation":"4678:6:10","nodeType":"VariableDeclaration","scope":1666,"src":"4670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"success","nameLocation":"4699:7:10","nodeType":"VariableDeclaration","scope":1666,"src":"4694:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1630,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:10","nodeType":"VariableDeclaration","scope":1666,"src":"4716:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1632,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:10"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"4769:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1635,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:10"},"scope":1707,"src":"4625:582:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1687,"nodeType":"Block","src":"5509:122:10","statements":[{"condition":{"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:10","subExpression":{"id":1676,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5524:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1685,"nodeType":"Block","src":"5583:42:10","statements":[{"expression":{"id":1683,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5604:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1675,"id":1684,"nodeType":"Return","src":"5597:17:10"}]},"id":1686,"nodeType":"IfStatement","src":"5519:106:10","trueBody":{"id":1682,"nodeType":"Block","src":"5533:44:10","statements":[{"expression":{"arguments":[{"id":1679,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5555:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1678,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"5547:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1681,"nodeType":"ExpressionStatement","src":"5547:19:10"}]}}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"5213:189:10","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1688,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:10","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"success","nameLocation":"5438:7:10","nodeType":"VariableDeclaration","scope":1688,"src":"5433:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1668,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:10","nodeType":"VariableDeclaration","scope":1688,"src":"5447:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1670,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:10"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1688,"src":"5495:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:10"},"scope":1707,"src":"5407:224:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1705,"nodeType":"Block","src":"5798:461:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1694,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5874:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:10","memberName":"length","nodeType":"MemberAccess","src":"5874:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1703,"nodeType":"Block","src":"6204:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1700,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6225:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1702,"nodeType":"RevertStatement","src":"6218:24:10"}]},"id":1704,"nodeType":"IfStatement","src":"5870:383:10","trueBody":{"id":1699,"nodeType":"Block","src":"5897:301:10","statements":[{"AST":{"nativeSrc":"6055:133:10","nodeType":"YulBlock","src":"6055:133:10","statements":[{"nativeSrc":"6073:40:10","nodeType":"YulVariableDeclaration","src":"6073:40:10","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:10","nodeType":"YulIdentifier","src":"6102:10:10"}],"functionName":{"name":"mload","nativeSrc":"6096:5:10","nodeType":"YulIdentifier","src":"6096:5:10"},"nativeSrc":"6096:17:10","nodeType":"YulFunctionCall","src":"6096:17:10"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:10","nodeType":"YulTypedName","src":"6077:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:10","nodeType":"YulLiteral","src":"6141:2:10","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:10","nodeType":"YulIdentifier","src":"6145:10:10"}],"functionName":{"name":"add","nativeSrc":"6137:3:10","nodeType":"YulIdentifier","src":"6137:3:10"},"nativeSrc":"6137:19:10","nodeType":"YulFunctionCall","src":"6137:19:10"},{"name":"returndata_size","nativeSrc":"6158:15:10","nodeType":"YulIdentifier","src":"6158:15:10"}],"functionName":{"name":"revert","nativeSrc":"6130:6:10","nodeType":"YulIdentifier","src":"6130:6:10"},"nativeSrc":"6130:44:10","nodeType":"YulFunctionCall","src":"6130:44:10"},"nativeSrc":"6130:44:10","nodeType":"YulExpressionStatement","src":"6130:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1691,"isOffset":false,"isSlot":false,"src":"6102:10:10","valueSize":1},{"declaration":1691,"isOffset":false,"isSlot":false,"src":"6145:10:10","valueSize":1}],"id":1698,"nodeType":"InlineAssembly","src":"6046:142:10"}]}}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"5637:101:10","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:10","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:10","nodeType":"VariableDeclaration","scope":1706,"src":"5760:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1690,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:10"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[],"src":"5798:0:10"},"scope":1707,"src":"5743:516:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1708,"src":"195:6066:10","usedErrors":[1462,1467,1470],"usedEvents":[]}],"src":"101:6161:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1737]},"id":1738,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1709,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1737,"linearizedBaseContracts":[1737],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1718,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":1715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1714,"id":1717,"nodeType":"Return","src":"728:17:11"}]},"id":1719,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1719,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":1737,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1727,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":1724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1723,"id":1726,"nodeType":"Return","src":"835:15:11"}]},"id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1721,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":1737,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1735,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1732,"id":1734,"nodeType":"Return","src":"945:8:11"}]},"id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1736,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":1737,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1738,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1805]},"id":1806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"125:83:12","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1805,"linearizedBaseContracts":[1805],"name":"Nonces","nameLocation":"227:6:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"240:90:12","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1747,"name":"InvalidAccountNonce","nameLocation":"341:19:12","nodeType":"ErrorDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"account","nameLocation":"369:7:12","nodeType":"VariableDeclaration","scope":1747,"src":"361:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:12","nodeType":"VariableDeclaration","scope":1747,"src":"378:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:12"},"src":"335:65:12"},{"constant":false,"id":1751,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:12","nodeType":"VariableDeclaration","scope":1805,"src":"406:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1750,"keyName":"account","keyNameLocation":"422:7:12","keyType":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1763,"nodeType":"Block","src":"607:38:12","statements":[{"expression":{"baseExpression":{"id":1759,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"624:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1761,"indexExpression":{"id":1760,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"632:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1758,"id":1762,"nodeType":"Return","src":"617:21:12"}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"464:69:12","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:12","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"owner","nameLocation":"562:5:12","nodeType":"VariableDeclaration","scope":1764,"src":"554:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:12"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"598:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:12"},"scope":1805,"src":"538:107:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1778,"nodeType":"Block","src":"828:326:12","statements":[{"id":1777,"nodeType":"UncheckedBlock","src":"1031:117:12","statements":[{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:12","subExpression":{"baseExpression":{"id":1772,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"1121:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1774,"indexExpression":{"id":1773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1129:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1771,"id":1776,"nodeType":"Return","src":"1114:23:12"}]}]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"651:103:12","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:12","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"owner","nameLocation":"786:5:12","nodeType":"VariableDeclaration","scope":1779,"src":"778:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:12"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"819:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:12"},"scope":1805,"src":"759:395:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1803,"nodeType":"Block","src":"1338:149:12","statements":[{"assignments":[1788],"declarations":[{"constant":false,"id":1788,"mutability":"mutable","name":"current","nameLocation":"1356:7:12","nodeType":"VariableDeclaration","scope":1803,"src":"1348:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1792,"initialValue":{"arguments":[{"id":1790,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"1376:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1789,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1366:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1793,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"1396:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1794,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1802,"nodeType":"IfStatement","src":"1392:89:12","trueBody":{"id":1801,"nodeType":"Block","src":"1414:67:12","statements":[{"errorCall":{"arguments":[{"id":1797,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"1455:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1798,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1796,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"1435:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"RevertStatement","src":"1428:42:12"}]}}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"1160:100:12","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1804,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:12","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"owner","nameLocation":"1299:5:12","nodeType":"VariableDeclaration","scope":1804,"src":"1291:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:12","nodeType":"VariableDeclaration","scope":1804,"src":"1306:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:12"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"1338:0:12"},"scope":1805,"src":"1265:222:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1806,"src":"209:1280:12","usedErrors":[1747],"usedEvents":[]}],"src":"99:1391:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1874]},"id":1875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1807,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"135:750:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1874,"linearizedBaseContracts":[1874],"name":"ReentrancyGuard","nameLocation":"904:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1811,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:13","nodeType":"VariableDeclaration","scope":1874,"src":"1674:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1814,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:13","nodeType":"VariableDeclaration","scope":1874,"src":"1720:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1816,"mutability":"mutable","name":"_status","nameLocation":"1779:7:13","nodeType":"VariableDeclaration","scope":1874,"src":"1763:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"1793:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1819,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:13","nodeType":"ErrorDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[],"src":"1884:2:13"},"src":"1850:37:13"},{"body":{"id":1826,"nodeType":"Block","src":"1907:38:13","statements":[{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1822,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1823,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"1927:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1825,"nodeType":"ExpressionStatement","src":"1917:21:13"}]},"id":1827,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"1904:2:13"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":1874,"src":"1893:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1837,"nodeType":"Block","src":"2346:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1830,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"2356:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"2356:21:13"},{"id":1833,"nodeType":"PlaceholderStatement","src":"2387:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1834,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2398:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"2398:20:13"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"1951:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1838,"name":"nonReentrant","nameLocation":"2331:12:13","nodeType":"ModifierDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"2343:2:13"},"src":"2322:103:13","virtual":false,"visibility":"internal"},{"body":{"id":1853,"nodeType":"Block","src":"2470:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1842,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"nodeType":"IfStatement","src":"2554:86:13","trueBody":{"id":1847,"nodeType":"Block","src":"2578:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1844,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"2599:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"RevertStatement","src":"2592:37:13"}]}},{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1849,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1850,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ExpressionStatement","src":"2714:17:13"}]},"id":1854,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:13","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[],"src":"2459:2:13"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"2470:0:13"},"scope":1874,"src":"2431:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1861,"nodeType":"Block","src":"2782:170:13","statements":[{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1857,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1858,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1860,"nodeType":"ExpressionStatement","src":"2924:21:13"}]},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:13","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"2782:0:13"},"scope":1874,"src":"2744:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1872,"nodeType":"Block","src":"3195:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"3212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1869,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"3223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1867,"id":1871,"nodeType":"Return","src":"3205:25:13"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"2958:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:13","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[],"src":"3163:2:13"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"3189:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1865,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:13"},"scope":1874,"src":"3131:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1875,"src":"886:2353:13","usedErrors":[1819],"usedEvents":[]}],"src":"109:3131:13"},"id":13},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1880],"ShortStrings":[2091],"StorageSlot":[2201]},"id":2092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1876,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1878,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2092,"sourceUnit":2202,"src":"132:46:14","symbolAliases":[{"foreign":{"id":1877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"140:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1880,"name":"ShortString","nameLocation":"353:11:14","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:14","underlyingType":{"id":1879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"378:876:14","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2091,"linearizedBaseContracts":[2091],"name":"ShortStrings","nameLocation":"1263:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1884,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:14","nodeType":"VariableDeclaration","scope":2091,"src":"1345:111:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1888,"name":"StringTooLong","nameLocation":"1469:13:14","nodeType":"ErrorDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"str","nameLocation":"1490:3:14","nodeType":"VariableDeclaration","scope":1888,"src":"1483:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:14"},"src":"1463:32:14"},{"errorSelector":"b3512b0c","id":1890,"name":"InvalidShortString","nameLocation":"1506:18:14","nodeType":"ErrorDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"1524:2:14"},"src":"1500:27:14"},{"body":{"id":1933,"nodeType":"Block","src":"1786:208:14","statements":[{"assignments":[1900],"declarations":[{"constant":false,"id":1900,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:14","nodeType":"VariableDeclaration","scope":1933,"src":"1796:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1905,"initialValue":{"arguments":[{"id":1903,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"1822:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:14","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1906,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1840:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:14","memberName":"length","nodeType":"MemberAccess","src":"1840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1915,"nodeType":"IfStatement","src":"1836:72:14","trueBody":{"id":1914,"nodeType":"Block","src":"1858:50:14","statements":[{"errorCall":{"arguments":[{"id":1911,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1910,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"1879:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"RevertStatement","src":"1872:25:14"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1924,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1965:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:14","typeDescriptions":{}}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:14","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1927,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1974:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:14","memberName":"length","nodeType":"MemberAccess","src":"1974:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:14","typeDescriptions":{}}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1916,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1924:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"type(ShortString)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"functionReturnParameters":1898,"id":1932,"nodeType":"Return","src":"1917:70:14"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"1533:170:14","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:14","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"str","nameLocation":"1745:3:14","nodeType":"VariableDeclaration","scope":1934,"src":"1731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1892,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:14"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1934,"src":"1773:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":1896,"nodeType":"UserDefinedTypeName","pathNode":{"id":1895,"name":"ShortString","nameLocations":["1773:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"1773:11:14"},"referencedDeclaration":1880,"src":"1773:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:14"},"scope":2091,"src":"1708:286:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1959,"nodeType":"Block","src":"2152:331:14","statements":[{"assignments":[1944],"declarations":[{"constant":false,"id":1944,"mutability":"mutable","name":"len","nameLocation":"2170:3:14","nodeType":"VariableDeclaration","scope":1959,"src":"2162:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1948,"initialValue":{"arguments":[{"id":1946,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2187:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}],"id":1945,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1880_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:14"},{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"str","nameLocation":"2294:3:14","nodeType":"VariableDeclaration","scope":1959,"src":"2280:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1955,"initialValue":{"arguments":[{"hexValue":"3332","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1951,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:14"},{"AST":{"nativeSrc":"2376:81:14","nodeType":"YulBlock","src":"2376:81:14","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:14","nodeType":"YulIdentifier","src":"2397:3:14"},{"name":"len","nativeSrc":"2402:3:14","nodeType":"YulIdentifier","src":"2402:3:14"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:14","nodeType":"YulIdentifier","src":"2390:6:14"},"nativeSrc":"2390:16:14","nodeType":"YulFunctionCall","src":"2390:16:14"},"nativeSrc":"2390:16:14","nodeType":"YulExpressionStatement","src":"2390:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:14","nodeType":"YulIdentifier","src":"2430:3:14"},{"kind":"number","nativeSrc":"2435:4:14","nodeType":"YulLiteral","src":"2435:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:14","nodeType":"YulIdentifier","src":"2426:3:14"},"nativeSrc":"2426:14:14","nodeType":"YulFunctionCall","src":"2426:14:14"},{"name":"sstr","nativeSrc":"2442:4:14","nodeType":"YulIdentifier","src":"2442:4:14"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:14","nodeType":"YulIdentifier","src":"2419:6:14"},"nativeSrc":"2419:28:14","nodeType":"YulFunctionCall","src":"2419:28:14"},"nativeSrc":"2419:28:14","nodeType":"YulExpressionStatement","src":"2419:28:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1944,"isOffset":false,"isSlot":false,"src":"2402:3:14","valueSize":1},{"declaration":1938,"isOffset":false,"isSlot":false,"src":"2442:4:14","valueSize":1},{"declaration":1950,"isOffset":false,"isSlot":false,"src":"2397:3:14","valueSize":1},{"declaration":1950,"isOffset":false,"isSlot":false,"src":"2430:3:14","valueSize":1}],"id":1956,"nodeType":"InlineAssembly","src":"2367:90:14"},{"expression":{"id":1957,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2473:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1942,"id":1958,"nodeType":"Return","src":"2466:10:14"}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"2000:73:14","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:14","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:14","nodeType":"VariableDeclaration","scope":1960,"src":"2096:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":1937,"nodeType":"UserDefinedTypeName","pathNode":{"id":1936,"name":"ShortString","nameLocations":["2096:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"2096:11:14"},"referencedDeclaration":1880,"src":"2096:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:14"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"2137:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:14"},"scope":2091,"src":"2078:405:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1991,"nodeType":"Block","src":"2625:175:14","statements":[{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"result","nameLocation":"2643:6:14","nodeType":"VariableDeclaration","scope":1991,"src":"2635:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1980,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1975,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"2679:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}],"expression":{"id":1973,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2660:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"type(ShortString)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1880_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:14","typeDescriptions":{}}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2706:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1988,"nodeType":"IfStatement","src":"2702:69:14","trueBody":{"id":1987,"nodeType":"Block","src":"2719:52:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1984,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"2740:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"RevertStatement","src":"2733:27:14"}]}},{"expression":{"id":1989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2787:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1968,"id":1990,"nodeType":"Return","src":"2780:13:14"}]},"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"2489:61:14","text":" @dev Return the length of a `ShortString`."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:14","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:14","nodeType":"VariableDeclaration","scope":1992,"src":"2575:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":1963,"nodeType":"UserDefinedTypeName","pathNode":{"id":1962,"name":"ShortString","nameLocations":["2575:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"2575:11:14"},"referencedDeclaration":1880,"src":"2575:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:14"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"2616:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:14"},"scope":2091,"src":"2555:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2031,"nodeType":"Block","src":"3023:231:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3043:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2003,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:14","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:14","memberName":"length","nodeType":"MemberAccess","src":"3037:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2029,"nodeType":"Block","src":"3121:127:14","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2018,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"3161:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2015,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3135:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2201_$","typeString":"type(library StorageSlot)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2178,"src":"3135:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2109_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2109_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2108,"src":"3135:38:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3176:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2023,"nodeType":"ExpressionStatement","src":"3135:46:14"},{"expression":{"arguments":[{"id":2026,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"3219:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2024,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3202:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"type(ShortString)"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"functionReturnParameters":2002,"id":2028,"nodeType":"Return","src":"3195:42:14"}]},"id":2030,"nodeType":"IfStatement","src":"3033:215:14","trueBody":{"id":2014,"nodeType":"Block","src":"3063:52:14","statements":[{"expression":{"arguments":[{"id":2011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3098:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2010,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3084:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"functionReturnParameters":2002,"id":2013,"nodeType":"Return","src":"3077:27:14"}]}}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"2806:103:14","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2032,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:14","nodeType":"FunctionDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"2963:5:14","nodeType":"VariableDeclaration","scope":2032,"src":"2949:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1994,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"store","nameLocation":"2985:5:14","nodeType":"VariableDeclaration","scope":2032,"src":"2970:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1996,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:14"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2032,"src":"3010:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":2000,"nodeType":"UserDefinedTypeName","pathNode":{"id":1999,"name":"ShortString","nameLocations":["3010:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"3010:11:14"},"referencedDeclaration":1880,"src":"3010:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:14"},"scope":2091,"src":"2914:340:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2058,"nodeType":"Block","src":"3494:158:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3527:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}],"expression":{"id":2043,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3508:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"type(ShortString)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1880_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2047,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"3537:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2056,"nodeType":"Block","src":"3609:37:14","statements":[{"expression":{"id":2054,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"3630:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2042,"id":2055,"nodeType":"Return","src":"3623:12:14"}]},"id":2057,"nodeType":"IfStatement","src":"3504:142:14","trueBody":{"id":2053,"nodeType":"Block","src":"3556:47:14","statements":[{"expression":{"arguments":[{"id":2050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3586:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}],"id":2049,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3577:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1880_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2042,"id":2052,"nodeType":"Return","src":"3570:22:14"}]}}]},"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"3260:120:14","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:14","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"value","nameLocation":"3427:5:14","nodeType":"VariableDeclaration","scope":2059,"src":"3415:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":2035,"nodeType":"UserDefinedTypeName","pathNode":{"id":2034,"name":"ShortString","nameLocations":["3415:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"3415:11:14"},"referencedDeclaration":1880,"src":"3415:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"store","nameLocation":"3449:5:14","nodeType":"VariableDeclaration","scope":2059,"src":"3434:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2037,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:14"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2059,"src":"3479:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2040,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:14"},"scope":2091,"src":"3385:267:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2089,"nodeType":"Block","src":"4132:174:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"4165:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}],"expression":{"id":2070,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"4146:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"type(ShortString)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1880_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2074,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4175:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2087,"nodeType":"Block","src":"4249:51:14","statements":[{"expression":{"expression":{"arguments":[{"id":2083,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"4276:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2081,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:14","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:14","memberName":"length","nodeType":"MemberAccess","src":"4270:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2069,"id":2086,"nodeType":"Return","src":"4263:26:14"}]},"id":2088,"nodeType":"IfStatement","src":"4142:158:14","trueBody":{"id":2080,"nodeType":"Block","src":"4194:49:14","statements":[{"expression":{"arguments":[{"id":2077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"4226:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}],"id":2076,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"4215:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1880_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2069,"id":2079,"nodeType":"Return","src":"4208:24:14"}]}}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"3658:364:14","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:14","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"value","nameLocation":"4071:5:14","nodeType":"VariableDeclaration","scope":2090,"src":"4059:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"ShortString","nameLocations":["4059:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"4059:11:14"},"referencedDeclaration":1880,"src":"4059:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"store","nameLocation":"4093:5:14","nodeType":"VariableDeclaration","scope":2090,"src":"4078:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2064,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:14"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"4123:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:14"},"scope":2091,"src":"4027:279:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2092,"src":"1255:3053:14","usedErrors":[1888,1890],"usedEvents":[]}],"src":"106:4203:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2201]},"id":2202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2093,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"219:1025:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2201,"linearizedBaseContracts":[2201],"name":"StorageSlot","nameLocation":"1253:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2097,"members":[{"constant":false,"id":2096,"mutability":"mutable","name":"value","nameLocation":"1308:5:15","nodeType":"VariableDeclaration","scope":2097,"src":"1300:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:15","nodeType":"StructDefinition","scope":2201,"src":"1271:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2100,"members":[{"constant":false,"id":2099,"mutability":"mutable","name":"value","nameLocation":"1360:5:15","nodeType":"VariableDeclaration","scope":2100,"src":"1355:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:15","nodeType":"StructDefinition","scope":2201,"src":"1326:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2103,"members":[{"constant":false,"id":2102,"mutability":"mutable","name":"value","nameLocation":"1415:5:15","nodeType":"VariableDeclaration","scope":2103,"src":"1407:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:15","nodeType":"StructDefinition","scope":2201,"src":"1378:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2106,"members":[{"constant":false,"id":2105,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":2106,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":2201,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2109,"members":[{"constant":false,"id":2108,"mutability":"mutable","name":"value","nameLocation":"1523:5:15","nodeType":"VariableDeclaration","scope":2109,"src":"1516:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2107,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:15","nodeType":"StructDefinition","scope":2201,"src":"1488:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2112,"members":[{"constant":false,"id":2111,"mutability":"mutable","name":"value","nameLocation":"1574:5:15","nodeType":"VariableDeclaration","scope":2112,"src":"1568:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2110,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:15","nodeType":"StructDefinition","scope":2201,"src":"1541:45:15","visibility":"public"},{"body":{"id":2122,"nodeType":"Block","src":"1768:106:15","statements":[{"AST":{"nativeSrc":"1830:38:15","nodeType":"YulBlock","src":"1830:38:15","statements":[{"nativeSrc":"1844:14:15","nodeType":"YulAssignment","src":"1844:14:15","value":{"name":"slot","nativeSrc":"1854:4:15","nodeType":"YulIdentifier","src":"1854:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:15","nodeType":"YulIdentifier","src":"1844:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2119,"isOffset":false,"isSlot":true,"src":"1844:6:15","suffix":"slot","valueSize":1},{"declaration":2115,"isOffset":false,"isSlot":false,"src":"1854:4:15","valueSize":1}],"id":2121,"nodeType":"InlineAssembly","src":"1821:47:15"}]},"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"1592:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2123,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:15","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"slot","nameLocation":"1716:4:15","nodeType":"VariableDeclaration","scope":2123,"src":"1708:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:15"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"r","nameLocation":"1765:1:15","nodeType":"VariableDeclaration","scope":2123,"src":"1745:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2097_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2118,"nodeType":"UserDefinedTypeName","pathNode":{"id":2117,"name":"AddressSlot","nameLocations":["1745:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2097,"src":"1745:11:15"},"referencedDeclaration":2097,"src":"1745:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2097_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:15"},"scope":2201,"src":"1684:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"2056:106:15","statements":[{"AST":{"nativeSrc":"2118:38:15","nodeType":"YulBlock","src":"2118:38:15","statements":[{"nativeSrc":"2132:14:15","nodeType":"YulAssignment","src":"2132:14:15","value":{"name":"slot","nativeSrc":"2142:4:15","nodeType":"YulIdentifier","src":"2142:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:15","nodeType":"YulIdentifier","src":"2132:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2130,"isOffset":false,"isSlot":true,"src":"2132:6:15","suffix":"slot","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"2142:4:15","valueSize":1}],"id":2132,"nodeType":"InlineAssembly","src":"2109:47:15"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"1880:87:15","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:15","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"slot","nameLocation":"2004:4:15","nodeType":"VariableDeclaration","scope":2134,"src":"1996:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:15"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"r","nameLocation":"2053:1:15","nodeType":"VariableDeclaration","scope":2134,"src":"2033:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2100_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2129,"nodeType":"UserDefinedTypeName","pathNode":{"id":2128,"name":"BooleanSlot","nameLocations":["2033:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2100,"src":"2033:11:15"},"referencedDeclaration":2100,"src":"2033:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2100_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:15"},"scope":2201,"src":"1972:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2144,"nodeType":"Block","src":"2344:106:15","statements":[{"AST":{"nativeSrc":"2406:38:15","nodeType":"YulBlock","src":"2406:38:15","statements":[{"nativeSrc":"2420:14:15","nodeType":"YulAssignment","src":"2420:14:15","value":{"name":"slot","nativeSrc":"2430:4:15","nodeType":"YulIdentifier","src":"2430:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:15","nodeType":"YulIdentifier","src":"2420:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2141,"isOffset":false,"isSlot":true,"src":"2420:6:15","suffix":"slot","valueSize":1},{"declaration":2137,"isOffset":false,"isSlot":false,"src":"2430:4:15","valueSize":1}],"id":2143,"nodeType":"InlineAssembly","src":"2397:47:15"}]},"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"2168:87:15","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2145,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:15","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"slot","nameLocation":"2292:4:15","nodeType":"VariableDeclaration","scope":2145,"src":"2284:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:15"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"r","nameLocation":"2341:1:15","nodeType":"VariableDeclaration","scope":2145,"src":"2321:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2103_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2140,"nodeType":"UserDefinedTypeName","pathNode":{"id":2139,"name":"Bytes32Slot","nameLocations":["2321:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2103,"src":"2321:11:15"},"referencedDeclaration":2103,"src":"2321:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2103_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:15"},"scope":2201,"src":"2260:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"2632:106:15","statements":[{"AST":{"nativeSrc":"2694:38:15","nodeType":"YulBlock","src":"2694:38:15","statements":[{"nativeSrc":"2708:14:15","nodeType":"YulAssignment","src":"2708:14:15","value":{"name":"slot","nativeSrc":"2718:4:15","nodeType":"YulIdentifier","src":"2718:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:15","nodeType":"YulIdentifier","src":"2708:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2152,"isOffset":false,"isSlot":true,"src":"2708:6:15","suffix":"slot","valueSize":1},{"declaration":2148,"isOffset":false,"isSlot":false,"src":"2718:4:15","valueSize":1}],"id":2154,"nodeType":"InlineAssembly","src":"2685:47:15"}]},"documentation":{"id":2146,"nodeType":"StructuredDocumentation","src":"2456:87:15","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:15","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"slot","nameLocation":"2580:4:15","nodeType":"VariableDeclaration","scope":2156,"src":"2572:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:15"},"returnParameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"r","nameLocation":"2629:1:15","nodeType":"VariableDeclaration","scope":2156,"src":"2609:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2106_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2151,"nodeType":"UserDefinedTypeName","pathNode":{"id":2150,"name":"Uint256Slot","nameLocations":["2609:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2106,"src":"2609:11:15"},"referencedDeclaration":2106,"src":"2609:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2106_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:15"},"scope":2201,"src":"2548:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2166,"nodeType":"Block","src":"2917:106:15","statements":[{"AST":{"nativeSrc":"2979:38:15","nodeType":"YulBlock","src":"2979:38:15","statements":[{"nativeSrc":"2993:14:15","nodeType":"YulAssignment","src":"2993:14:15","value":{"name":"slot","nativeSrc":"3003:4:15","nodeType":"YulIdentifier","src":"3003:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:15","nodeType":"YulIdentifier","src":"2993:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2163,"isOffset":false,"isSlot":true,"src":"2993:6:15","suffix":"slot","valueSize":1},{"declaration":2159,"isOffset":false,"isSlot":false,"src":"3003:4:15","valueSize":1}],"id":2165,"nodeType":"InlineAssembly","src":"2970:47:15"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"2744:86:15","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:15","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"slot","nameLocation":"2866:4:15","nodeType":"VariableDeclaration","scope":2167,"src":"2858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:15"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"r","nameLocation":"2914:1:15","nodeType":"VariableDeclaration","scope":2167,"src":"2895:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2109_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2162,"nodeType":"UserDefinedTypeName","pathNode":{"id":2161,"name":"StringSlot","nameLocations":["2895:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2109,"src":"2895:10:15"},"referencedDeclaration":2109,"src":"2895:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2109_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:15"},"scope":2201,"src":"2835:188:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2177,"nodeType":"Block","src":"3225:112:15","statements":[{"AST":{"nativeSrc":"3287:44:15","nodeType":"YulBlock","src":"3287:44:15","statements":[{"nativeSrc":"3301:20:15","nodeType":"YulAssignment","src":"3301:20:15","value":{"name":"store.slot","nativeSrc":"3311:10:15","nodeType":"YulIdentifier","src":"3311:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:15","nodeType":"YulIdentifier","src":"3301:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2174,"isOffset":false,"isSlot":true,"src":"3301:6:15","suffix":"slot","valueSize":1},{"declaration":2170,"isOffset":false,"isSlot":true,"src":"3311:10:15","suffix":"slot","valueSize":1}],"id":2176,"nodeType":"InlineAssembly","src":"3278:53:15"}]},"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"3029:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2178,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:15","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"store","nameLocation":"3173:5:15","nodeType":"VariableDeclaration","scope":2178,"src":"3158:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2169,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:15"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"r","nameLocation":"3222:1:15","nodeType":"VariableDeclaration","scope":2178,"src":"3203:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2109_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2173,"nodeType":"UserDefinedTypeName","pathNode":{"id":2172,"name":"StringSlot","nameLocations":["3203:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2109,"src":"3203:10:15"},"referencedDeclaration":2109,"src":"3203:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2109_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:15"},"scope":2201,"src":"3135:202:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2188,"nodeType":"Block","src":"3513:106:15","statements":[{"AST":{"nativeSrc":"3575:38:15","nodeType":"YulBlock","src":"3575:38:15","statements":[{"nativeSrc":"3589:14:15","nodeType":"YulAssignment","src":"3589:14:15","value":{"name":"slot","nativeSrc":"3599:4:15","nodeType":"YulIdentifier","src":"3599:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:15","nodeType":"YulIdentifier","src":"3589:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2185,"isOffset":false,"isSlot":true,"src":"3589:6:15","suffix":"slot","valueSize":1},{"declaration":2181,"isOffset":false,"isSlot":false,"src":"3599:4:15","valueSize":1}],"id":2187,"nodeType":"InlineAssembly","src":"3566:47:15"}]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"3343:85:15","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2189,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:15","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"slot","nameLocation":"3463:4:15","nodeType":"VariableDeclaration","scope":2189,"src":"3455:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:15"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"r","nameLocation":"3510:1:15","nodeType":"VariableDeclaration","scope":2189,"src":"3492:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2112_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2184,"nodeType":"UserDefinedTypeName","pathNode":{"id":2183,"name":"BytesSlot","nameLocations":["3492:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2112,"src":"3492:9:15"},"referencedDeclaration":2112,"src":"3492:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2112_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:15"},"scope":2201,"src":"3433:186:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"3816:112:15","statements":[{"AST":{"nativeSrc":"3878:44:15","nodeType":"YulBlock","src":"3878:44:15","statements":[{"nativeSrc":"3892:20:15","nodeType":"YulAssignment","src":"3892:20:15","value":{"name":"store.slot","nativeSrc":"3902:10:15","nodeType":"YulIdentifier","src":"3902:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:15","nodeType":"YulIdentifier","src":"3892:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2196,"isOffset":false,"isSlot":true,"src":"3892:6:15","suffix":"slot","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":true,"src":"3902:10:15","suffix":"slot","valueSize":1}],"id":2198,"nodeType":"InlineAssembly","src":"3869:53:15"}]},"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"3625:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:15","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"store","nameLocation":"3765:5:15","nodeType":"VariableDeclaration","scope":2200,"src":"3751:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2191,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:15"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"r","nameLocation":"3813:1:15","nodeType":"VariableDeclaration","scope":2200,"src":"3795:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2112_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2195,"nodeType":"UserDefinedTypeName","pathNode":{"id":2194,"name":"BytesSlot","nameLocations":["3795:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2112,"src":"3795:9:15"},"referencedDeclaration":2112,"src":"3795:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2112_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:15"},"scope":2201,"src":"3729:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2202,"src":"1245:2685:15","usedErrors":[],"usedEvents":[]}],"src":"193:3738:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4159],"SignedMath":[4264],"Strings":[2456]},"id":2457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2457,"sourceUnit":4160,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2204,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2457,"sourceUnit":4265,"src":"165:49:16","symbolAliases":[{"foreign":{"id":2206,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"173:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"216:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":2456,"linearizedBaseContracts":[2456],"name":"Strings","nameLocation":"259:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2211,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:16","nodeType":"VariableDeclaration","scope":2456,"src":"273:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2209,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2214,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:16","nodeType":"VariableDeclaration","scope":2456,"src":"335:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2212,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"384:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2221,"name":"StringsInsufficientHexLength","nameLocation":"476:28:16","nodeType":"ErrorDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"value","nameLocation":"513:5:16","nodeType":"VariableDeclaration","scope":2221,"src":"505:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"length","nameLocation":"528:6:16","nodeType":"VariableDeclaration","scope":2221,"src":"520:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:16"},"src":"470:66:16"},{"body":{"id":2268,"nodeType":"Block","src":"708:627:16","statements":[{"id":2267,"nodeType":"UncheckedBlock","src":"718:611:16","statements":[{"assignments":[2230],"declarations":[{"constant":false,"id":2230,"mutability":"mutable","name":"length","nameLocation":"750:6:16","nodeType":"VariableDeclaration","scope":2267,"src":"742:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2237,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2231,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"759:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4159_$","typeString":"type(library Math)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"759:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:16"},{"assignments":[2239],"declarations":[{"constant":false,"id":2239,"mutability":"mutable","name":"buffer","nameLocation":"808:6:16","nodeType":"VariableDeclaration","scope":2267,"src":"794:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2238,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2244,"initialValue":{"arguments":[{"id":2242,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"828:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2240,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:16"},{"assignments":[2246],"declarations":[{"constant":false,"id":2246,"mutability":"mutable","name":"ptr","nameLocation":"857:3:16","nodeType":"VariableDeclaration","scope":2267,"src":"849:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2247,"nodeType":"VariableDeclarationStatement","src":"849:11:16"},{"AST":{"nativeSrc":"930:67:16","nodeType":"YulBlock","src":"930:67:16","statements":[{"nativeSrc":"948:35:16","nodeType":"YulAssignment","src":"948:35:16","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:16","nodeType":"YulIdentifier","src":"959:6:16"},{"arguments":[{"kind":"number","nativeSrc":"971:2:16","nodeType":"YulLiteral","src":"971:2:16","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:16","nodeType":"YulIdentifier","src":"975:6:16"}],"functionName":{"name":"add","nativeSrc":"967:3:16","nodeType":"YulIdentifier","src":"967:3:16"},"nativeSrc":"967:15:16","nodeType":"YulFunctionCall","src":"967:15:16"}],"functionName":{"name":"add","nativeSrc":"955:3:16","nodeType":"YulIdentifier","src":"955:3:16"},"nativeSrc":"955:28:16","nodeType":"YulFunctionCall","src":"955:28:16"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:16","nodeType":"YulIdentifier","src":"948:3:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2239,"isOffset":false,"isSlot":false,"src":"959:6:16","valueSize":1},{"declaration":2230,"isOffset":false,"isSlot":false,"src":"975:6:16","valueSize":1},{"declaration":2246,"isOffset":false,"isSlot":false,"src":"948:3:16","valueSize":1}],"id":2248,"nodeType":"InlineAssembly","src":"921:76:16"},{"body":{"id":2263,"nodeType":"Block","src":"1023:269:16","statements":[{"expression":{"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:16","subExpression":{"id":2250,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"1041:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2252,"nodeType":"ExpressionStatement","src":"1041:5:16"},{"AST":{"nativeSrc":"1124:86:16","nodeType":"YulBlock","src":"1124:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:16","nodeType":"YulIdentifier","src":"1154:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:16","nodeType":"YulIdentifier","src":"1168:5:16"},{"kind":"number","nativeSrc":"1175:2:16","nodeType":"YulLiteral","src":"1175:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:16","nodeType":"YulIdentifier","src":"1164:3:16"},"nativeSrc":"1164:14:16","nodeType":"YulFunctionCall","src":"1164:14:16"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:16","nodeType":"YulIdentifier","src":"1180:10:16"}],"functionName":{"name":"byte","nativeSrc":"1159:4:16","nodeType":"YulIdentifier","src":"1159:4:16"},"nativeSrc":"1159:32:16","nodeType":"YulFunctionCall","src":"1159:32:16"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:16","nodeType":"YulIdentifier","src":"1146:7:16"},"nativeSrc":"1146:46:16","nodeType":"YulFunctionCall","src":"1146:46:16"},"nativeSrc":"1146:46:16","nodeType":"YulExpressionStatement","src":"1146:46:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2211,"isOffset":false,"isSlot":false,"src":"1180:10:16","valueSize":1},{"declaration":2246,"isOffset":false,"isSlot":false,"src":"1154:3:16","valueSize":1},{"declaration":2224,"isOffset":false,"isSlot":false,"src":"1168:5:16","valueSize":1}],"id":2253,"nodeType":"InlineAssembly","src":"1115:95:16"},{"expression":{"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1227:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2257,"nodeType":"ExpressionStatement","src":"1227:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1260:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2262,"nodeType":"IfStatement","src":"1256:21:16","trueBody":{"id":2261,"nodeType":"Break","src":"1272:5:16"}}]},"condition":{"hexValue":"74727565","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2264,"nodeType":"WhileStatement","src":"1010:282:16"},{"expression":{"id":2265,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"1312:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2228,"id":2266,"nodeType":"Return","src":"1305:13:16"}]}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"542:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:16","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"value","nameLocation":"663:5:16","nodeType":"VariableDeclaration","scope":2269,"src":"655:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:16"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"693:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2226,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:16"},"scope":2456,"src":"637:698:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"1511:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"1542:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:16","trueExpression":{"hexValue":"2d","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"1588:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2287,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"1573:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4264_$","typeString":"type(library SignedMath)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4263,"src":"1573:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1564:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2277,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:16","typeDescriptions":{}}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:16","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2276,"id":2293,"nodeType":"Return","src":"1521:75:16"}]},"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"1341:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:16","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"value","nameLocation":"1466:5:16","nodeType":"VariableDeclaration","scope":2295,"src":"1459:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2271,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:16"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"1496:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2274,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:16"},"scope":2456,"src":"1435:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"1782:100:16","statements":[{"id":2313,"nodeType":"UncheckedBlock","src":"1792:84:16","statements":[{"expression":{"arguments":[{"id":2304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1835:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1854:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2305,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"1842:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4159_$","typeString":"type(library Math)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4101,"src":"1842:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2315,2398,2418],"referencedDeclaration":2398,"src":"1823:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2302,"id":2312,"nodeType":"Return","src":"1816:49:16"}]}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"1609:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:16","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"value","nameLocation":"1737:5:16","nodeType":"VariableDeclaration","scope":2315,"src":"1729:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:16"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"1767:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2300,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:16"},"scope":2456,"src":"1708:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2397,"nodeType":"Block","src":"2095:435:16","statements":[{"assignments":[2326],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:16","nodeType":"VariableDeclaration","scope":2397,"src":"2105:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2328,"initialValue":{"id":2327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2126:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:16"},{"assignments":[2330],"declarations":[{"constant":false,"id":2330,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:16","nodeType":"VariableDeclaration","scope":2397,"src":"2141:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2329,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2339,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2334,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2177:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2331,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:16"},{"expression":{"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2340,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"2198:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2342,"indexExpression":{"hexValue":"30","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2345,"nodeType":"ExpressionStatement","src":"2198:15:16"},{"expression":{"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2346,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"2223:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2348,"indexExpression":{"hexValue":"31","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2351,"nodeType":"ExpressionStatement","src":"2223:15:16"},{"body":{"id":2380,"nodeType":"Block","src":"2293:95:16","statements":[{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2366,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"2307:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2368,"indexExpression":{"id":2367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2314:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2369,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2319:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2373,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2370,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2330:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2375,"nodeType":"ExpressionStatement","src":"2307:40:16"},{"expression":{"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2376,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2361:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2379,"nodeType":"ExpressionStatement","src":"2361:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2281:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2381,"initializationExpression":{"assignments":[2353],"declarations":[{"constant":false,"id":2353,"mutability":"mutable","name":"i","nameLocation":"2261:1:16","nodeType":"VariableDeclaration","scope":2381,"src":"2253:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2359,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2355,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2269:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:16","subExpression":{"id":2363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2290:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"2288:3:16"},"nodeType":"ForStatement","src":"2248:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2382,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2401:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2391,"nodeType":"IfStatement","src":"2397:96:16","trueBody":{"id":2390,"nodeType":"Block","src":"2418:75:16","statements":[{"errorCall":{"arguments":[{"id":2386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2468:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2387,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2475:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2385,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2439:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"RevertStatement","src":"2432:50:16"}]}},{"expression":{"arguments":[{"id":2394,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"2516:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2392,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:16","typeDescriptions":{}}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2324,"id":2396,"nodeType":"Return","src":"2502:21:16"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"1888:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:16","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"value","nameLocation":"2034:5:16","nodeType":"VariableDeclaration","scope":2398,"src":"2026:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"length","nameLocation":"2049:6:16","nodeType":"VariableDeclaration","scope":2398,"src":"2041:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:16"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"2080:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:16"},"scope":2456,"src":"2005:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"2762:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2411,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2807:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2409,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:16","typeDescriptions":{}}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:16","typeDescriptions":{}}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2414,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2815:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2406,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2315,2398,2418],"referencedDeclaration":2398,"src":"2779:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2405,"id":2416,"nodeType":"Return","src":"2772:58:16"}]},"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"2536:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:16","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"addr","nameLocation":"2718:4:16","nodeType":"VariableDeclaration","scope":2418,"src":"2710:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:16"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"2747:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2403,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:16"},"scope":2456,"src":"2689:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2454,"nodeType":"Block","src":"2992:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3015:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2428,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:16","typeDescriptions":{}}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:16","memberName":"length","nodeType":"MemberAccess","src":"3009:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2435,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"3034:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2433,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:16","typeDescriptions":{}}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:16","memberName":"length","nodeType":"MemberAccess","src":"3028:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3063:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:16","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2439,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"3086:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2446,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:16","typeDescriptions":{}}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2445,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2427,"id":2453,"nodeType":"Return","src":"3002:87:16"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"2843:66:16","text":" @dev Returns true if the two strings are equal."},"id":2455,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:16","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"a","nameLocation":"2943:1:16","nodeType":"VariableDeclaration","scope":2455,"src":"2929:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2420,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"b","nameLocation":"2960:1:16","nodeType":"VariableDeclaration","scope":2455,"src":"2946:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2422,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:16"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2455,"src":"2986:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2425,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:16"},"scope":2456,"src":"2914:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2457,"src":"251:2847:16","usedErrors":[2221],"usedEvents":[]}],"src":"101:2998:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2804]},"id":2805,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2458,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"138:205:17","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2804,"linearizedBaseContracts":[2804],"name":"ECDSA","nameLocation":"352:5:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2464,"members":[{"id":2460,"name":"NoError","nameLocation":"392:7:17","nodeType":"EnumValue","src":"392:7:17"},{"id":2461,"name":"InvalidSignature","nameLocation":"409:16:17","nodeType":"EnumValue","src":"409:16:17"},{"id":2462,"name":"InvalidSignatureLength","nameLocation":"435:22:17","nodeType":"EnumValue","src":"435:22:17"},{"id":2463,"name":"InvalidSignatureS","nameLocation":"467:17:17","nodeType":"EnumValue","src":"467:17:17"}],"name":"RecoverError","nameLocation":"369:12:17","nodeType":"EnumDefinition","src":"364:126:17"},{"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"496:63:17","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2467,"name":"ECDSAInvalidSignature","nameLocation":"570:21:17","nodeType":"ErrorDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[],"src":"591:2:17"},"src":"564:30:17"},{"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"600:60:17","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2472,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:17","nodeType":"ErrorDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"length","nameLocation":"707:6:17","nodeType":"VariableDeclaration","scope":2472,"src":"699:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:17"},"src":"665:50:17"},{"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"721:85:17","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2477,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:17","nodeType":"ErrorDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"s","nameLocation":"848:1:17","nodeType":"VariableDeclaration","scope":2477,"src":"840:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:17"},"src":"811:40:17"},{"body":{"id":2529,"nodeType":"Block","src":"2242:653:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2492,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2256:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:17","memberName":"length","nodeType":"MemberAccess","src":"2256:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2527,"nodeType":"Block","src":"2781:108:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:17","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2518,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2815:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2462,"src":"2815:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2522,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2860:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:17","memberName":"length","nodeType":"MemberAccess","src":"2860:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:17","typeDescriptions":{}}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2491,"id":2526,"nodeType":"Return","src":"2795:83:17"}]},"id":2528,"nodeType":"IfStatement","src":"2252:637:17","trueBody":{"id":2513,"nodeType":"Block","src":"2280:495:17","statements":[{"assignments":[2497],"declarations":[{"constant":false,"id":2497,"mutability":"mutable","name":"r","nameLocation":"2302:1:17","nodeType":"VariableDeclaration","scope":2513,"src":"2294:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2498,"nodeType":"VariableDeclarationStatement","src":"2294:9:17"},{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"s","nameLocation":"2325:1:17","nodeType":"VariableDeclaration","scope":2513,"src":"2317:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2501,"nodeType":"VariableDeclarationStatement","src":"2317:9:17"},{"assignments":[2503],"declarations":[{"constant":false,"id":2503,"mutability":"mutable","name":"v","nameLocation":"2346:1:17","nodeType":"VariableDeclaration","scope":2513,"src":"2340:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2502,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2504,"nodeType":"VariableDeclarationStatement","src":"2340:7:17"},{"AST":{"nativeSrc":"2548:171:17","nodeType":"YulBlock","src":"2548:171:17","statements":[{"nativeSrc":"2566:32:17","nodeType":"YulAssignment","src":"2566:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:17","nodeType":"YulIdentifier","src":"2581:9:17"},{"kind":"number","nativeSrc":"2592:4:17","nodeType":"YulLiteral","src":"2592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:17","nodeType":"YulIdentifier","src":"2577:3:17"},"nativeSrc":"2577:20:17","nodeType":"YulFunctionCall","src":"2577:20:17"}],"functionName":{"name":"mload","nativeSrc":"2571:5:17","nodeType":"YulIdentifier","src":"2571:5:17"},"nativeSrc":"2571:27:17","nodeType":"YulFunctionCall","src":"2571:27:17"},"variableNames":[{"name":"r","nativeSrc":"2566:1:17","nodeType":"YulIdentifier","src":"2566:1:17"}]},{"nativeSrc":"2615:32:17","nodeType":"YulAssignment","src":"2615:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:17","nodeType":"YulIdentifier","src":"2630:9:17"},{"kind":"number","nativeSrc":"2641:4:17","nodeType":"YulLiteral","src":"2641:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:17","nodeType":"YulIdentifier","src":"2626:3:17"},"nativeSrc":"2626:20:17","nodeType":"YulFunctionCall","src":"2626:20:17"}],"functionName":{"name":"mload","nativeSrc":"2620:5:17","nodeType":"YulIdentifier","src":"2620:5:17"},"nativeSrc":"2620:27:17","nodeType":"YulFunctionCall","src":"2620:27:17"},"variableNames":[{"name":"s","nativeSrc":"2615:1:17","nodeType":"YulIdentifier","src":"2615:1:17"}]},{"nativeSrc":"2664:41:17","nodeType":"YulAssignment","src":"2664:41:17","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:17","nodeType":"YulLiteral","src":"2674:1:17","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:17","nodeType":"YulIdentifier","src":"2687:9:17"},{"kind":"number","nativeSrc":"2698:4:17","nodeType":"YulLiteral","src":"2698:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:17","nodeType":"YulIdentifier","src":"2683:3:17"},"nativeSrc":"2683:20:17","nodeType":"YulFunctionCall","src":"2683:20:17"}],"functionName":{"name":"mload","nativeSrc":"2677:5:17","nodeType":"YulIdentifier","src":"2677:5:17"},"nativeSrc":"2677:27:17","nodeType":"YulFunctionCall","src":"2677:27:17"}],"functionName":{"name":"byte","nativeSrc":"2669:4:17","nodeType":"YulIdentifier","src":"2669:4:17"},"nativeSrc":"2669:36:17","nodeType":"YulFunctionCall","src":"2669:36:17"},"variableNames":[{"name":"v","nativeSrc":"2664:1:17","nodeType":"YulIdentifier","src":"2664:1:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2497,"isOffset":false,"isSlot":false,"src":"2566:1:17","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"2615:1:17","valueSize":1},{"declaration":2482,"isOffset":false,"isSlot":false,"src":"2581:9:17","valueSize":1},{"declaration":2482,"isOffset":false,"isSlot":false,"src":"2630:9:17","valueSize":1},{"declaration":2482,"isOffset":false,"isSlot":false,"src":"2687:9:17","valueSize":1},{"declaration":2503,"isOffset":false,"isSlot":false,"src":"2664:1:17","valueSize":1}],"id":2505,"nodeType":"InlineAssembly","src":"2539:180:17"},{"expression":{"arguments":[{"id":2507,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2750:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2508,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2756:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"2759:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2510,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2762:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2506,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2530,2610,2718],"referencedDeclaration":2718,"src":"2739:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2491,"id":2512,"nodeType":"Return","src":"2732:32:17"}]}}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"857:1267:17","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2530,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:17","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"hash","nameLocation":"2157:4:17","nodeType":"VariableDeclaration","scope":2530,"src":"2149:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"signature","nameLocation":"2176:9:17","nodeType":"VariableDeclaration","scope":2530,"src":"2163:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2481,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:17"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"2210:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"2219:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2487,"nodeType":"UserDefinedTypeName","pathNode":{"id":2486,"name":"RecoverError","nameLocations":["2219:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"2219:12:17"},"referencedDeclaration":2464,"src":"2219:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"2233:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:17"},"scope":2804,"src":"2129:766:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"3789:168:17","statements":[{"assignments":[2541,2544,2546],"declarations":[{"constant":false,"id":2541,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:17","nodeType":"VariableDeclaration","scope":2559,"src":"3800:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2540,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"error","nameLocation":"3832:5:17","nodeType":"VariableDeclaration","scope":2559,"src":"3819:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2543,"nodeType":"UserDefinedTypeName","pathNode":{"id":2542,"name":"RecoverError","nameLocations":["3819:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"3819:12:17"},"referencedDeclaration":2464,"src":"3819:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:17","nodeType":"VariableDeclaration","scope":2559,"src":"3839:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2551,"initialValue":{"arguments":[{"id":2548,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"3870:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2549,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"3876:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2547,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2530,2610,2718],"referencedDeclaration":2530,"src":"3859:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:17"},{"expression":{"arguments":[{"id":2553,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3908:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},{"id":2554,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"3915:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2552,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"3896:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2464_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2556,"nodeType":"ExpressionStatement","src":"3896:28:17"},{"expression":{"id":2557,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"3941:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2539,"id":2558,"nodeType":"Return","src":"3934:16:17"}]},"documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"2901:796:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:17","nodeType":"FunctionDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"hash","nameLocation":"3727:4:17","nodeType":"VariableDeclaration","scope":2560,"src":"3719:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2535,"mutability":"mutable","name":"signature","nameLocation":"3746:9:17","nodeType":"VariableDeclaration","scope":2560,"src":"3733:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2534,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:17"},"returnParameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"3780:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2537,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:17"},"scope":2804,"src":"3702:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2609,"nodeType":"Block","src":"4285:342:17","statements":[{"id":2608,"nodeType":"UncheckedBlock","src":"4295:326:17","statements":[{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"s","nameLocation":"4327:1:17","nodeType":"VariableDeclaration","scope":2608,"src":"4319:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2585,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4331:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:17","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:17"},{"assignments":[2587],"declarations":[{"constant":false,"id":2587,"mutability":"mutable","name":"v","nameLocation":"4528:1:17","nodeType":"VariableDeclaration","scope":2608,"src":"4522:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2586,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2592,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4547:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:17","typeDescriptions":{}}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2588,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:17","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:17"},{"expression":{"arguments":[{"id":2602,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"4596:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2603,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4602:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2604,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4605:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2605,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"4608:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2601,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2530,2610,2718],"referencedDeclaration":2718,"src":"4585:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2576,"id":2607,"nodeType":"Return","src":"4578:32:17"}]}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"3963:205:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":2610,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:17","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"hash","nameLocation":"4201:4:17","nodeType":"VariableDeclaration","scope":2610,"src":"4193:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"r","nameLocation":"4215:1:17","nodeType":"VariableDeclaration","scope":2610,"src":"4207:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"vs","nameLocation":"4226:2:17","nodeType":"VariableDeclaration","scope":2610,"src":"4218:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:17"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"4253:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"4262:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2572,"nodeType":"UserDefinedTypeName","pathNode":{"id":2571,"name":"RecoverError","nameLocations":["4262:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"4262:12:17"},"referencedDeclaration":2464,"src":"4262:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"4276:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:17"},"scope":2804,"src":"4173:454:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2642,"nodeType":"Block","src":"4840:164:17","statements":[{"assignments":[2623,2626,2628],"declarations":[{"constant":false,"id":2623,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:17","nodeType":"VariableDeclaration","scope":2642,"src":"4851:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"error","nameLocation":"4883:5:17","nodeType":"VariableDeclaration","scope":2642,"src":"4870:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2625,"nodeType":"UserDefinedTypeName","pathNode":{"id":2624,"name":"RecoverError","nameLocations":["4870:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"4870:12:17"},"referencedDeclaration":2464,"src":"4870:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:17","nodeType":"VariableDeclaration","scope":2642,"src":"4890:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2634,"initialValue":{"arguments":[{"id":2630,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"4921:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2631,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"4927:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2632,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"4930:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2629,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2530,2610,2718],"referencedDeclaration":2610,"src":"4910:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:17"},{"expression":{"arguments":[{"id":2636,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"4955:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},{"id":2637,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4962:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2635,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4943:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2464_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2639,"nodeType":"ExpressionStatement","src":"4943:28:17"},{"expression":{"id":2640,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4988:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2621,"id":2641,"nodeType":"Return","src":"4981:16:17"}]},"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"4633:116:17","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:17","nodeType":"FunctionDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"hash","nameLocation":"4779:4:17","nodeType":"VariableDeclaration","scope":2643,"src":"4771:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"r","nameLocation":"4793:1:17","nodeType":"VariableDeclaration","scope":2643,"src":"4785:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"vs","nameLocation":"4804:2:17","nodeType":"VariableDeclaration","scope":2643,"src":"4796:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:17"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2643,"src":"4831:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:17"},"scope":2804,"src":"4754:250:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2717,"nodeType":"Block","src":"5298:1372:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2664,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6194:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:17","typeDescriptions":{}}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2678,"nodeType":"IfStatement","src":"6182:164:17","trueBody":{"id":2677,"nodeType":"Block","src":"6267:79:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:17","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2672,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"6301:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2463,"src":"6301:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},{"id":2674,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6333:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2661,"id":2676,"nodeType":"Return","src":"6281:54:17"}]}},{"assignments":[2680],"declarations":[{"constant":false,"id":2680,"mutability":"mutable","name":"signer","nameLocation":"6448:6:17","nodeType":"VariableDeclaration","scope":2717,"src":"6440:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2687,"initialValue":{"arguments":[{"id":2682,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"6467:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2683,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"6473:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2684,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6476:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2685,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6479:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2681,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"6495:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2689,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:17","typeDescriptions":{}}},"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2707,"nodeType":"IfStatement","src":"6491:113:17","trueBody":{"id":2706,"nodeType":"Block","src":"6517:87:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2694,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:17","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2698,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"6551:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2461,"src":"6551:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:17","typeDescriptions":{}}},"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2661,"id":2705,"nodeType":"Return","src":"6531:62:17"}]}},{"expression":{"components":[{"id":2708,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"6622:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2709,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"6630:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2460,"src":"6630:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:17","typeDescriptions":{}}},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2661,"id":2716,"nodeType":"Return","src":"6614:49:17"}]},"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"5010:125:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:17","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"hash","nameLocation":"5177:4:17","nodeType":"VariableDeclaration","scope":2718,"src":"5169:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"v","nameLocation":"5197:1:17","nodeType":"VariableDeclaration","scope":2718,"src":"5191:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2647,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"r","nameLocation":"5216:1:17","nodeType":"VariableDeclaration","scope":2718,"src":"5208:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"s","nameLocation":"5235:1:17","nodeType":"VariableDeclaration","scope":2718,"src":"5227:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:17"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"5266:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"5275:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2657,"nodeType":"UserDefinedTypeName","pathNode":{"id":2656,"name":"RecoverError","nameLocations":["5275:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"5275:12:17"},"referencedDeclaration":2464,"src":"5275:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"5289:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:17"},"scope":2804,"src":"5140:1530:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2753,"nodeType":"Block","src":"6897:166:17","statements":[{"assignments":[2733,2736,2738],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:17","nodeType":"VariableDeclaration","scope":2753,"src":"6908:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"error","nameLocation":"6940:5:17","nodeType":"VariableDeclaration","scope":2753,"src":"6927:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2735,"nodeType":"UserDefinedTypeName","pathNode":{"id":2734,"name":"RecoverError","nameLocations":["6927:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"6927:12:17"},"referencedDeclaration":2464,"src":"6927:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:17","nodeType":"VariableDeclaration","scope":2753,"src":"6947:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2745,"initialValue":{"arguments":[{"id":2740,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6978:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2741,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"6984:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2742,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"6987:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2743,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"6990:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2739,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2530,2610,2718],"referencedDeclaration":2718,"src":"6967:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2464_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:17"},{"expression":{"arguments":[{"id":2747,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"7014:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},{"id":2748,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"7021:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2746,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"7002:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2464_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"ExpressionStatement","src":"7002:28:17"},{"expression":{"id":2751,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"7047:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2731,"id":2752,"nodeType":"Return","src":"7040:16:17"}]},"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"6676:122:17","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2754,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:17","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"hash","nameLocation":"6828:4:17","nodeType":"VariableDeclaration","scope":2754,"src":"6820:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"v","nameLocation":"6840:1:17","nodeType":"VariableDeclaration","scope":2754,"src":"6834:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2722,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"r","nameLocation":"6851:1:17","nodeType":"VariableDeclaration","scope":2754,"src":"6843:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"s","nameLocation":"6862:1:17","nodeType":"VariableDeclaration","scope":2754,"src":"6854:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:17"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2754,"src":"6888:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:17"},"scope":2804,"src":"6803:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2802,"nodeType":"Block","src":"7268:460:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"7282:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2764,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"7291:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2460,"src":"7291:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"7378:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2770,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"7387:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2461,"src":"7387:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"7483:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2778,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"7492:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2462,"src":"7492:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2789,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"7617:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2790,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"7626:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2464_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2463,"src":"7626:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2798,"nodeType":"IfStatement","src":"7613:109:17","trueBody":{"id":2797,"nodeType":"Block","src":"7658:64:17","statements":[{"errorCall":{"arguments":[{"id":2794,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"7702:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2793,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"7679:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2796,"nodeType":"RevertStatement","src":"7672:39:17"}]}},"id":2799,"nodeType":"IfStatement","src":"7479:243:17","trueBody":{"id":2788,"nodeType":"Block","src":"7529:78:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2784,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"7586:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:17","typeDescriptions":{}}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2781,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"7550:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2787,"nodeType":"RevertStatement","src":"7543:53:17"}]}},"id":2800,"nodeType":"IfStatement","src":"7374:348:17","trueBody":{"id":2776,"nodeType":"Block","src":"7418:55:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2773,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"7439:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"RevertStatement","src":"7432:30:17"}]}},"id":2801,"nodeType":"IfStatement","src":"7278:444:17","trueBody":{"id":2768,"nodeType":"Block","src":"7313:55:17","statements":[{"functionReturnParameters":2762,"id":2767,"nodeType":"Return","src":"7327:7:17"}]}}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"7069:122:17","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2803,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:17","nodeType":"FunctionDefinition","parameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"error","nameLocation":"7230:5:17","nodeType":"VariableDeclaration","scope":2803,"src":"7217:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2757,"nodeType":"UserDefinedTypeName","pathNode":{"id":2756,"name":"RecoverError","nameLocations":["7217:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"7217:12:17"},"referencedDeclaration":2464,"src":"7217:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2464","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2760,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:17","nodeType":"VariableDeclaration","scope":2803,"src":"7237:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:17"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"7268:0:17"},"scope":2804,"src":"7196:532:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2805,"src":"344:7386:17","usedErrors":[2467,2472,2477],"usedEvents":[]}],"src":"112:7619:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3031],"IERC5267":[172],"MessageHashUtils":[3105],"ShortString":[1880],"ShortStrings":[2091]},"id":3032,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2806,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3032,"sourceUnit":3106,"src":"139:56:18","symbolAliases":[{"foreign":{"id":2807,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"147:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3032,"sourceUnit":2092,"src":"196:62:18","symbolAliases":[{"foreign":{"id":2809,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"204:12:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2810,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"218:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3032,"sourceUnit":173,"src":"259:55:18","symbolAliases":[{"foreign":{"id":2812,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2815,"name":"IERC5267","nameLocations":["1988:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:18"},"id":2816,"nodeType":"InheritanceSpecifier","src":"1988:8:18"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"316:1643:18","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3031,"linearizedBaseContracts":[3031,172],"name":"EIP712","nameLocation":"1978:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2818,"libraryName":{"id":2817,"name":"ShortStrings","nameLocations":["2009:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2091,"src":"2009:12:18"},"nodeType":"UsingForDirective","src":"2003:25:18"},{"constant":true,"id":2823,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:18","nodeType":"VariableDeclaration","scope":3031,"src":"2034:140:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2820,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2825,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:18","nodeType":"VariableDeclaration","scope":3031,"src":"2373:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2827,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:18","nodeType":"VariableDeclaration","scope":3031,"src":"2427:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2829,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:18","nodeType":"VariableDeclaration","scope":3031,"src":"2473:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2831,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:18","nodeType":"VariableDeclaration","scope":3031,"src":"2517:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2833,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:18","nodeType":"VariableDeclaration","scope":3031,"src":"2560:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2836,"mutability":"immutable","name":"_name","nameLocation":"2637:5:18","nodeType":"VariableDeclaration","scope":3031,"src":"2607:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":2835,"nodeType":"UserDefinedTypeName","pathNode":{"id":2834,"name":"ShortString","nameLocations":["2607:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"2607:11:18"},"referencedDeclaration":1880,"src":"2607:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2839,"mutability":"immutable","name":"_version","nameLocation":"2678:8:18","nodeType":"VariableDeclaration","scope":3031,"src":"2648:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"},"typeName":{"id":2838,"nodeType":"UserDefinedTypeName","pathNode":{"id":2837,"name":"ShortString","nameLocations":["2648:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"2648:11:18"},"referencedDeclaration":1880,"src":"2648:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2841,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:18","nodeType":"VariableDeclaration","scope":3031,"src":"2692:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2840,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2843,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:18","nodeType":"VariableDeclaration","scope":3031,"src":"2726:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2842,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2900,"nodeType":"Block","src":"3383:376:18","statements":[{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2851,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"3393:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2854,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"3432:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2852,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"3401:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"3401:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1880_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"src":"3393:53:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"id":2857,"nodeType":"ExpressionStatement","src":"3393:53:18"},{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3456:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2861,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"3501:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2859,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3467:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"3467:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1880_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"src":"3456:62:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"id":2864,"nodeType":"ExpressionStatement","src":"3456:62:18"},{"expression":{"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"3528:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2869,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"3558:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2867,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:18","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2866,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2873,"nodeType":"ExpressionStatement","src":"3528:36:18"},{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2874,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3574:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2878,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3607:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2876,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:18","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2875,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2882,"nodeType":"ExpressionStatement","src":"3574:42:18"},{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"3627:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2884,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2887,"nodeType":"ExpressionStatement","src":"3627:30:18"},{"expression":{"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2888,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3667:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2889,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"3692:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2892,"nodeType":"ExpressionStatement","src":"3667:48:18"},{"expression":{"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2893,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"3725:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2896,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}],"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2894,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:18","typeDescriptions":{}}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2899,"nodeType":"ExpressionStatement","src":"3725:27:18"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"2764:559:18","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2901,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"name","nameLocation":"3354:4:18","nodeType":"VariableDeclaration","scope":2901,"src":"3340:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2845,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"version","nameLocation":"3374:7:18","nodeType":"VariableDeclaration","scope":2901,"src":"3360:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2847,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:18"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[],"src":"3383:0:18"},"scope":3031,"src":"3328:431:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2926,"nodeType":"Block","src":"3907:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2909,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:18","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2911,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"3938:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2913,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2915,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"3970:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2924,"nodeType":"Block","src":"4046:55:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2921,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4067:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2906,"id":2923,"nodeType":"Return","src":"4060:30:18"}]},"id":2925,"nodeType":"IfStatement","src":"3917:184:18","trueBody":{"id":2920,"nodeType":"Block","src":"3986:54:18","statements":[{"expression":{"id":2918,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4007:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2906,"id":2919,"nodeType":"Return","src":"4000:29:18"}]}}]},"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"3765:75:18","text":" @dev Returns the domain separator for the current chain."},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:18","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[],"src":"3872:2:18"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2927,"src":"3898:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:18"},"scope":3031,"src":"3845:262:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2947,"nodeType":"Block","src":"4177:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2935,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"4215:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2936,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"4226:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2937,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"4239:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2938,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2942,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}],"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:18","typeDescriptions":{}}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2933,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2932,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2931,"id":2946,"nodeType":"Return","src":"4187:98:18"}]},"id":2948,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:18","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[],"src":"4143:2:18"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2948,"src":"4168:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:18"},"scope":3031,"src":"4113:179:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2963,"nodeType":"Block","src":"5003:90:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2958,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"5053:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2960,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"5075:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2956,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"5020:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3105_$","typeString":"type(library MessageHashUtils)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:18","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3104,"src":"5020:32:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2955,"id":2962,"nodeType":"Return","src":"5013:73:18"}]},"documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"4298:614:18","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:18","nodeType":"FunctionDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:18","nodeType":"VariableDeclaration","scope":2964,"src":"4943:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:18"},"returnParameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"4994:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:18"},"scope":3031,"src":"4917:176:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3005,"nodeType":"Block","src":"5472:229:18","statements":[{"expression":{"components":[{"hexValue":"0f","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2984,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"5533:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2986,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"5560:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2988,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2992,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3031","typeString":"contract EIP712"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:18","typeDescriptions":{}}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:18","typeDescriptions":{}}},"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2999,"nodeType":"ArrayTypeName","src":"5672:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2982,"id":3004,"nodeType":"Return","src":"5482:212:18"}]},"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"5099:40:18","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:18","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[],"src":"5165:2:18"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"fields","nameLocation":"5249:6:18","nodeType":"VariableDeclaration","scope":3006,"src":"5242:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2967,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"name","nameLocation":"5283:4:18","nodeType":"VariableDeclaration","scope":3006,"src":"5269:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"version","nameLocation":"5315:7:18","nodeType":"VariableDeclaration","scope":3006,"src":"5301:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2971,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:18","nodeType":"VariableDeclaration","scope":3006,"src":"5336:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:18","nodeType":"VariableDeclaration","scope":3006,"src":"5365:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"salt","nameLocation":"5412:4:18","nodeType":"VariableDeclaration","scope":3006,"src":"5404:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:18","nodeType":"VariableDeclaration","scope":3006,"src":"5430:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ArrayTypeName","src":"5430:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:18"},"scope":3031,"src":"5144:557:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3017,"nodeType":"Block","src":"6082:65:18","statements":[{"expression":{"arguments":[{"id":3014,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"6126:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3012,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"6099:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2059,"src":"6099:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1880_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3011,"id":3016,"nodeType":"Return","src":"6092:48:18"}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"5707:256:18","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:18","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"6041:2:18"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"6067:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3009,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:18"},"scope":3031,"src":"6021:126:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"6537:71:18","statements":[{"expression":{"arguments":[{"id":3026,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"6584:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3024,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"6554:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1880","typeString":"ShortString"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2059,"src":"6554:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1880_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1880_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3023,"id":3028,"nodeType":"Return","src":"6547:54:18"}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"6153:262:18","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:18","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[],"src":"6496:2:18"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"6522:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3021,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:18"},"scope":3031,"src":"6473:135:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3032,"src":"1960:4650:18","usedErrors":[1888,1890],"usedEvents":[152]}],"src":"113:6498:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3105],"Strings":[2456]},"id":3106,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3033,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3106,"sourceUnit":2457,"src":"149:39:19","symbolAliases":[{"foreign":{"id":3034,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"157:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"190:330:19","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3105,"linearizedBaseContracts":[3105],"name":"MessageHashUtils","nameLocation":"529:16:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3045,"nodeType":"Block","src":"1314:368:19","statements":[{"AST":{"nativeSrc":"1376:300:19","nodeType":"YulBlock","src":"1376:300:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:19","nodeType":"YulLiteral","src":"1397:4:19","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:19","nodeType":"YulLiteral","src":"1403:34:19","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:19","nodeType":"YulIdentifier","src":"1390:6:19"},"nativeSrc":"1390:48:19","nodeType":"YulFunctionCall","src":"1390:48:19"},"nativeSrc":"1390:48:19","nodeType":"YulExpressionStatement","src":"1390:48:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:19","nodeType":"YulLiteral","src":"1499:4:19","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:19","nodeType":"YulIdentifier","src":"1505:11:19"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:19","nodeType":"YulIdentifier","src":"1492:6:19"},"nativeSrc":"1492:25:19","nodeType":"YulFunctionCall","src":"1492:25:19"},"nativeSrc":"1492:25:19","nodeType":"YulExpressionStatement","src":"1492:25:19"},{"nativeSrc":"1571:31:19","nodeType":"YulAssignment","src":"1571:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:19","nodeType":"YulLiteral","src":"1591:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:19","nodeType":"YulLiteral","src":"1597:4:19","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:19","nodeType":"YulIdentifier","src":"1581:9:19"},"nativeSrc":"1581:21:19","nodeType":"YulFunctionCall","src":"1581:21:19"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:19","nodeType":"YulIdentifier","src":"1571:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3042,"isOffset":false,"isSlot":false,"src":"1571:6:19","valueSize":1},{"declaration":3039,"isOffset":false,"isSlot":false,"src":"1505:11:19","valueSize":1}],"id":3044,"nodeType":"InlineAssembly","src":"1367:309:19"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"552:665:19","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:19","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:19","nodeType":"VariableDeclaration","scope":3046,"src":"1254:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:19"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"digest","nameLocation":"1306:6:19","nodeType":"VariableDeclaration","scope":3046,"src":"1298:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:19"},"scope":3105,"src":"1222:460:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3071,"nodeType":"Block","src":"2234:143:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3063,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2343:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:19","memberName":"length","nodeType":"MemberAccess","src":"2343:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3061,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2326:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2456_$","typeString":"type(library Strings)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2269,"src":"2326:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3059,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:19","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3067,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2361:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3055,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:19","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3054,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3053,"id":3070,"nodeType":"Return","src":"2244:126:19"}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"1688:455:19","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3072,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:19","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"message","nameLocation":"2193:7:19","nodeType":"VariableDeclaration","scope":3072,"src":"2180:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3048,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:19"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3072,"src":"2225:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:19"},"scope":3105,"src":"2148:229:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3091,"nodeType":"Block","src":"2831:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3086,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"2887:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3087,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"2898:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3083,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3082,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3081,"id":3090,"nodeType":"Return","src":"2841:63:19"}]},"documentation":{"id":3073,"nodeType":"StructuredDocumentation","src":"2383:332:19","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3092,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:19","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"validator","nameLocation":"2769:9:19","nodeType":"VariableDeclaration","scope":3092,"src":"2761:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3074,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"data","nameLocation":"2793:4:19","nodeType":"VariableDeclaration","scope":3092,"src":"2780:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3076,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:19"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3092,"src":"2822:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:19"},"scope":3105,"src":"2720:191:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3103,"nodeType":"Block","src":"3462:292:19","statements":[{"AST":{"nativeSrc":"3524:224:19","nodeType":"YulBlock","src":"3524:224:19","statements":[{"nativeSrc":"3538:22:19","nodeType":"YulVariableDeclaration","src":"3538:22:19","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:19","nodeType":"YulLiteral","src":"3555:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:19","nodeType":"YulIdentifier","src":"3549:5:19"},"nativeSrc":"3549:11:19","nodeType":"YulFunctionCall","src":"3549:11:19"},"variables":[{"name":"ptr","nativeSrc":"3542:3:19","nodeType":"YulTypedName","src":"3542:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:19","nodeType":"YulIdentifier","src":"3580:3:19"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:19","nodeType":"YulLiteral","src":"3585:10:19","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:19","nodeType":"YulIdentifier","src":"3573:6:19"},"nativeSrc":"3573:23:19","nodeType":"YulFunctionCall","src":"3573:23:19"},"nativeSrc":"3573:23:19","nodeType":"YulExpressionStatement","src":"3573:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:19","nodeType":"YulIdentifier","src":"3620:3:19"},{"kind":"number","nativeSrc":"3625:4:19","nodeType":"YulLiteral","src":"3625:4:19","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:19","nodeType":"YulIdentifier","src":"3616:3:19"},"nativeSrc":"3616:14:19","nodeType":"YulFunctionCall","src":"3616:14:19"},{"name":"domainSeparator","nativeSrc":"3632:15:19","nodeType":"YulIdentifier","src":"3632:15:19"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:19","nodeType":"YulIdentifier","src":"3609:6:19"},"nativeSrc":"3609:39:19","nodeType":"YulFunctionCall","src":"3609:39:19"},"nativeSrc":"3609:39:19","nodeType":"YulExpressionStatement","src":"3609:39:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:19","nodeType":"YulIdentifier","src":"3672:3:19"},{"kind":"number","nativeSrc":"3677:4:19","nodeType":"YulLiteral","src":"3677:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:19","nodeType":"YulIdentifier","src":"3668:3:19"},"nativeSrc":"3668:14:19","nodeType":"YulFunctionCall","src":"3668:14:19"},{"name":"structHash","nativeSrc":"3684:10:19","nodeType":"YulIdentifier","src":"3684:10:19"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:19","nodeType":"YulIdentifier","src":"3661:6:19"},"nativeSrc":"3661:34:19","nodeType":"YulFunctionCall","src":"3661:34:19"},"nativeSrc":"3661:34:19","nodeType":"YulExpressionStatement","src":"3661:34:19"},{"nativeSrc":"3708:30:19","nodeType":"YulAssignment","src":"3708:30:19","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:19","nodeType":"YulIdentifier","src":"3728:3:19"},{"kind":"number","nativeSrc":"3733:4:19","nodeType":"YulLiteral","src":"3733:4:19","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:19","nodeType":"YulIdentifier","src":"3718:9:19"},"nativeSrc":"3718:20:19","nodeType":"YulFunctionCall","src":"3718:20:19"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:19","nodeType":"YulIdentifier","src":"3708:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3100,"isOffset":false,"isSlot":false,"src":"3708:6:19","valueSize":1},{"declaration":3095,"isOffset":false,"isSlot":false,"src":"3632:15:19","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3684:10:19","valueSize":1}],"id":3102,"nodeType":"InlineAssembly","src":"3515:233:19"}]},"documentation":{"id":3093,"nodeType":"StructuredDocumentation","src":"2917:431:19","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3104,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:19","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:19","nodeType":"VariableDeclaration","scope":3104,"src":"3378:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:19","nodeType":"VariableDeclaration","scope":3104,"src":"3403:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:19"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"digest","nameLocation":"3454:6:19","nodeType":"VariableDeclaration","scope":3104,"src":"3446:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:19"},"scope":3105,"src":"3353:401:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3106,"src":"521:3235:19","usedErrors":[],"usedEvents":[]}],"src":"123:3634:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4159]},"id":4160,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3107,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"129:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4159,"linearizedBaseContracts":[4159],"name":"Math","nameLocation":"211:4:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"222:50:20","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3111,"name":"MathOverflowedMulDiv","nameLocation":"283:20:20","nodeType":"ErrorDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[],"src":"303:2:20"},"src":"277:29:20"},{"canonicalName":"Math.Rounding","id":3116,"members":[{"id":3112,"name":"Floor","nameLocation":"336:5:20","nodeType":"EnumValue","src":"336:5:20"},{"id":3113,"name":"Ceil","nameLocation":"379:4:20","nodeType":"EnumValue","src":"379:4:20"},{"id":3114,"name":"Trunc","nameLocation":"421:5:20","nodeType":"EnumValue","src":"421:5:20"},{"id":3115,"name":"Expand","nameLocation":"451:6:20","nodeType":"EnumValue","src":"451:6:20"}],"name":"Rounding","nameLocation":"317:8:20","nodeType":"EnumDefinition","src":"312:169:20"},{"body":{"id":3147,"nodeType":"Block","src":"661:140:20","statements":[{"id":3146,"nodeType":"UncheckedBlock","src":"671:124:20","statements":[{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"c","nameLocation":"703:1:20","nodeType":"VariableDeclaration","scope":3146,"src":"695:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3133,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"707:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3131,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"711:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"730:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"734:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"nodeType":"IfStatement","src":"726:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3127,"id":3140,"nodeType":"Return","src":"737:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3143,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"782:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3127,"id":3145,"nodeType":"Return","src":"768:16:20"}]}]},"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"487:93:20","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3148,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:20","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"a","nameLocation":"609:1:20","nodeType":"VariableDeclaration","scope":3148,"src":"601:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"b","nameLocation":"620:1:20","nodeType":"VariableDeclaration","scope":3148,"src":"612:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:20"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3148,"src":"646:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3123,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3148,"src":"652:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:20"},"scope":4159,"src":"585:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"984:113:20","statements":[{"id":3174,"nodeType":"UncheckedBlock","src":"994:97:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"1022:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"1026:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3167,"nodeType":"IfStatement","src":"1018:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3159,"id":3166,"nodeType":"Return","src":"1029:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"1074:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3170,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"1078:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3159,"id":3173,"nodeType":"Return","src":"1060:20:20"}]}]},"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"807:96:20","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:20","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"a","nameLocation":"932:1:20","nodeType":"VariableDeclaration","scope":3176,"src":"924:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"b","nameLocation":"943:1:20","nodeType":"VariableDeclaration","scope":3176,"src":"935:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:20"},"returnParameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"969:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3155,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"975:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:20"},"scope":4159,"src":"908:189:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3217,"nodeType":"Block","src":"1283:417:20","statements":[{"id":3216,"nodeType":"UncheckedBlock","src":"1293:401:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1551:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3195,"nodeType":"IfStatement","src":"1547:28:20","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3187,"id":3194,"nodeType":"Return","src":"1559:16:20"}},{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"c","nameLocation":"1597:1:20","nodeType":"VariableDeclaration","scope":3216,"src":"1589:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1601:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"1605:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"1624:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"1628:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3205,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"1633:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3211,"nodeType":"IfStatement","src":"1620:33:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3187,"id":3210,"nodeType":"Return","src":"1636:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3213,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"1681:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3187,"id":3215,"nodeType":"Return","src":"1667:16:20"}]}]},"documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"1103:99:20","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3218,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:20","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"a","nameLocation":"1231:1:20","nodeType":"VariableDeclaration","scope":3218,"src":"1223:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"b","nameLocation":"1242:1:20","nodeType":"VariableDeclaration","scope":3218,"src":"1234:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:20"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"1268:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3183,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"1274:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:20"},"scope":4159,"src":"1207:493:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"1887:114:20","statements":[{"id":3244,"nodeType":"UncheckedBlock","src":"1897:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"1925:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3237,"nodeType":"IfStatement","src":"1921:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3229,"id":3236,"nodeType":"Return","src":"1933:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"1978:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3240,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"1982:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3229,"id":3243,"nodeType":"Return","src":"1964:20:20"}]}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"1706:100:20","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:20","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"a","nameLocation":"1835:1:20","nodeType":"VariableDeclaration","scope":3246,"src":"1827:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"b","nameLocation":"1846:1:20","nodeType":"VariableDeclaration","scope":3246,"src":"1838:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:20"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"1872:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3225,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"1878:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:20"},"scope":4159,"src":"1811:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3273,"nodeType":"Block","src":"2198:114:20","statements":[{"id":3272,"nodeType":"UncheckedBlock","src":"2208:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"2236:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3265,"nodeType":"IfStatement","src":"2232:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3257,"id":3264,"nodeType":"Return","src":"2244:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"2289:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"2293:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3257,"id":3271,"nodeType":"Return","src":"2275:20:20"}]}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"2007:110:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3274,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:20","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"a","nameLocation":"2146:1:20","nodeType":"VariableDeclaration","scope":3274,"src":"2138:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"b","nameLocation":"2157:1:20","nodeType":"VariableDeclaration","scope":3274,"src":"2149:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:20"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"2183:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3253,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"2189:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:20"},"scope":4159,"src":"2122:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"2449:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"2466:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"2470:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3288,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"2478:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:20","trueExpression":{"id":3287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"2474:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3283,"id":3290,"nodeType":"Return","src":"2459:20:20"}]},"documentation":{"id":3275,"nodeType":"StructuredDocumentation","src":"2318:59:20","text":" @dev Returns the largest of two numbers."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:20","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"a","nameLocation":"2403:1:20","nodeType":"VariableDeclaration","scope":3292,"src":"2395:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"b","nameLocation":"2414:1:20","nodeType":"VariableDeclaration","scope":3292,"src":"2406:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:20"},"returnParameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"2440:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:20"},"scope":4159,"src":"2382:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"2624:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"2641:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"2645:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"2653:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:20","trueExpression":{"id":3305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"2649:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3301,"id":3308,"nodeType":"Return","src":"2634:20:20"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"2492:60:20","text":" @dev Returns the smallest of two numbers."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:20","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"a","nameLocation":"2578:1:20","nodeType":"VariableDeclaration","scope":3310,"src":"2570:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"b","nameLocation":"2589:1:20","nodeType":"VariableDeclaration","scope":3310,"src":"2581:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:20"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3310,"src":"2615:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:20"},"scope":4159,"src":"2557:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3332,"nodeType":"Block","src":"2845:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"2900:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"2904:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"2910:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"2914:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3319,"id":3331,"nodeType":"Return","src":"2892:28:20"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"2667:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3333,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:20","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"a","nameLocation":"2799:1:20","nodeType":"VariableDeclaration","scope":3333,"src":"2791:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"b","nameLocation":"2810:1:20","nodeType":"VariableDeclaration","scope":3333,"src":"2802:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:20"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3333,"src":"2836:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:20"},"scope":4159,"src":"2774:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3366,"nodeType":"Block","src":"3219:260:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"3233:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3351,"nodeType":"IfStatement","src":"3229:127:20","trueBody":{"id":3350,"nodeType":"Block","src":"3241:115:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"3340:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"3344:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3342,"id":3349,"nodeType":"Return","src":"3333:12:20"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"3444:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"3458:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"3467:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:20","trueExpression":{"hexValue":"30","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3342,"id":3365,"nodeType":"Return","src":"3437:35:20"}]},"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"2933:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:20","nodeType":"FunctionDefinition","parameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"a","nameLocation":"3173:1:20","nodeType":"VariableDeclaration","scope":3367,"src":"3165:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"b","nameLocation":"3184:1:20","nodeType":"VariableDeclaration","scope":3367,"src":"3176:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:20"},"returnParameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"3210:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:20"},"scope":4159,"src":"3148:331:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3492,"nodeType":"Block","src":"3901:4018:20","statements":[{"id":3491,"nodeType":"UncheckedBlock","src":"3911:4002:20","statements":[{"assignments":[3380],"declarations":[{"constant":false,"id":3380,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:20","nodeType":"VariableDeclaration","scope":3491,"src":"4232:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3384,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3381,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"4248:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3382,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"4252:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:20"},{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:20","nodeType":"VariableDeclaration","scope":3491,"src":"4312:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"nodeType":"VariableDeclarationStatement","src":"4312:13:20"},{"AST":{"nativeSrc":"4392:122:20","nodeType":"YulBlock","src":"4392:122:20","statements":[{"nativeSrc":"4410:30:20","nodeType":"YulVariableDeclaration","src":"4410:30:20","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:20","nodeType":"YulIdentifier","src":"4427:1:20"},{"name":"y","nativeSrc":"4430:1:20","nodeType":"YulIdentifier","src":"4430:1:20"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:20","nodeType":"YulLiteral","src":"4437:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:20","nodeType":"YulIdentifier","src":"4433:3:20"},"nativeSrc":"4433:6:20","nodeType":"YulFunctionCall","src":"4433:6:20"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:20","nodeType":"YulIdentifier","src":"4420:6:20"},"nativeSrc":"4420:20:20","nodeType":"YulFunctionCall","src":"4420:20:20"},"variables":[{"name":"mm","nativeSrc":"4414:2:20","nodeType":"YulTypedName","src":"4414:2:20","type":""}]},{"nativeSrc":"4457:43:20","nodeType":"YulAssignment","src":"4457:43:20","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:20","nodeType":"YulIdentifier","src":"4474:2:20"},{"name":"prod0","nativeSrc":"4478:5:20","nodeType":"YulIdentifier","src":"4478:5:20"}],"functionName":{"name":"sub","nativeSrc":"4470:3:20","nodeType":"YulIdentifier","src":"4470:3:20"},"nativeSrc":"4470:14:20","nodeType":"YulFunctionCall","src":"4470:14:20"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:20","nodeType":"YulIdentifier","src":"4489:2:20"},{"name":"prod0","nativeSrc":"4493:5:20","nodeType":"YulIdentifier","src":"4493:5:20"}],"functionName":{"name":"lt","nativeSrc":"4486:2:20","nodeType":"YulIdentifier","src":"4486:2:20"},"nativeSrc":"4486:13:20","nodeType":"YulFunctionCall","src":"4486:13:20"}],"functionName":{"name":"sub","nativeSrc":"4466:3:20","nodeType":"YulIdentifier","src":"4466:3:20"},"nativeSrc":"4466:34:20","nodeType":"YulFunctionCall","src":"4466:34:20"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:20","nodeType":"YulIdentifier","src":"4457:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3380,"isOffset":false,"isSlot":false,"src":"4478:5:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"4493:5:20","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"4457:5:20","valueSize":1},{"declaration":3370,"isOffset":false,"isSlot":false,"src":"4427:1:20","valueSize":1},{"declaration":3372,"isOffset":false,"isSlot":false,"src":"4430:1:20","valueSize":1}],"id":3388,"nodeType":"InlineAssembly","src":"4383:131:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"4595:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"nodeType":"IfStatement","src":"4591:368:20","trueBody":{"id":3396,"nodeType":"Block","src":"4607:352:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4925:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3393,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"4933:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3378,"id":3395,"nodeType":"Return","src":"4918:26:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"5065:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3399,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"5080:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3405,"nodeType":"IfStatement","src":"5061:88:20","trueBody":{"id":3404,"nodeType":"Block","src":"5087:62:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3401,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"5112:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3403,"nodeType":"RevertStatement","src":"5105:29:20"}]}},{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:20","nodeType":"VariableDeclaration","scope":3491,"src":"5404:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3408,"nodeType":"VariableDeclarationStatement","src":"5404:17:20"},{"AST":{"nativeSrc":"5444:291:20","nodeType":"YulBlock","src":"5444:291:20","statements":[{"nativeSrc":"5513:38:20","nodeType":"YulAssignment","src":"5513:38:20","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:20","nodeType":"YulIdentifier","src":"5533:1:20"},{"name":"y","nativeSrc":"5536:1:20","nodeType":"YulIdentifier","src":"5536:1:20"},{"name":"denominator","nativeSrc":"5539:11:20","nodeType":"YulIdentifier","src":"5539:11:20"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:20","nodeType":"YulIdentifier","src":"5526:6:20"},"nativeSrc":"5526:25:20","nodeType":"YulFunctionCall","src":"5526:25:20"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:20","nodeType":"YulIdentifier","src":"5513:9:20"}]},{"nativeSrc":"5633:41:20","nodeType":"YulAssignment","src":"5633:41:20","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:20","nodeType":"YulIdentifier","src":"5646:5:20"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:20","nodeType":"YulIdentifier","src":"5656:9:20"},{"name":"prod0","nativeSrc":"5667:5:20","nodeType":"YulIdentifier","src":"5667:5:20"}],"functionName":{"name":"gt","nativeSrc":"5653:2:20","nodeType":"YulIdentifier","src":"5653:2:20"},"nativeSrc":"5653:20:20","nodeType":"YulFunctionCall","src":"5653:20:20"}],"functionName":{"name":"sub","nativeSrc":"5642:3:20","nodeType":"YulIdentifier","src":"5642:3:20"},"nativeSrc":"5642:32:20","nodeType":"YulFunctionCall","src":"5642:32:20"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:20","nodeType":"YulIdentifier","src":"5633:5:20"}]},{"nativeSrc":"5691:30:20","nodeType":"YulAssignment","src":"5691:30:20","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:20","nodeType":"YulIdentifier","src":"5704:5:20"},{"name":"remainder","nativeSrc":"5711:9:20","nodeType":"YulIdentifier","src":"5711:9:20"}],"functionName":{"name":"sub","nativeSrc":"5700:3:20","nodeType":"YulIdentifier","src":"5700:3:20"},"nativeSrc":"5700:21:20","nodeType":"YulFunctionCall","src":"5700:21:20"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:20","nodeType":"YulIdentifier","src":"5691:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3374,"isOffset":false,"isSlot":false,"src":"5539:11:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"5667:5:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"5691:5:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"5704:5:20","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"5633:5:20","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"5646:5:20","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"5513:9:20","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"5656:9:20","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"5711:9:20","valueSize":1},{"declaration":3370,"isOffset":false,"isSlot":false,"src":"5533:1:20","valueSize":1},{"declaration":3372,"isOffset":false,"isSlot":false,"src":"5536:1:20","valueSize":1}],"id":3409,"nodeType":"InlineAssembly","src":"5435:300:20"},{"assignments":[3411],"declarations":[{"constant":false,"id":3411,"mutability":"mutable","name":"twos","nameLocation":"5947:4:20","nodeType":"VariableDeclaration","scope":3491,"src":"5939:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3418,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3412,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"5954:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3414,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"5973:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:20"},{"AST":{"nativeSrc":"6008:362:20","nodeType":"YulBlock","src":"6008:362:20","statements":[{"nativeSrc":"6073:37:20","nodeType":"YulAssignment","src":"6073:37:20","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:20","nodeType":"YulIdentifier","src":"6092:11:20"},{"name":"twos","nativeSrc":"6105:4:20","nodeType":"YulIdentifier","src":"6105:4:20"}],"functionName":{"name":"div","nativeSrc":"6088:3:20","nodeType":"YulIdentifier","src":"6088:3:20"},"nativeSrc":"6088:22:20","nodeType":"YulFunctionCall","src":"6088:22:20"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:20","nodeType":"YulIdentifier","src":"6073:11:20"}]},{"nativeSrc":"6177:25:20","nodeType":"YulAssignment","src":"6177:25:20","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:20","nodeType":"YulIdentifier","src":"6190:5:20"},{"name":"twos","nativeSrc":"6197:4:20","nodeType":"YulIdentifier","src":"6197:4:20"}],"functionName":{"name":"div","nativeSrc":"6186:3:20","nodeType":"YulIdentifier","src":"6186:3:20"},"nativeSrc":"6186:16:20","nodeType":"YulFunctionCall","src":"6186:16:20"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:20","nodeType":"YulIdentifier","src":"6177:5:20"}]},{"nativeSrc":"6317:39:20","nodeType":"YulAssignment","src":"6317:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:20","nodeType":"YulLiteral","src":"6337:1:20","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:20","nodeType":"YulIdentifier","src":"6340:4:20"}],"functionName":{"name":"sub","nativeSrc":"6333:3:20","nodeType":"YulIdentifier","src":"6333:3:20"},"nativeSrc":"6333:12:20","nodeType":"YulFunctionCall","src":"6333:12:20"},{"name":"twos","nativeSrc":"6347:4:20","nodeType":"YulIdentifier","src":"6347:4:20"}],"functionName":{"name":"div","nativeSrc":"6329:3:20","nodeType":"YulIdentifier","src":"6329:3:20"},"nativeSrc":"6329:23:20","nodeType":"YulFunctionCall","src":"6329:23:20"},{"kind":"number","nativeSrc":"6354:1:20","nodeType":"YulLiteral","src":"6354:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:20","nodeType":"YulIdentifier","src":"6325:3:20"},"nativeSrc":"6325:31:20","nodeType":"YulFunctionCall","src":"6325:31:20"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:20","nodeType":"YulIdentifier","src":"6317:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3374,"isOffset":false,"isSlot":false,"src":"6073:11:20","valueSize":1},{"declaration":3374,"isOffset":false,"isSlot":false,"src":"6092:11:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"6177:5:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"6190:5:20","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"6105:4:20","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"6197:4:20","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"6317:4:20","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"6340:4:20","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"6347:4:20","valueSize":1}],"id":3419,"nodeType":"InlineAssembly","src":"5999:371:20"},{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"6436:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"6445:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3422,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"6453:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"nodeType":"ExpressionStatement","src":"6436:21:20"},{"assignments":[3427],"declarations":[{"constant":false,"id":3427,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:20","nodeType":"VariableDeclaration","scope":3491,"src":"6775:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3434,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3429,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"6798:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:20"},{"expression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3435,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3437,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"7046:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3438,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7060:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3442,"nodeType":"ExpressionStatement","src":"7031:36:20"},{"expression":{"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3443,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7100:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"7115:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3446,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7129:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3450,"nodeType":"ExpressionStatement","src":"7100:36:20"},{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3451,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7170:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"7185:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3454,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ExpressionStatement","src":"7170:36:20"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7240:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"7255:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3462,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7269:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3466,"nodeType":"ExpressionStatement","src":"7240:36:20"},{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3467,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7310:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"7325:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3470,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3474,"nodeType":"ExpressionStatement","src":"7310:36:20"},{"expression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3475,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7381:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"7396:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3478,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7410:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3482,"nodeType":"ExpressionStatement","src":"7381:36:20"},{"expression":{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"7851:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"7860:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3485,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7868:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ExpressionStatement","src":"7851:24:20"},{"expression":{"id":3489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"7896:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3378,"id":3490,"nodeType":"Return","src":"7889:13:20"}]}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"3485:313:20","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:20","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"x","nameLocation":"3827:1:20","nodeType":"VariableDeclaration","scope":3493,"src":"3819:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"y","nameLocation":"3838:1:20","nodeType":"VariableDeclaration","scope":3493,"src":"3830:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:20","nodeType":"VariableDeclaration","scope":3493,"src":"3841:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:20"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"result","nameLocation":"3893:6:20","nodeType":"VariableDeclaration","scope":3493,"src":"3885:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:20"},"scope":4159,"src":"3803:4116:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3535,"nodeType":"Block","src":"8161:192:20","statements":[{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"result","nameLocation":"8179:6:20","nodeType":"VariableDeclaration","scope":3535,"src":"8171:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3515,"initialValue":{"arguments":[{"id":3511,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"8195:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3512,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"8198:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3513,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8201:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3510,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3493,3536],"referencedDeclaration":3493,"src":"8188:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3517,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"8244:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}],"id":3516,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"8227:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3116_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"8264:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3521,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"8267:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3522,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8270:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3519,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3532,"nodeType":"IfStatement","src":"8223:101:20","trueBody":{"id":3531,"nodeType":"Block","src":"8288:36:20","statements":[{"expression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"8302:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3530,"nodeType":"ExpressionStatement","src":"8302:11:20"}]}},{"expression":{"id":3533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"8340:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3507,"id":3534,"nodeType":"Return","src":"8333:13:20"}]},"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"7925:121:20","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:20","nodeType":"FunctionDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"x","nameLocation":"8075:1:20","nodeType":"VariableDeclaration","scope":3536,"src":"8067:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"y","nameLocation":"8086:1:20","nodeType":"VariableDeclaration","scope":3536,"src":"8078:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:20","nodeType":"VariableDeclaration","scope":3536,"src":"8089:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:20","nodeType":"VariableDeclaration","scope":3536,"src":"8110:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"},"typeName":{"id":3502,"nodeType":"UserDefinedTypeName","pathNode":{"id":3501,"name":"Rounding","nameLocations":["8110:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3116,"src":"8110:8:20"},"referencedDeclaration":3116,"src":"8110:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:20"},"returnParameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"8152:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:20"},"scope":4159,"src":"8051:302:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3647,"nodeType":"Block","src":"8644:1585:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8658:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3550,"nodeType":"IfStatement","src":"8654:45:20","trueBody":{"id":3549,"nodeType":"Block","src":"8666:33:20","statements":[{"expression":{"hexValue":"30","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3543,"id":3548,"nodeType":"Return","src":"8680:8:20"}]}},{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"result","nameLocation":"9386:6:20","nodeType":"VariableDeclaration","scope":3647,"src":"9378:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3561,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"9406:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3554,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3815,3850],"referencedDeclaration":3815,"src":"9401:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:20"},{"id":3646,"nodeType":"UncheckedBlock","src":"9815:408:20","statements":[{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9839:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9849:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"9858:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9862:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"9839:35:20"},{"expression":{"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9888:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9898:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"9907:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9911:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"nodeType":"ExpressionStatement","src":"9888:35:20"},{"expression":{"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9937:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9947:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"9956:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9960:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ExpressionStatement","src":"9937:35:20"},{"expression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9986:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9996:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"10005:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10009:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3605,"nodeType":"ExpressionStatement","src":"9986:35:20"},{"expression":{"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10035:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10045:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"10054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10058:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3616,"nodeType":"ExpressionStatement","src":"10035:35:20"},{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10084:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10094:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"10103:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10107:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3627,"nodeType":"ExpressionStatement","src":"10084:35:20"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10133:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10143:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"10152:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10156:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"10133:35:20"},{"expression":{"arguments":[{"id":3640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10193:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"10201:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10205:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3639,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"10189:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3543,"id":3645,"nodeType":"Return","src":"10182:30:20"}]}]},"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"8359:223:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:20","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"a","nameLocation":"8609:1:20","nodeType":"VariableDeclaration","scope":3648,"src":"8601:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:20"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3648,"src":"8635:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:20"},"scope":4159,"src":"8587:1642:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3682,"nodeType":"Block","src":"10405:164:20","statements":[{"id":3681,"nodeType":"UncheckedBlock","src":"10415:148:20","statements":[{"assignments":[3660],"declarations":[{"constant":false,"id":3660,"mutability":"mutable","name":"result","nameLocation":"10447:6:20","nodeType":"VariableDeclaration","scope":3681,"src":"10439:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3664,"initialValue":{"arguments":[{"id":3662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"10461:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3661,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3648,3683],"referencedDeclaration":3648,"src":"10456:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"10484:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3667,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"10511:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}],"id":3666,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"10494:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3116_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"10524:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"10533:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3672,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"10542:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:20","trueExpression":{"hexValue":"31","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3658,"id":3680,"nodeType":"Return","src":"10477:75:20"}]}]},"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"10235:89:20","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3683,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:20","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"a","nameLocation":"10351:1:20","nodeType":"VariableDeclaration","scope":3683,"src":"10343:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:20","nodeType":"VariableDeclaration","scope":3683,"src":"10354:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"},"typeName":{"id":3653,"nodeType":"UserDefinedTypeName","pathNode":{"id":3652,"name":"Rounding","nameLocations":["10354:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3116,"src":"10354:8:20"},"referencedDeclaration":3116,"src":"10354:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:20"},"returnParameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3683,"src":"10396:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:20"},"scope":4159,"src":"10329:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3814,"nodeType":"Block","src":"10760:922:20","statements":[{"assignments":[3692],"declarations":[{"constant":false,"id":3692,"mutability":"mutable","name":"result","nameLocation":"10778:6:20","nodeType":"VariableDeclaration","scope":3814,"src":"10770:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3694,"initialValue":{"hexValue":"30","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:20"},{"id":3811,"nodeType":"UncheckedBlock","src":"10798:855:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"10826:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3709,"nodeType":"IfStatement","src":"10822:99:20","trueBody":{"id":3708,"nodeType":"Block","src":"10844:77:20","statements":[{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"10862:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3703,"nodeType":"ExpressionStatement","src":"10862:13:20"},{"expression":{"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"10893:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ExpressionStatement","src":"10893:13:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"10938:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"10934:96:20","trueBody":{"id":3723,"nodeType":"Block","src":"10955:75:20","statements":[{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"10973:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ExpressionStatement","src":"10973:12:20"},{"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11003:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3722,"nodeType":"ExpressionStatement","src":"11003:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11047:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3739,"nodeType":"IfStatement","src":"11043:96:20","trueBody":{"id":3738,"nodeType":"Block","src":"11064:75:20","statements":[{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11082:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ExpressionStatement","src":"11082:12:20"},{"expression":{"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11112:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3737,"nodeType":"ExpressionStatement","src":"11112:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11156:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3754,"nodeType":"IfStatement","src":"11152:96:20","trueBody":{"id":3753,"nodeType":"Block","src":"11173:75:20","statements":[{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11191:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"11191:12:20"},{"expression":{"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11221:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3752,"nodeType":"ExpressionStatement","src":"11221:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11265:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3769,"nodeType":"IfStatement","src":"11261:93:20","trueBody":{"id":3768,"nodeType":"Block","src":"11281:73:20","statements":[{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11299:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"11299:11:20"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11328:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"11328:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11371:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"nodeType":"IfStatement","src":"11367:93:20","trueBody":{"id":3783,"nodeType":"Block","src":"11387:73:20","statements":[{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11405:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"11405:11:20"},{"expression":{"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11434:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3782,"nodeType":"ExpressionStatement","src":"11434:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11477:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3799,"nodeType":"IfStatement","src":"11473:93:20","trueBody":{"id":3798,"nodeType":"Block","src":"11493:73:20","statements":[{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11511:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ExpressionStatement","src":"11511:11:20"},{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11540:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"11540:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11583:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3810,"nodeType":"IfStatement","src":"11579:64:20","trueBody":{"id":3809,"nodeType":"Block","src":"11599:44:20","statements":[{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11617:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ExpressionStatement","src":"11617:11:20"}]}}]},{"expression":{"id":3812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11669:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3690,"id":3813,"nodeType":"Return","src":"11662:13:20"}]},"documentation":{"id":3684,"nodeType":"StructuredDocumentation","src":"10575:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:20","nodeType":"FunctionDefinition","parameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"value","nameLocation":"10721:5:20","nodeType":"VariableDeclaration","scope":3815,"src":"10713:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:20"},"returnParameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"10751:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:20"},"scope":4159,"src":"10699:983:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3849,"nodeType":"Block","src":"11915:168:20","statements":[{"id":3848,"nodeType":"UncheckedBlock","src":"11925:152:20","statements":[{"assignments":[3827],"declarations":[{"constant":false,"id":3827,"mutability":"mutable","name":"result","nameLocation":"11957:6:20","nodeType":"VariableDeclaration","scope":3848,"src":"11949:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3831,"initialValue":{"arguments":[{"id":3829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"11971:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3828,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3815,3850],"referencedDeclaration":3815,"src":"11966:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11998:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3834,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"12025:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}],"id":3833,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"12008:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3116_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"12043:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"12052:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:20","trueExpression":{"hexValue":"31","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3825,"id":3847,"nodeType":"Return","src":"11991:75:20"}]}]},"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"11688:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:20","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"value","nameLocation":"11857:5:20","nodeType":"VariableDeclaration","scope":3850,"src":"11849:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:20","nodeType":"VariableDeclaration","scope":3850,"src":"11864:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"},"typeName":{"id":3820,"nodeType":"UserDefinedTypeName","pathNode":{"id":3819,"name":"Rounding","nameLocations":["11864:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3116,"src":"11864:8:20"},"referencedDeclaration":3116,"src":"11864:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:20"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3850,"src":"11906:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:20"},"scope":4159,"src":"11835:248:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"12276:854:20","statements":[{"assignments":[3859],"declarations":[{"constant":false,"id":3859,"mutability":"mutable","name":"result","nameLocation":"12294:6:20","nodeType":"VariableDeclaration","scope":3978,"src":"12286:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3861,"initialValue":{"hexValue":"30","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:20"},{"id":3975,"nodeType":"UncheckedBlock","src":"12314:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12342:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3878,"nodeType":"IfStatement","src":"12338:103:20","trueBody":{"id":3877,"nodeType":"Block","src":"12361:80:20","statements":[{"expression":{"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3872,"nodeType":"ExpressionStatement","src":"12379:17:20"},{"expression":{"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12414:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3876,"nodeType":"ExpressionStatement","src":"12414:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12458:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3895,"nodeType":"IfStatement","src":"12454:103:20","trueBody":{"id":3894,"nodeType":"Block","src":"12477:80:20","statements":[{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12495:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"12495:17:20"},{"expression":{"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12530:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3893,"nodeType":"ExpressionStatement","src":"12530:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12574:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"12570:103:20","trueBody":{"id":3911,"nodeType":"Block","src":"12593:80:20","statements":[{"expression":{"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12611:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3906,"nodeType":"ExpressionStatement","src":"12611:17:20"},{"expression":{"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12646:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3910,"nodeType":"ExpressionStatement","src":"12646:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12690:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"12686:100:20","trueBody":{"id":3928,"nodeType":"Block","src":"12708:78:20","statements":[{"expression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12726:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3923,"nodeType":"ExpressionStatement","src":"12726:16:20"},{"expression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12760:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3927,"nodeType":"ExpressionStatement","src":"12760:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12803:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3946,"nodeType":"IfStatement","src":"12799:100:20","trueBody":{"id":3945,"nodeType":"Block","src":"12821:78:20","statements":[{"expression":{"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12839:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3940,"nodeType":"ExpressionStatement","src":"12839:16:20"},{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12873:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"12873:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12916:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3963,"nodeType":"IfStatement","src":"12912:100:20","trueBody":{"id":3962,"nodeType":"Block","src":"12934:78:20","statements":[{"expression":{"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"12952:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3957,"nodeType":"ExpressionStatement","src":"12952:16:20"},{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12986:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3961,"nodeType":"ExpressionStatement","src":"12986:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"13029:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3974,"nodeType":"IfStatement","src":"13025:66:20","trueBody":{"id":3973,"nodeType":"Block","src":"13047:44:20","statements":[{"expression":{"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"13065:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3972,"nodeType":"ExpressionStatement","src":"13065:11:20"}]}}]},{"expression":{"id":3976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"13117:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3857,"id":3977,"nodeType":"Return","src":"13110:13:20"}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"12089:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:20","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"value","nameLocation":"12237:5:20","nodeType":"VariableDeclaration","scope":3979,"src":"12229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:20"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3979,"src":"12267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:20"},"scope":4159,"src":"12214:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4013,"nodeType":"Block","src":"13365:170:20","statements":[{"id":4012,"nodeType":"UncheckedBlock","src":"13375:154:20","statements":[{"assignments":[3991],"declarations":[{"constant":false,"id":3991,"mutability":"mutable","name":"result","nameLocation":"13407:6:20","nodeType":"VariableDeclaration","scope":4012,"src":"13399:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3995,"initialValue":{"arguments":[{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"13422:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3992,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3979,4014],"referencedDeclaration":3979,"src":"13416:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"13449:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3998,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"13476:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}],"id":3997,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"13459:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3116_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"13495:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"13504:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:20","trueExpression":{"hexValue":"31","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3989,"id":4011,"nodeType":"Return","src":"13442:76:20"}]}]},"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"13136:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4014,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:20","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"value","nameLocation":"13307:5:20","nodeType":"VariableDeclaration","scope":4014,"src":"13299:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:20","nodeType":"VariableDeclaration","scope":4014,"src":"13314:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"},"typeName":{"id":3984,"nodeType":"UserDefinedTypeName","pathNode":{"id":3983,"name":"Rounding","nameLocations":["13314:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3116,"src":"13314:8:20"},"referencedDeclaration":3116,"src":"13314:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:20"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4014,"src":"13356:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:20"},"scope":4159,"src":"13284:251:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4100,"nodeType":"Block","src":"13855:600:20","statements":[{"assignments":[4023],"declarations":[{"constant":false,"id":4023,"mutability":"mutable","name":"result","nameLocation":"13873:6:20","nodeType":"VariableDeclaration","scope":4100,"src":"13865:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4025,"initialValue":{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:20"},{"id":4097,"nodeType":"UncheckedBlock","src":"13893:533:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"13921:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4040,"nodeType":"IfStatement","src":"13917:98:20","trueBody":{"id":4039,"nodeType":"Block","src":"13939:76:20","statements":[{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"13957:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4034,"nodeType":"ExpressionStatement","src":"13957:13:20"},{"expression":{"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"13988:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4038,"nodeType":"ExpressionStatement","src":"13988:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"14032:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4055,"nodeType":"IfStatement","src":"14028:95:20","trueBody":{"id":4054,"nodeType":"Block","src":"14049:74:20","statements":[{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"14067:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"14067:12:20"},{"expression":{"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"14097:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4053,"nodeType":"ExpressionStatement","src":"14097:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"14140:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"14136:95:20","trueBody":{"id":4069,"nodeType":"Block","src":"14157:74:20","statements":[{"expression":{"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"14175:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4064,"nodeType":"ExpressionStatement","src":"14175:12:20"},{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"14205:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ExpressionStatement","src":"14205:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"14248:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4085,"nodeType":"IfStatement","src":"14244:95:20","trueBody":{"id":4084,"nodeType":"Block","src":"14265:74:20","statements":[{"expression":{"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"14283:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4079,"nodeType":"ExpressionStatement","src":"14283:12:20"},{"expression":{"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"14313:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ExpressionStatement","src":"14313:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"14356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4096,"nodeType":"IfStatement","src":"14352:64:20","trueBody":{"id":4095,"nodeType":"Block","src":"14372:44:20","statements":[{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"14390:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"14390:11:20"}]}}]},{"expression":{"id":4098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"14442:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4021,"id":4099,"nodeType":"Return","src":"14435:13:20"}]},"documentation":{"id":4015,"nodeType":"StructuredDocumentation","src":"13541:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:20","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"value","nameLocation":"13816:5:20","nodeType":"VariableDeclaration","scope":4101,"src":"13808:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:20"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4101,"src":"13846:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:20"},"scope":4159,"src":"13792:663:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4138,"nodeType":"Block","src":"14692:177:20","statements":[{"id":4137,"nodeType":"UncheckedBlock","src":"14702:161:20","statements":[{"assignments":[4113],"declarations":[{"constant":false,"id":4113,"mutability":"mutable","name":"result","nameLocation":"14734:6:20","nodeType":"VariableDeclaration","scope":4137,"src":"14726:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4117,"initialValue":{"arguments":[{"id":4115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"14750:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4114,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4101,4139],"referencedDeclaration":4101,"src":"14743:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"14777:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4120,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"14804:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}],"id":4119,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"14787:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3116_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"14823:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"14838:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:20","trueExpression":{"hexValue":"31","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4111,"id":4136,"nodeType":"Return","src":"14770:82:20"}]}]},"documentation":{"id":4102,"nodeType":"StructuredDocumentation","src":"14461:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:20","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"value","nameLocation":"14634:5:20","nodeType":"VariableDeclaration","scope":4139,"src":"14626:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:20","nodeType":"VariableDeclaration","scope":4139,"src":"14641:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"},"typeName":{"id":4106,"nodeType":"UserDefinedTypeName","pathNode":{"id":4105,"name":"Rounding","nameLocations":["14641:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3116,"src":"14641:8:20"},"referencedDeclaration":3116,"src":"14641:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:20"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4139,"src":"14683:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:20"},"scope":4159,"src":"14610:259:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4157,"nodeType":"Block","src":"15067:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4150,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"15090:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}],"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4148,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:20","typeDescriptions":{}}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4147,"id":4156,"nodeType":"Return","src":"15077:31:20"}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"14875:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:20","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:20","nodeType":"VariableDeclaration","scope":4158,"src":"15019:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"},"typeName":{"id":4142,"nodeType":"UserDefinedTypeName","pathNode":{"id":4141,"name":"Rounding","nameLocations":["15019:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3116,"src":"15019:8:20"},"referencedDeclaration":3116,"src":"15019:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3116","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:20"},"returnParameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4158,"src":"15061:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4145,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:20"},"scope":4159,"src":"14993:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4160,"src":"203:14914:20","usedErrors":[3111],"usedEvents":[]}],"src":"103:15015:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4264]},"id":4265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4161,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4162,"nodeType":"StructuredDocumentation","src":"135:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4264,"linearizedBaseContracts":[4264],"name":"SignedMath","nameLocation":"224:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4179,"nodeType":"Block","src":"376:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"393:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"397:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"405:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:21","trueExpression":{"id":4175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"401:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4171,"id":4178,"nodeType":"Return","src":"386:20:21"}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"241:66:21","text":" @dev Returns the largest of two signed numbers."},"id":4180,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:21","nodeType":"FunctionDefinition","parameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"a","nameLocation":"332:1:21","nodeType":"VariableDeclaration","scope":4180,"src":"325:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4164,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"b","nameLocation":"342:1:21","nodeType":"VariableDeclaration","scope":4180,"src":"335:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4166,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:21"},"returnParameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4180,"src":"368:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4169,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:21"},"scope":4264,"src":"312:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4197,"nodeType":"Block","src":"555:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"572:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"584:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:21","trueExpression":{"id":4193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"580:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4189,"id":4196,"nodeType":"Return","src":"565:20:21"}]},"documentation":{"id":4181,"nodeType":"StructuredDocumentation","src":"419:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":4198,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:21","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"a","nameLocation":"511:1:21","nodeType":"VariableDeclaration","scope":4198,"src":"504:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4182,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4185,"mutability":"mutable","name":"b","nameLocation":"521:1:21","nodeType":"VariableDeclaration","scope":4198,"src":"514:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4184,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:21"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4198,"src":"547:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4187,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:21"},"scope":4264,"src":"491:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"797:162:21","statements":[{"assignments":[4209],"declarations":[{"constant":false,"id":4209,"mutability":"mutable","name":"x","nameLocation":"866:1:21","nodeType":"VariableDeclaration","scope":4241,"src":"859:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4208,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4222,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"871:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"875:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"882:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4215,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"886:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"911:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4228,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"931:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:21","typeDescriptions":{}}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4224,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:21","typeDescriptions":{}}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4233,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"945:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4234,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"949:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4207,"id":4240,"nodeType":"Return","src":"904:48:21"}]},"documentation":{"id":4199,"nodeType":"StructuredDocumentation","src":"598:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:21","nodeType":"FunctionDefinition","parameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"a","nameLocation":"753:1:21","nodeType":"VariableDeclaration","scope":4242,"src":"746:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4200,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"b","nameLocation":"763:1:21","nodeType":"VariableDeclaration","scope":4242,"src":"756:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4202,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:21"},"returnParameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"789:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4205,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:21"},"scope":4264,"src":"729:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"1103:158:21","statements":[{"id":4261,"nodeType":"UncheckedBlock","src":"1113:142:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"1228:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:21","subExpression":{"id":4256,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"1242:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:21","trueExpression":{"id":4255,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"1237:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:21","typeDescriptions":{}}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4249,"id":4260,"nodeType":"Return","src":"1213:31:21"}]}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"965:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:21","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"n","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":4263,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4244,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:21"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"1094:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:21"},"scope":4264,"src":"1048:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4265,"src":"216:1047:21","usedErrors":[],"usedEvents":[]}],"src":"109:1155:21"},"id":21},"contracts/CustomERC20.sol":{"ast":{"absolutePath":"contracts/CustomERC20.sol","exportedSymbols":{"CustomERC20":[4375],"ERC20":[824],"ERC20Burnable":[948],"ERC20Permit":[1102],"IMintableERC20":[4284],"Ownable":[147],"SafeERC20":[1454]},"id":4376,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4266,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4376,"sourceUnit":825,"src":"59:70:22","symbolAliases":[{"foreign":{"id":4267,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"68:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":4270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4376,"sourceUnit":1103,"src":"130:93:22","symbolAliases":[{"foreign":{"id":4269,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"139:11:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":4272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4376,"sourceUnit":949,"src":"224:97:22","symbolAliases":[{"foreign":{"id":4271,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"233:13:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4376,"sourceUnit":1455,"src":"322:84:22","symbolAliases":[{"foreign":{"id":4273,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"331:9:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4376,"sourceUnit":148,"src":"407:69:22","symbolAliases":[{"foreign":{"id":4275,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"416:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMintableERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4284,"linearizedBaseContracts":[4284],"name":"IMintableERC20","nameLocation":"488:14:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":4283,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"518:4:22","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"_to","nameLocation":"531:3:22","nodeType":"VariableDeclaration","scope":4283,"src":"523:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4277,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"_amount","nameLocation":"544:7:22","nodeType":"VariableDeclaration","scope":4283,"src":"536:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"536:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"522:30:22"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[],"src":"561:0:22"},"scope":4284,"src":"509:53:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4376,"src":"478:86:22","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4285,"name":"IMintableERC20","nameLocations":["590:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":4284,"src":"590:14:22"},"id":4286,"nodeType":"InheritanceSpecifier","src":"590:14:22"},{"baseName":{"id":4287,"name":"ERC20","nameLocations":["606:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"606:5:22"},"id":4288,"nodeType":"InheritanceSpecifier","src":"606:5:22"},{"baseName":{"id":4289,"name":"ERC20Permit","nameLocations":["613:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"613:11:22"},"id":4290,"nodeType":"InheritanceSpecifier","src":"613:11:22"},{"baseName":{"id":4291,"name":"ERC20Burnable","nameLocations":["626:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":948,"src":"626:13:22"},"id":4292,"nodeType":"InheritanceSpecifier","src":"626:13:22"},{"baseName":{"id":4293,"name":"Ownable","nameLocations":["641:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"641:7:22"},"id":4294,"nodeType":"InheritanceSpecifier","src":"641:7:22"}],"canonicalName":"CustomERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4375,"linearizedBaseContracts":[4375,147,948,1102,1805,3031,172,1164,824,214,1128,902,1737,4284],"name":"CustomERC20","nameLocation":"575:11:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4298,"libraryName":{"id":4295,"name":"SafeERC20","nameLocations":["661:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":1454,"src":"661:9:22"},"nodeType":"UsingForDirective","src":"655:26:22","typeName":{"id":4297,"nodeType":"UserDefinedTypeName","pathNode":{"id":4296,"name":"ERC20","nameLocations":["675:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"675:5:22"},"referencedDeclaration":824,"src":"675:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$824","typeString":"contract ERC20"}}},{"constant":false,"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"687:33:22","text":"@notice Decimals of the token"},"id":4301,"mutability":"immutable","name":"DECIMALS","nameLocation":"749:8:22","nodeType":"VariableDeclaration","scope":4375,"src":"725:32:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4300,"name":"uint8","nodeType":"ElementaryTypeName","src":"725:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"764:185:22","text":"@notice Emitted whenever tokens are minted for an account.\n @param account Address of the account tokens are being minted for.\n @param amount  Amount of tokens minted."},"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":4308,"name":"Mint","nameLocation":"960:4:22","nodeType":"EventDefinition","parameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"981:7:22","nodeType":"VariableDeclaration","scope":4308,"src":"965:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4303,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4306,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"998:6:22","nodeType":"VariableDeclaration","scope":4308,"src":"990:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"964:41:22"},"src":"954:52:22"},{"anonymous":false,"documentation":{"id":4309,"nodeType":"StructuredDocumentation","src":"1012:187:22","text":"@notice Emitted whenever tokens are burned from an account.\n @param account Address of the account tokens are being burned from.\n @param amount  Amount of tokens burned."},"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":4315,"name":"Burn","nameLocation":"1210:4:22","nodeType":"EventDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1231:7:22","nodeType":"VariableDeclaration","scope":4315,"src":"1215:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4310,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4313,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1248:6:22","nodeType":"VariableDeclaration","scope":4315,"src":"1240:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1240:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1214:41:22"},"src":"1204:52:22"},{"body":{"id":4340,"nodeType":"Block","src":"1645:37:22","statements":[{"expression":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4336,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"1655:8:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4337,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"1666:9:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1655:20:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4339,"nodeType":"ExpressionStatement","src":"1655:20:22"}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"1266:182:22","text":"@param _name        ERC20 name.\n @param _symbol      ERC20 symbol.\n @param _decimals      ERC20 decimals. NOTE: This information is only used for _display_ purposes"},"id":4341,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1572:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1576:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1572:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4327,"kind":"baseConstructorSpecifier","modifierName":{"id":4324,"name":"Ownable","nameLocations":["1564:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1564:7:22"},"nodeType":"ModifierInvocation","src":"1564:19:22"},{"arguments":[{"id":4329,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"1598:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4330,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"1605:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4331,"kind":"baseConstructorSpecifier","modifierName":{"id":4328,"name":"ERC20","nameLocations":["1592:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"1592:5:22"},"nodeType":"ModifierInvocation","src":"1592:21:22"},{"arguments":[{"id":4333,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"1634:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4334,"kind":"baseConstructorSpecifier","modifierName":{"id":4332,"name":"ERC20Permit","nameLocations":["1622:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"1622:11:22"},"nodeType":"ModifierInvocation","src":"1622:18:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"_name","nameLocation":"1488:5:22","nodeType":"VariableDeclaration","scope":4341,"src":"1474:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4317,"name":"string","nodeType":"ElementaryTypeName","src":"1474:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4320,"mutability":"mutable","name":"_symbol","nameLocation":"1517:7:22","nodeType":"VariableDeclaration","scope":4341,"src":"1503:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4319,"name":"string","nodeType":"ElementaryTypeName","src":"1503:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"_decimals","nameLocation":"1540:9:22","nodeType":"VariableDeclaration","scope":4341,"src":"1534:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4321,"name":"uint8","nodeType":"ElementaryTypeName","src":"1534:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1464:91:22"},"returnParameters":{"id":4335,"nodeType":"ParameterList","parameters":[],"src":"1645:0:22"},"scope":4375,"src":"1453:229:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4283],"body":{"id":4363,"nodeType":"Block","src":"1990:69:22","statements":[{"expression":{"arguments":[{"id":4354,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"2006:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4355,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"2011:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4353,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2000:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2000:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4357,"nodeType":"ExpressionStatement","src":"2000:19:22"},{"eventCall":{"arguments":[{"id":4359,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"2039:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4360,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"2044:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4358,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"2034:4:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2034:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4362,"nodeType":"EmitStatement","src":"2029:23:22"}]},"documentation":{"id":4342,"nodeType":"StructuredDocumentation","src":"1688:143:22","text":"@notice Allows the owner to mint tokens.\n @param _to     Address to mint tokens to.\n @param _amount Amount of tokens to mint."},"functionSelector":"40c10f19","id":4364,"implemented":true,"kind":"function","modifiers":[{"id":4351,"kind":"modifierInvocation","modifierName":{"id":4350,"name":"onlyOwner","nameLocations":["1976:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1976:9:22"},"nodeType":"ModifierInvocation","src":"1976:9:22"}],"name":"mint","nameLocation":"1845:4:22","nodeType":"FunctionDefinition","overrides":{"id":4349,"nodeType":"OverrideSpecifier","overrides":[{"id":4348,"name":"IMintableERC20","nameLocations":["1952:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":4284,"src":"1952:14:22"}],"src":"1943:24:22"},"parameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"_to","nameLocation":"1867:3:22","nodeType":"VariableDeclaration","scope":4364,"src":"1859:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"1859:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"_amount","nameLocation":"1888:7:22","nodeType":"VariableDeclaration","scope":4364,"src":"1880:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1849:52:22"},"returnParameters":{"id":4352,"nodeType":"ParameterList","parameters":[],"src":"1990:0:22"},"scope":4375,"src":"1836:223:22","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"baseFunctions":[388],"body":{"id":4373,"nodeType":"Block","src":"2539:32:22","statements":[{"expression":{"id":4371,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"2556:8:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4370,"id":4372,"nodeType":"Return","src":"2549:15:22"}]},"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"2065:412:22","text":"@dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":4374,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2491:8:22","nodeType":"FunctionDefinition","overrides":{"id":4367,"nodeType":"OverrideSpecifier","overrides":[],"src":"2514:8:22"},"parameters":{"id":4366,"nodeType":"ParameterList","parameters":[],"src":"2499:2:22"},"returnParameters":{"id":4370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4374,"src":"2532:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4368,"name":"uint8","nodeType":"ElementaryTypeName","src":"2532:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2531:7:22"},"scope":4375,"src":"2482:89:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4376,"src":"566:2008:22","usedErrors":[13,18,184,189,194,203,208,213,979,986,1747,1888,1890,2467,2472,2477],"usedEvents":[24,152,836,845,4308,4315]}],"src":"33:2542:22"},"id":22},"contracts/FixedRateDistribution.sol":{"ast":{"absolutePath":"contracts/FixedRateDistribution.sol","exportedSymbols":{"FixedRateDistribution":[4607],"IERC20":[902],"Ownable":[147],"ReentrancyGuard":[1874],"SafeMath":[4418]},"id":4608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4377,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:23"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4608,"sourceUnit":148,"src":"59:69:23","symbolAliases":[{"foreign":{"id":4378,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"68:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4608,"sourceUnit":903,"src":"129:72:23","symbolAliases":[{"foreign":{"id":4380,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"138:6:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4608,"sourceUnit":1875,"src":"202:84:23","symbolAliases":[{"foreign":{"id":4382,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"211:15:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4418,"linearizedBaseContracts":[4418],"name":"SafeMath","nameLocation":"296:8:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4416,"nodeType":"Block","src":"443:98:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"453:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"458:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"453:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4399,"nodeType":"IfStatement","src":"449:35:23","trueBody":{"id":4398,"nodeType":"Block","src":"461:23:23","statements":[{"expression":{"hexValue":"30","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"476:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4392,"id":4397,"nodeType":"Return","src":"469:8:23"}]}},{"expression":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4400,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"489:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"493:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"497:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"493:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"489:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4405,"nodeType":"ExpressionStatement","src":"489:9:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"511:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"515:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"511:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"520:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"511:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4406,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"504:6:23","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"504:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4413,"nodeType":"ExpressionStatement","src":"504:18:23"},{"expression":{"id":4414,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"535:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4392,"id":4415,"nodeType":"Return","src":"528:8:23"}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"310:61:23","text":" @dev Multiplies two numbers, throws on overflow."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"383:3:23","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"a","nameLocation":"395:1:23","nodeType":"VariableDeclaration","scope":4417,"src":"387:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"b","nameLocation":"406:1:23","nodeType":"VariableDeclaration","scope":4417,"src":"398:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"386:22:23"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"c","nameLocation":"440:1:23","nodeType":"VariableDeclaration","scope":4417,"src":"432:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"432:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"431:11:23"},"scope":4418,"src":"374:167:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4608,"src":"288:256:23","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4419,"name":"Ownable","nameLocations":["580:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"580:7:23"},"id":4420,"nodeType":"InheritanceSpecifier","src":"580:7:23"},{"baseName":{"id":4421,"name":"ReentrancyGuard","nameLocations":["589:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":1874,"src":"589:15:23"},"id":4422,"nodeType":"InheritanceSpecifier","src":"589:15:23"}],"canonicalName":"FixedRateDistribution","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4607,"linearizedBaseContracts":[4607,1874,147,1737],"name":"FixedRateDistribution","nameLocation":"555:21:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4425,"libraryName":{"id":4423,"name":"SafeMath","nameLocations":["622:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4418,"src":"622:8:23"},"nodeType":"UsingForDirective","src":"616:24:23","typeName":{"id":4424,"name":"uint","nodeType":"ElementaryTypeName","src":"635:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":4428,"libraryName":{"id":4426,"name":"SafeMath","nameLocations":["651:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4418,"src":"651:8:23"},"nodeType":"UsingForDirective","src":"645:27:23","typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":4431,"mutability":"mutable","name":"token","nameLocation":"685:5:23","nodeType":"VariableDeclaration","scope":4607,"src":"678:12:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":4430,"nodeType":"UserDefinedTypeName","pathNode":{"id":4429,"name":"IERC20","nameLocations":["678:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"678:6:23"},"referencedDeclaration":902,"src":"678:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4433,"mutability":"mutable","name":"paused","nameLocation":"701:6:23","nodeType":"VariableDeclaration","scope":4607,"src":"696:11:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4432,"name":"bool","nodeType":"ElementaryTypeName","src":"696:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4435,"mutability":"mutable","name":"multiply","nameLocation":"718:8:23","nodeType":"VariableDeclaration","scope":4607,"src":"713:13:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4434,"name":"bool","nodeType":"ElementaryTypeName","src":"713:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4437,"mutability":"mutable","name":"rate","nameLocation":"740:4:23","nodeType":"VariableDeclaration","scope":4607,"src":"732:12:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":4470,"nodeType":"Block","src":"894:118:23","statements":[{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4452,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"904:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4453,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"913:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"904:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4455,"nodeType":"ExpressionStatement","src":"904:16:23"},{"expression":{"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4456,"name":"multiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"930:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4457,"name":"_multiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"941:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"930:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"ExpressionStatement","src":"930:20:23"},{"expression":{"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"960:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4461,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"967:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"960:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4463,"nodeType":"ExpressionStatement","src":"960:12:23"},{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"983:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4466,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"998:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4465,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"991:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"991:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"src":"983:22:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":4469,"nodeType":"ExpressionStatement","src":"983:22:23"}]},"id":4471,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4448,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"878:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"882:6:23","memberName":"sender","nodeType":"MemberAccess","src":"878:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4450,"kind":"baseConstructorSpecifier","modifierName":{"id":4447,"name":"Ownable","nameLocations":["870:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"870:7:23"},"nodeType":"ModifierInvocation","src":"870:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"_token","nameLocation":"780:6:23","nodeType":"VariableDeclaration","scope":4471,"src":"772:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4438,"name":"address","nodeType":"ElementaryTypeName","src":"772:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"_paused","nameLocation":"801:7:23","nodeType":"VariableDeclaration","scope":4471,"src":"796:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4440,"name":"bool","nodeType":"ElementaryTypeName","src":"796:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"_multiply","nameLocation":"823:9:23","nodeType":"VariableDeclaration","scope":4471,"src":"818:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4442,"name":"bool","nodeType":"ElementaryTypeName","src":"818:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4445,"mutability":"mutable","name":"_rate","nameLocation":"850:5:23","nodeType":"VariableDeclaration","scope":4471,"src":"842:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"762:99:23"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[],"src":"894:0:23"},"scope":4607,"src":"751:261:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4523,"nodeType":"Block","src":"1045:413:23","statements":[{"expression":{"arguments":[{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1063:7:23","subExpression":{"id":4475,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"1064:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446973747269627574696f6e206973207061757365642e","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1072:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b","typeString":"literal_string \"Distribution is paused.\""},"value":"Distribution is paused."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b","typeString":"literal_string \"Distribution is paused.\""}],"id":4474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1055:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4479,"nodeType":"ExpressionStatement","src":"1055:43:23"},{"assignments":[4481],"declarations":[{"constant":false,"id":4481,"mutability":"mutable","name":"tokensToPay","nameLocation":"1117:11:23","nodeType":"VariableDeclaration","scope":4523,"src":"1109:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4483,"initialValue":{"hexValue":"30","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1131:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1109:23:23"},{"condition":{"id":4484,"name":"multiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"1146:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4500,"nodeType":"Block","src":"1217:55:23","statements":[{"expression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4493,"name":"tokensToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"1231:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1245:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1249:5:23","memberName":"value","nodeType":"MemberAccess","src":"1245:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4496,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"1257:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1245:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1231:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"nodeType":"ExpressionStatement","src":"1231:30:23"}]},"id":4501,"nodeType":"IfStatement","src":"1142:130:23","trueBody":{"id":4492,"nodeType":"Block","src":"1156:55:23","statements":[{"expression":{"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4485,"name":"tokensToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"1170:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1184:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1188:5:23","memberName":"value","nodeType":"MemberAccess","src":"1184:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4488,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"1196:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1184:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1170:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4491,"nodeType":"ExpressionStatement","src":"1170:30:23"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"tokensToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"1303:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"arguments":[{"id":4508,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1342:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FixedRateDistribution_$4607","typeString":"contract FixedRateDistribution"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FixedRateDistribution_$4607","typeString":"contract FixedRateDistribution"}],"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1334:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4506,"name":"address","nodeType":"ElementaryTypeName","src":"1334:7:23","typeDescriptions":{}}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4504,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"1318:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1324:9:23","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":859,"src":"1318:15:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1318:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1303:45:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1362:30:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7","typeString":"literal_string \"Not enough tokens available.\""},"value":"Not enough tokens available."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7","typeString":"literal_string \"Not enough tokens available.\""}],"id":4502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1282:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:120:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4514,"nodeType":"ExpressionStatement","src":"1282:120:23"},{"expression":{"arguments":[{"expression":{"id":4518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1427:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1431:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1427:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4520,"name":"tokensToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"1439:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4515,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"1412:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1418:8:23","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":869,"src":"1412:14:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"ExpressionStatement","src":"1412:39:23"}]},"id":4524,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4472,"nodeType":"ParameterList","parameters":[],"src":"1025:2:23"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[],"src":"1045:0:23"},"scope":4607,"src":"1018:440:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4535,"nodeType":"Block","src":"1550:33:23","statements":[{"expression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4531,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"1560:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4532,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"1569:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1560:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4534,"nodeType":"ExpressionStatement","src":"1560:16:23"}]},"functionSelector":"16c38b3c","id":4536,"implemented":true,"kind":"function","modifiers":[{"id":4529,"kind":"modifierInvocation","modifierName":{"id":4528,"name":"onlyOwner","nameLocations":["1536:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1536:9:23"},"nodeType":"ModifierInvocation","src":"1536:9:23"}],"name":"setPaused","nameLocation":"1473:9:23","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"_paused","nameLocation":"1497:7:23","nodeType":"VariableDeclaration","scope":4536,"src":"1492:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4525,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:28:23"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[],"src":"1550:0:23"},"scope":4607,"src":"1464:119:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4547,"nodeType":"Block","src":"1674:29:23","statements":[{"expression":{"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4543,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"1684:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4544,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"1691:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1684:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4546,"nodeType":"ExpressionStatement","src":"1684:12:23"}]},"functionSelector":"34fcf437","id":4548,"implemented":true,"kind":"function","modifiers":[{"id":4541,"kind":"modifierInvocation","modifierName":{"id":4540,"name":"onlyOwner","nameLocations":["1660:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1660:9:23"},"nodeType":"ModifierInvocation","src":"1660:9:23"}],"name":"setRate","nameLocation":"1598:7:23","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"_rate","nameLocation":"1623:5:23","nodeType":"VariableDeclaration","scope":4548,"src":"1615:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1615:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1605:29:23"},"returnParameters":{"id":4542,"nodeType":"ParameterList","parameters":[],"src":"1674:0:23"},"scope":4607,"src":"1589:114:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4559,"nodeType":"Block","src":"1799:37:23","statements":[{"expression":{"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4555,"name":"multiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"1809:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4556,"name":"_multiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"1820:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1809:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4558,"nodeType":"ExpressionStatement","src":"1809:20:23"}]},"functionSelector":"f170d20d","id":4560,"implemented":true,"kind":"function","modifiers":[{"id":4553,"kind":"modifierInvocation","modifierName":{"id":4552,"name":"onlyOwner","nameLocations":["1785:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1785:9:23"},"nodeType":"ModifierInvocation","src":"1785:9:23"}],"name":"setMultiply","nameLocation":"1718:11:23","nodeType":"FunctionDefinition","parameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"_multiply","nameLocation":"1744:9:23","nodeType":"VariableDeclaration","scope":4560,"src":"1739:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4549,"name":"bool","nodeType":"ElementaryTypeName","src":"1739:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1729:30:23"},"returnParameters":{"id":4554,"nodeType":"ParameterList","parameters":[],"src":"1799:0:23"},"scope":4607,"src":"1709:127:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4579,"nodeType":"Block","src":"1984:58:23","statements":[{"expression":{"arguments":[{"id":4575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"2024:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"2028:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4572,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"2001:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4571,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1994:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1994:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2015:8:23","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":869,"src":"1994:29:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1994:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"ExpressionStatement","src":"1994:41:23"}]},"functionSelector":"01e33667","id":4580,"implemented":true,"kind":"function","modifiers":[{"id":4569,"kind":"modifierInvocation","modifierName":{"id":4568,"name":"onlyOwner","nameLocations":["1970:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1970:9:23"},"nodeType":"ModifierInvocation","src":"1970:9:23"}],"name":"withdrawToken","nameLocation":"1851:13:23","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"tokenAddress","nameLocation":"1882:12:23","nodeType":"VariableDeclaration","scope":4580,"src":"1874:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4561,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"to","nameLocation":"1912:2:23","nodeType":"VariableDeclaration","scope":4580,"src":"1904:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"1904:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"amount","nameLocation":"1932:6:23","nodeType":"VariableDeclaration","scope":4580,"src":"1924:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1864:80:23"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[],"src":"1984:0:23"},"scope":4607,"src":"1842:200:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4605,"nodeType":"Block","src":"2167:124:23","statements":[{"assignments":[4590,4592],"declarations":[{"constant":false,"id":4590,"mutability":"mutable","name":"sent","nameLocation":"2183:4:23","nodeType":"VariableDeclaration","scope":4605,"src":"2178:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4589,"name":"bool","nodeType":"ElementaryTypeName","src":"2178:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"data","nameLocation":"2202:4:23","nodeType":"VariableDeclaration","scope":4605,"src":"2189:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4591,"name":"bytes","nodeType":"ElementaryTypeName","src":"2189:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4599,"initialValue":{"arguments":[{"hexValue":"","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2234:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4593,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"2210:3:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2214:4:23","memberName":"call","nodeType":"MemberAccess","src":"2210:8:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4595,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"2226:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2210:23:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2177:60:23"},{"expression":{"arguments":[{"id":4601,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"2255:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204574686572","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2261:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""},"value":"Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""}],"id":4600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2247:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"ExpressionStatement","src":"2247:37:23"}]},"functionSelector":"4782f779","id":4606,"implemented":true,"kind":"function","modifiers":[{"id":4587,"kind":"modifierInvocation","modifierName":{"id":4586,"name":"onlyOwner","nameLocations":["2153:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2153:9:23"},"nodeType":"ModifierInvocation","src":"2153:9:23"}],"name":"withdrawETH","nameLocation":"2057:11:23","nodeType":"FunctionDefinition","parameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"_to","nameLocation":"2094:3:23","nodeType":"VariableDeclaration","scope":4606,"src":"2078:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"2078:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"amount","nameLocation":"2115:6:23","nodeType":"VariableDeclaration","scope":4606,"src":"2107:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2068:59:23"},"returnParameters":{"id":4588,"nodeType":"ParameterList","parameters":[],"src":"2167:0:23"},"scope":4607,"src":"2048:243:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4608,"src":"546:1748:23","usedErrors":[13,18,1819],"usedEvents":[24]}],"src":"33:2262:23"},"id":23}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":332,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":338,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":340,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":342,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":344,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":332,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":338,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":340,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":342,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":344,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":332,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":338,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":340,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":342,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":344,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2841,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":2843,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1751,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1751,"contract":"@openzeppelin/contracts/utils/Nonces.sol:Nonces","label":"_nonces","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1816,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2841,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2843,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/CustomERC20.sol":{"CustomERC20":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint8","name":"_decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2901":{"entryPoint":null,"id":2901,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_4341":{"entryPoint":null,"id":4341,"parameterSlots":3,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_997":{"entryPoint":null,"id":997,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_2948":{"entryPoint":577,"id":2948,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":670,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2178":{"entryPoint":977,"id":2178,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2032":{"entryPoint":489,"id":2032,"parameterSlots":2,"returnSlots":1},"@toShortString_1934":{"entryPoint":868,"id":1934,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1264,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1339,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":1429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory":{"entryPoint":1452,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2476,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2532,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2549,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2566,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2741,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1135,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":987,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1166,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2788,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1717,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2777,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1606,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2659,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2038,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2456,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2522,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2424,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1853,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1390,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1999,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2827,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1873,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2193,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1220,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1738,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1664,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2163,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1081,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1863,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2131,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1617,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1034,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1913,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2804,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1007,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1012,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1002,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":997,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1017,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1754,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2118,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1971,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1767,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1923,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":1403,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1966,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:12537:24","nodeType":"YulBlock","src":"0:12537:24","statements":[{"body":{"nativeSrc":"47:35:24","nodeType":"YulBlock","src":"47:35:24","statements":[{"nativeSrc":"57:19:24","nodeType":"YulAssignment","src":"57:19:24","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:24","nodeType":"YulLiteral","src":"73:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:24","nodeType":"YulIdentifier","src":"67:5:24"},"nativeSrc":"67:9:24","nodeType":"YulFunctionCall","src":"67:9:24"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:24","nodeType":"YulIdentifier","src":"57:6:24"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:24","nodeType":"YulTypedName","src":"40:6:24","type":""}],"src":"7:75:24"},{"body":{"nativeSrc":"177:28:24","nodeType":"YulBlock","src":"177:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:24","nodeType":"YulLiteral","src":"194:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:24","nodeType":"YulLiteral","src":"197:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:24","nodeType":"YulIdentifier","src":"187:6:24"},"nativeSrc":"187:12:24","nodeType":"YulFunctionCall","src":"187:12:24"},"nativeSrc":"187:12:24","nodeType":"YulExpressionStatement","src":"187:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:24","nodeType":"YulFunctionDefinition","src":"88:117:24"},{"body":{"nativeSrc":"300:28:24","nodeType":"YulBlock","src":"300:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:24","nodeType":"YulLiteral","src":"317:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:24","nodeType":"YulLiteral","src":"320:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},"nativeSrc":"310:12:24","nodeType":"YulFunctionCall","src":"310:12:24"},"nativeSrc":"310:12:24","nodeType":"YulExpressionStatement","src":"310:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:24","nodeType":"YulFunctionDefinition","src":"211:117:24"},{"body":{"nativeSrc":"423:28:24","nodeType":"YulBlock","src":"423:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:24","nodeType":"YulLiteral","src":"440:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:24","nodeType":"YulLiteral","src":"443:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:24","nodeType":"YulIdentifier","src":"433:6:24"},"nativeSrc":"433:12:24","nodeType":"YulFunctionCall","src":"433:12:24"},"nativeSrc":"433:12:24","nodeType":"YulExpressionStatement","src":"433:12:24"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:24","nodeType":"YulFunctionDefinition","src":"334:117:24"},{"body":{"nativeSrc":"546:28:24","nodeType":"YulBlock","src":"546:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:24","nodeType":"YulLiteral","src":"563:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:24","nodeType":"YulLiteral","src":"566:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:24","nodeType":"YulIdentifier","src":"556:6:24"},"nativeSrc":"556:12:24","nodeType":"YulFunctionCall","src":"556:12:24"},"nativeSrc":"556:12:24","nodeType":"YulExpressionStatement","src":"556:12:24"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:24","nodeType":"YulFunctionDefinition","src":"457:117:24"},{"body":{"nativeSrc":"628:54:24","nodeType":"YulBlock","src":"628:54:24","statements":[{"nativeSrc":"638:38:24","nodeType":"YulAssignment","src":"638:38:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:24","nodeType":"YulIdentifier","src":"656:5:24"},{"kind":"number","nativeSrc":"663:2:24","nodeType":"YulLiteral","src":"663:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:24","nodeType":"YulIdentifier","src":"652:3:24"},"nativeSrc":"652:14:24","nodeType":"YulFunctionCall","src":"652:14:24"},{"arguments":[{"kind":"number","nativeSrc":"672:2:24","nodeType":"YulLiteral","src":"672:2:24","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:24","nodeType":"YulIdentifier","src":"668:3:24"},"nativeSrc":"668:7:24","nodeType":"YulFunctionCall","src":"668:7:24"}],"functionName":{"name":"and","nativeSrc":"648:3:24","nodeType":"YulIdentifier","src":"648:3:24"},"nativeSrc":"648:28:24","nodeType":"YulFunctionCall","src":"648:28:24"},"variableNames":[{"name":"result","nativeSrc":"638:6:24","nodeType":"YulIdentifier","src":"638:6:24"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:24","nodeType":"YulTypedName","src":"611:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:24","nodeType":"YulTypedName","src":"621:6:24","type":""}],"src":"580:102:24"},{"body":{"nativeSrc":"716:152:24","nodeType":"YulBlock","src":"716:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:24","nodeType":"YulLiteral","src":"733:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:24","nodeType":"YulLiteral","src":"736:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:24","nodeType":"YulIdentifier","src":"726:6:24"},"nativeSrc":"726:88:24","nodeType":"YulFunctionCall","src":"726:88:24"},"nativeSrc":"726:88:24","nodeType":"YulExpressionStatement","src":"726:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:24","nodeType":"YulLiteral","src":"830:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:24","nodeType":"YulLiteral","src":"833:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:24","nodeType":"YulIdentifier","src":"823:6:24"},"nativeSrc":"823:15:24","nodeType":"YulFunctionCall","src":"823:15:24"},"nativeSrc":"823:15:24","nodeType":"YulExpressionStatement","src":"823:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:24","nodeType":"YulLiteral","src":"854:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:24","nodeType":"YulLiteral","src":"857:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:24","nodeType":"YulIdentifier","src":"847:6:24"},"nativeSrc":"847:15:24","nodeType":"YulFunctionCall","src":"847:15:24"},"nativeSrc":"847:15:24","nodeType":"YulExpressionStatement","src":"847:15:24"}]},"name":"panic_error_0x41","nativeSrc":"688:180:24","nodeType":"YulFunctionDefinition","src":"688:180:24"},{"body":{"nativeSrc":"917:238:24","nodeType":"YulBlock","src":"917:238:24","statements":[{"nativeSrc":"927:58:24","nodeType":"YulVariableDeclaration","src":"927:58:24","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:24","nodeType":"YulIdentifier","src":"949:6:24"},{"arguments":[{"name":"size","nativeSrc":"979:4:24","nodeType":"YulIdentifier","src":"979:4:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:24","nodeType":"YulIdentifier","src":"957:21:24"},"nativeSrc":"957:27:24","nodeType":"YulFunctionCall","src":"957:27:24"}],"functionName":{"name":"add","nativeSrc":"945:3:24","nodeType":"YulIdentifier","src":"945:3:24"},"nativeSrc":"945:40:24","nodeType":"YulFunctionCall","src":"945:40:24"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:24","nodeType":"YulTypedName","src":"931:10:24","type":""}]},{"body":{"nativeSrc":"1096:22:24","nodeType":"YulBlock","src":"1096:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:24","nodeType":"YulIdentifier","src":"1098:16:24"},"nativeSrc":"1098:18:24","nodeType":"YulFunctionCall","src":"1098:18:24"},"nativeSrc":"1098:18:24","nodeType":"YulExpressionStatement","src":"1098:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:24","nodeType":"YulIdentifier","src":"1039:10:24"},{"kind":"number","nativeSrc":"1051:18:24","nodeType":"YulLiteral","src":"1051:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:24","nodeType":"YulIdentifier","src":"1036:2:24"},"nativeSrc":"1036:34:24","nodeType":"YulFunctionCall","src":"1036:34:24"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:24","nodeType":"YulIdentifier","src":"1075:10:24"},{"name":"memPtr","nativeSrc":"1087:6:24","nodeType":"YulIdentifier","src":"1087:6:24"}],"functionName":{"name":"lt","nativeSrc":"1072:2:24","nodeType":"YulIdentifier","src":"1072:2:24"},"nativeSrc":"1072:22:24","nodeType":"YulFunctionCall","src":"1072:22:24"}],"functionName":{"name":"or","nativeSrc":"1033:2:24","nodeType":"YulIdentifier","src":"1033:2:24"},"nativeSrc":"1033:62:24","nodeType":"YulFunctionCall","src":"1033:62:24"},"nativeSrc":"1030:88:24","nodeType":"YulIf","src":"1030:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:24","nodeType":"YulLiteral","src":"1134:2:24","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:24","nodeType":"YulIdentifier","src":"1138:10:24"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:24","nodeType":"YulIdentifier","src":"1127:6:24"},"nativeSrc":"1127:22:24","nodeType":"YulFunctionCall","src":"1127:22:24"},"nativeSrc":"1127:22:24","nodeType":"YulExpressionStatement","src":"1127:22:24"}]},"name":"finalize_allocation","nativeSrc":"874:281:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:24","nodeType":"YulTypedName","src":"903:6:24","type":""},{"name":"size","nativeSrc":"911:4:24","nodeType":"YulTypedName","src":"911:4:24","type":""}],"src":"874:281:24"},{"body":{"nativeSrc":"1202:88:24","nodeType":"YulBlock","src":"1202:88:24","statements":[{"nativeSrc":"1212:30:24","nodeType":"YulAssignment","src":"1212:30:24","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:24","nodeType":"YulIdentifier","src":"1222:18:24"},"nativeSrc":"1222:20:24","nodeType":"YulFunctionCall","src":"1222:20:24"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:24","nodeType":"YulIdentifier","src":"1212:6:24"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:24","nodeType":"YulIdentifier","src":"1271:6:24"},{"name":"size","nativeSrc":"1279:4:24","nodeType":"YulIdentifier","src":"1279:4:24"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:24","nodeType":"YulIdentifier","src":"1251:19:24"},"nativeSrc":"1251:33:24","nodeType":"YulFunctionCall","src":"1251:33:24"},"nativeSrc":"1251:33:24","nodeType":"YulExpressionStatement","src":"1251:33:24"}]},"name":"allocate_memory","nativeSrc":"1161:129:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:24","nodeType":"YulTypedName","src":"1186:4:24","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:24","nodeType":"YulTypedName","src":"1195:6:24","type":""}],"src":"1161:129:24"},{"body":{"nativeSrc":"1363:241:24","nodeType":"YulBlock","src":"1363:241:24","statements":[{"body":{"nativeSrc":"1468:22:24","nodeType":"YulBlock","src":"1468:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:24","nodeType":"YulIdentifier","src":"1470:16:24"},"nativeSrc":"1470:18:24","nodeType":"YulFunctionCall","src":"1470:18:24"},"nativeSrc":"1470:18:24","nodeType":"YulExpressionStatement","src":"1470:18:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:24","nodeType":"YulIdentifier","src":"1440:6:24"},{"kind":"number","nativeSrc":"1448:18:24","nodeType":"YulLiteral","src":"1448:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:24","nodeType":"YulIdentifier","src":"1437:2:24"},"nativeSrc":"1437:30:24","nodeType":"YulFunctionCall","src":"1437:30:24"},"nativeSrc":"1434:56:24","nodeType":"YulIf","src":"1434:56:24"},{"nativeSrc":"1500:37:24","nodeType":"YulAssignment","src":"1500:37:24","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:24","nodeType":"YulIdentifier","src":"1530:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:24","nodeType":"YulIdentifier","src":"1508:21:24"},"nativeSrc":"1508:29:24","nodeType":"YulFunctionCall","src":"1508:29:24"},"variableNames":[{"name":"size","nativeSrc":"1500:4:24","nodeType":"YulIdentifier","src":"1500:4:24"}]},{"nativeSrc":"1574:23:24","nodeType":"YulAssignment","src":"1574:23:24","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:24","nodeType":"YulIdentifier","src":"1586:4:24"},{"kind":"number","nativeSrc":"1592:4:24","nodeType":"YulLiteral","src":"1592:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:24","nodeType":"YulIdentifier","src":"1582:3:24"},"nativeSrc":"1582:15:24","nodeType":"YulFunctionCall","src":"1582:15:24"},"variableNames":[{"name":"size","nativeSrc":"1574:4:24","nodeType":"YulIdentifier","src":"1574:4:24"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:24","nodeType":"YulTypedName","src":"1347:6:24","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:24","nodeType":"YulTypedName","src":"1358:4:24","type":""}],"src":"1296:308:24"},{"body":{"nativeSrc":"1672:184:24","nodeType":"YulBlock","src":"1672:184:24","statements":[{"nativeSrc":"1682:10:24","nodeType":"YulVariableDeclaration","src":"1682:10:24","value":{"kind":"number","nativeSrc":"1691:1:24","nodeType":"YulLiteral","src":"1691:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1686:1:24","nodeType":"YulTypedName","src":"1686:1:24","type":""}]},{"body":{"nativeSrc":"1751:63:24","nodeType":"YulBlock","src":"1751:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1776:3:24","nodeType":"YulIdentifier","src":"1776:3:24"},{"name":"i","nativeSrc":"1781:1:24","nodeType":"YulIdentifier","src":"1781:1:24"}],"functionName":{"name":"add","nativeSrc":"1772:3:24","nodeType":"YulIdentifier","src":"1772:3:24"},"nativeSrc":"1772:11:24","nodeType":"YulFunctionCall","src":"1772:11:24"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1795:3:24","nodeType":"YulIdentifier","src":"1795:3:24"},{"name":"i","nativeSrc":"1800:1:24","nodeType":"YulIdentifier","src":"1800:1:24"}],"functionName":{"name":"add","nativeSrc":"1791:3:24","nodeType":"YulIdentifier","src":"1791:3:24"},"nativeSrc":"1791:11:24","nodeType":"YulFunctionCall","src":"1791:11:24"}],"functionName":{"name":"mload","nativeSrc":"1785:5:24","nodeType":"YulIdentifier","src":"1785:5:24"},"nativeSrc":"1785:18:24","nodeType":"YulFunctionCall","src":"1785:18:24"}],"functionName":{"name":"mstore","nativeSrc":"1765:6:24","nodeType":"YulIdentifier","src":"1765:6:24"},"nativeSrc":"1765:39:24","nodeType":"YulFunctionCall","src":"1765:39:24"},"nativeSrc":"1765:39:24","nodeType":"YulExpressionStatement","src":"1765:39:24"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1712:1:24","nodeType":"YulIdentifier","src":"1712:1:24"},{"name":"length","nativeSrc":"1715:6:24","nodeType":"YulIdentifier","src":"1715:6:24"}],"functionName":{"name":"lt","nativeSrc":"1709:2:24","nodeType":"YulIdentifier","src":"1709:2:24"},"nativeSrc":"1709:13:24","nodeType":"YulFunctionCall","src":"1709:13:24"},"nativeSrc":"1701:113:24","nodeType":"YulForLoop","post":{"nativeSrc":"1723:19:24","nodeType":"YulBlock","src":"1723:19:24","statements":[{"nativeSrc":"1725:15:24","nodeType":"YulAssignment","src":"1725:15:24","value":{"arguments":[{"name":"i","nativeSrc":"1734:1:24","nodeType":"YulIdentifier","src":"1734:1:24"},{"kind":"number","nativeSrc":"1737:2:24","nodeType":"YulLiteral","src":"1737:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1730:3:24","nodeType":"YulIdentifier","src":"1730:3:24"},"nativeSrc":"1730:10:24","nodeType":"YulFunctionCall","src":"1730:10:24"},"variableNames":[{"name":"i","nativeSrc":"1725:1:24","nodeType":"YulIdentifier","src":"1725:1:24"}]}]},"pre":{"nativeSrc":"1705:3:24","nodeType":"YulBlock","src":"1705:3:24","statements":[]},"src":"1701:113:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1834:3:24","nodeType":"YulIdentifier","src":"1834:3:24"},{"name":"length","nativeSrc":"1839:6:24","nodeType":"YulIdentifier","src":"1839:6:24"}],"functionName":{"name":"add","nativeSrc":"1830:3:24","nodeType":"YulIdentifier","src":"1830:3:24"},"nativeSrc":"1830:16:24","nodeType":"YulFunctionCall","src":"1830:16:24"},{"kind":"number","nativeSrc":"1848:1:24","nodeType":"YulLiteral","src":"1848:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1823:6:24","nodeType":"YulIdentifier","src":"1823:6:24"},"nativeSrc":"1823:27:24","nodeType":"YulFunctionCall","src":"1823:27:24"},"nativeSrc":"1823:27:24","nodeType":"YulExpressionStatement","src":"1823:27:24"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1610:246:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1654:3:24","nodeType":"YulTypedName","src":"1654:3:24","type":""},{"name":"dst","nativeSrc":"1659:3:24","nodeType":"YulTypedName","src":"1659:3:24","type":""},{"name":"length","nativeSrc":"1664:6:24","nodeType":"YulTypedName","src":"1664:6:24","type":""}],"src":"1610:246:24"},{"body":{"nativeSrc":"1957:339:24","nodeType":"YulBlock","src":"1957:339:24","statements":[{"nativeSrc":"1967:75:24","nodeType":"YulAssignment","src":"1967:75:24","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2034:6:24","nodeType":"YulIdentifier","src":"2034:6:24"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1992:41:24","nodeType":"YulIdentifier","src":"1992:41:24"},"nativeSrc":"1992:49:24","nodeType":"YulFunctionCall","src":"1992:49:24"}],"functionName":{"name":"allocate_memory","nativeSrc":"1976:15:24","nodeType":"YulIdentifier","src":"1976:15:24"},"nativeSrc":"1976:66:24","nodeType":"YulFunctionCall","src":"1976:66:24"},"variableNames":[{"name":"array","nativeSrc":"1967:5:24","nodeType":"YulIdentifier","src":"1967:5:24"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2058:5:24","nodeType":"YulIdentifier","src":"2058:5:24"},{"name":"length","nativeSrc":"2065:6:24","nodeType":"YulIdentifier","src":"2065:6:24"}],"functionName":{"name":"mstore","nativeSrc":"2051:6:24","nodeType":"YulIdentifier","src":"2051:6:24"},"nativeSrc":"2051:21:24","nodeType":"YulFunctionCall","src":"2051:21:24"},"nativeSrc":"2051:21:24","nodeType":"YulExpressionStatement","src":"2051:21:24"},{"nativeSrc":"2081:27:24","nodeType":"YulVariableDeclaration","src":"2081:27:24","value":{"arguments":[{"name":"array","nativeSrc":"2096:5:24","nodeType":"YulIdentifier","src":"2096:5:24"},{"kind":"number","nativeSrc":"2103:4:24","nodeType":"YulLiteral","src":"2103:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2092:3:24","nodeType":"YulIdentifier","src":"2092:3:24"},"nativeSrc":"2092:16:24","nodeType":"YulFunctionCall","src":"2092:16:24"},"variables":[{"name":"dst","nativeSrc":"2085:3:24","nodeType":"YulTypedName","src":"2085:3:24","type":""}]},{"body":{"nativeSrc":"2146:83:24","nodeType":"YulBlock","src":"2146:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2148:77:24","nodeType":"YulIdentifier","src":"2148:77:24"},"nativeSrc":"2148:79:24","nodeType":"YulFunctionCall","src":"2148:79:24"},"nativeSrc":"2148:79:24","nodeType":"YulExpressionStatement","src":"2148:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2127:3:24","nodeType":"YulIdentifier","src":"2127:3:24"},{"name":"length","nativeSrc":"2132:6:24","nodeType":"YulIdentifier","src":"2132:6:24"}],"functionName":{"name":"add","nativeSrc":"2123:3:24","nodeType":"YulIdentifier","src":"2123:3:24"},"nativeSrc":"2123:16:24","nodeType":"YulFunctionCall","src":"2123:16:24"},{"name":"end","nativeSrc":"2141:3:24","nodeType":"YulIdentifier","src":"2141:3:24"}],"functionName":{"name":"gt","nativeSrc":"2120:2:24","nodeType":"YulIdentifier","src":"2120:2:24"},"nativeSrc":"2120:25:24","nodeType":"YulFunctionCall","src":"2120:25:24"},"nativeSrc":"2117:112:24","nodeType":"YulIf","src":"2117:112:24"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2273:3:24","nodeType":"YulIdentifier","src":"2273:3:24"},{"name":"dst","nativeSrc":"2278:3:24","nodeType":"YulIdentifier","src":"2278:3:24"},{"name":"length","nativeSrc":"2283:6:24","nodeType":"YulIdentifier","src":"2283:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2238:34:24","nodeType":"YulIdentifier","src":"2238:34:24"},"nativeSrc":"2238:52:24","nodeType":"YulFunctionCall","src":"2238:52:24"},"nativeSrc":"2238:52:24","nodeType":"YulExpressionStatement","src":"2238:52:24"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"1862:434:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1930:3:24","nodeType":"YulTypedName","src":"1930:3:24","type":""},{"name":"length","nativeSrc":"1935:6:24","nodeType":"YulTypedName","src":"1935:6:24","type":""},{"name":"end","nativeSrc":"1943:3:24","nodeType":"YulTypedName","src":"1943:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1951:5:24","nodeType":"YulTypedName","src":"1951:5:24","type":""}],"src":"1862:434:24"},{"body":{"nativeSrc":"2389:282:24","nodeType":"YulBlock","src":"2389:282:24","statements":[{"body":{"nativeSrc":"2438:83:24","nodeType":"YulBlock","src":"2438:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2440:77:24","nodeType":"YulIdentifier","src":"2440:77:24"},"nativeSrc":"2440:79:24","nodeType":"YulFunctionCall","src":"2440:79:24"},"nativeSrc":"2440:79:24","nodeType":"YulExpressionStatement","src":"2440:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2417:6:24","nodeType":"YulIdentifier","src":"2417:6:24"},{"kind":"number","nativeSrc":"2425:4:24","nodeType":"YulLiteral","src":"2425:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2413:3:24","nodeType":"YulIdentifier","src":"2413:3:24"},"nativeSrc":"2413:17:24","nodeType":"YulFunctionCall","src":"2413:17:24"},{"name":"end","nativeSrc":"2432:3:24","nodeType":"YulIdentifier","src":"2432:3:24"}],"functionName":{"name":"slt","nativeSrc":"2409:3:24","nodeType":"YulIdentifier","src":"2409:3:24"},"nativeSrc":"2409:27:24","nodeType":"YulFunctionCall","src":"2409:27:24"}],"functionName":{"name":"iszero","nativeSrc":"2402:6:24","nodeType":"YulIdentifier","src":"2402:6:24"},"nativeSrc":"2402:35:24","nodeType":"YulFunctionCall","src":"2402:35:24"},"nativeSrc":"2399:122:24","nodeType":"YulIf","src":"2399:122:24"},{"nativeSrc":"2530:27:24","nodeType":"YulVariableDeclaration","src":"2530:27:24","value":{"arguments":[{"name":"offset","nativeSrc":"2550:6:24","nodeType":"YulIdentifier","src":"2550:6:24"}],"functionName":{"name":"mload","nativeSrc":"2544:5:24","nodeType":"YulIdentifier","src":"2544:5:24"},"nativeSrc":"2544:13:24","nodeType":"YulFunctionCall","src":"2544:13:24"},"variables":[{"name":"length","nativeSrc":"2534:6:24","nodeType":"YulTypedName","src":"2534:6:24","type":""}]},{"nativeSrc":"2566:99:24","nodeType":"YulAssignment","src":"2566:99:24","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2638:6:24","nodeType":"YulIdentifier","src":"2638:6:24"},{"kind":"number","nativeSrc":"2646:4:24","nodeType":"YulLiteral","src":"2646:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2634:3:24","nodeType":"YulIdentifier","src":"2634:3:24"},"nativeSrc":"2634:17:24","nodeType":"YulFunctionCall","src":"2634:17:24"},{"name":"length","nativeSrc":"2653:6:24","nodeType":"YulIdentifier","src":"2653:6:24"},{"name":"end","nativeSrc":"2661:3:24","nodeType":"YulIdentifier","src":"2661:3:24"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2575:58:24","nodeType":"YulIdentifier","src":"2575:58:24"},"nativeSrc":"2575:90:24","nodeType":"YulFunctionCall","src":"2575:90:24"},"variableNames":[{"name":"array","nativeSrc":"2566:5:24","nodeType":"YulIdentifier","src":"2566:5:24"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2316:355:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2367:6:24","nodeType":"YulTypedName","src":"2367:6:24","type":""},{"name":"end","nativeSrc":"2375:3:24","nodeType":"YulTypedName","src":"2375:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2383:5:24","nodeType":"YulTypedName","src":"2383:5:24","type":""}],"src":"2316:355:24"},{"body":{"nativeSrc":"2720:43:24","nodeType":"YulBlock","src":"2720:43:24","statements":[{"nativeSrc":"2730:27:24","nodeType":"YulAssignment","src":"2730:27:24","value":{"arguments":[{"name":"value","nativeSrc":"2745:5:24","nodeType":"YulIdentifier","src":"2745:5:24"},{"kind":"number","nativeSrc":"2752:4:24","nodeType":"YulLiteral","src":"2752:4:24","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2741:3:24","nodeType":"YulIdentifier","src":"2741:3:24"},"nativeSrc":"2741:16:24","nodeType":"YulFunctionCall","src":"2741:16:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2730:7:24","nodeType":"YulIdentifier","src":"2730:7:24"}]}]},"name":"cleanup_t_uint8","nativeSrc":"2677:86:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2702:5:24","nodeType":"YulTypedName","src":"2702:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2712:7:24","nodeType":"YulTypedName","src":"2712:7:24","type":""}],"src":"2677:86:24"},{"body":{"nativeSrc":"2810:77:24","nodeType":"YulBlock","src":"2810:77:24","statements":[{"body":{"nativeSrc":"2865:16:24","nodeType":"YulBlock","src":"2865:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2874:1:24","nodeType":"YulLiteral","src":"2874:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2877:1:24","nodeType":"YulLiteral","src":"2877:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2867:6:24","nodeType":"YulIdentifier","src":"2867:6:24"},"nativeSrc":"2867:12:24","nodeType":"YulFunctionCall","src":"2867:12:24"},"nativeSrc":"2867:12:24","nodeType":"YulExpressionStatement","src":"2867:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2833:5:24","nodeType":"YulIdentifier","src":"2833:5:24"},{"arguments":[{"name":"value","nativeSrc":"2856:5:24","nodeType":"YulIdentifier","src":"2856:5:24"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"2840:15:24","nodeType":"YulIdentifier","src":"2840:15:24"},"nativeSrc":"2840:22:24","nodeType":"YulFunctionCall","src":"2840:22:24"}],"functionName":{"name":"eq","nativeSrc":"2830:2:24","nodeType":"YulIdentifier","src":"2830:2:24"},"nativeSrc":"2830:33:24","nodeType":"YulFunctionCall","src":"2830:33:24"}],"functionName":{"name":"iszero","nativeSrc":"2823:6:24","nodeType":"YulIdentifier","src":"2823:6:24"},"nativeSrc":"2823:41:24","nodeType":"YulFunctionCall","src":"2823:41:24"},"nativeSrc":"2820:61:24","nodeType":"YulIf","src":"2820:61:24"}]},"name":"validator_revert_t_uint8","nativeSrc":"2769:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2803:5:24","nodeType":"YulTypedName","src":"2803:5:24","type":""}],"src":"2769:118:24"},{"body":{"nativeSrc":"2954:78:24","nodeType":"YulBlock","src":"2954:78:24","statements":[{"nativeSrc":"2964:22:24","nodeType":"YulAssignment","src":"2964:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"2979:6:24","nodeType":"YulIdentifier","src":"2979:6:24"}],"functionName":{"name":"mload","nativeSrc":"2973:5:24","nodeType":"YulIdentifier","src":"2973:5:24"},"nativeSrc":"2973:13:24","nodeType":"YulFunctionCall","src":"2973:13:24"},"variableNames":[{"name":"value","nativeSrc":"2964:5:24","nodeType":"YulIdentifier","src":"2964:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3020:5:24","nodeType":"YulIdentifier","src":"3020:5:24"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"2995:24:24","nodeType":"YulIdentifier","src":"2995:24:24"},"nativeSrc":"2995:31:24","nodeType":"YulFunctionCall","src":"2995:31:24"},"nativeSrc":"2995:31:24","nodeType":"YulExpressionStatement","src":"2995:31:24"}]},"name":"abi_decode_t_uint8_fromMemory","nativeSrc":"2893:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2932:6:24","nodeType":"YulTypedName","src":"2932:6:24","type":""},{"name":"end","nativeSrc":"2940:3:24","nodeType":"YulTypedName","src":"2940:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2948:5:24","nodeType":"YulTypedName","src":"2948:5:24","type":""}],"src":"2893:139:24"},{"body":{"nativeSrc":"3167:876:24","nodeType":"YulBlock","src":"3167:876:24","statements":[{"body":{"nativeSrc":"3213:83:24","nodeType":"YulBlock","src":"3213:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3215:77:24","nodeType":"YulIdentifier","src":"3215:77:24"},"nativeSrc":"3215:79:24","nodeType":"YulFunctionCall","src":"3215:79:24"},"nativeSrc":"3215:79:24","nodeType":"YulExpressionStatement","src":"3215:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3188:7:24","nodeType":"YulIdentifier","src":"3188:7:24"},{"name":"headStart","nativeSrc":"3197:9:24","nodeType":"YulIdentifier","src":"3197:9:24"}],"functionName":{"name":"sub","nativeSrc":"3184:3:24","nodeType":"YulIdentifier","src":"3184:3:24"},"nativeSrc":"3184:23:24","nodeType":"YulFunctionCall","src":"3184:23:24"},{"kind":"number","nativeSrc":"3209:2:24","nodeType":"YulLiteral","src":"3209:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3180:3:24","nodeType":"YulIdentifier","src":"3180:3:24"},"nativeSrc":"3180:32:24","nodeType":"YulFunctionCall","src":"3180:32:24"},"nativeSrc":"3177:119:24","nodeType":"YulIf","src":"3177:119:24"},{"nativeSrc":"3306:291:24","nodeType":"YulBlock","src":"3306:291:24","statements":[{"nativeSrc":"3321:38:24","nodeType":"YulVariableDeclaration","src":"3321:38:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3345:9:24","nodeType":"YulIdentifier","src":"3345:9:24"},{"kind":"number","nativeSrc":"3356:1:24","nodeType":"YulLiteral","src":"3356:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3341:3:24","nodeType":"YulIdentifier","src":"3341:3:24"},"nativeSrc":"3341:17:24","nodeType":"YulFunctionCall","src":"3341:17:24"}],"functionName":{"name":"mload","nativeSrc":"3335:5:24","nodeType":"YulIdentifier","src":"3335:5:24"},"nativeSrc":"3335:24:24","nodeType":"YulFunctionCall","src":"3335:24:24"},"variables":[{"name":"offset","nativeSrc":"3325:6:24","nodeType":"YulTypedName","src":"3325:6:24","type":""}]},{"body":{"nativeSrc":"3406:83:24","nodeType":"YulBlock","src":"3406:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3408:77:24","nodeType":"YulIdentifier","src":"3408:77:24"},"nativeSrc":"3408:79:24","nodeType":"YulFunctionCall","src":"3408:79:24"},"nativeSrc":"3408:79:24","nodeType":"YulExpressionStatement","src":"3408:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3378:6:24","nodeType":"YulIdentifier","src":"3378:6:24"},{"kind":"number","nativeSrc":"3386:18:24","nodeType":"YulLiteral","src":"3386:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3375:2:24","nodeType":"YulIdentifier","src":"3375:2:24"},"nativeSrc":"3375:30:24","nodeType":"YulFunctionCall","src":"3375:30:24"},"nativeSrc":"3372:117:24","nodeType":"YulIf","src":"3372:117:24"},{"nativeSrc":"3503:84:24","nodeType":"YulAssignment","src":"3503:84:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3559:9:24","nodeType":"YulIdentifier","src":"3559:9:24"},{"name":"offset","nativeSrc":"3570:6:24","nodeType":"YulIdentifier","src":"3570:6:24"}],"functionName":{"name":"add","nativeSrc":"3555:3:24","nodeType":"YulIdentifier","src":"3555:3:24"},"nativeSrc":"3555:22:24","nodeType":"YulFunctionCall","src":"3555:22:24"},{"name":"dataEnd","nativeSrc":"3579:7:24","nodeType":"YulIdentifier","src":"3579:7:24"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3513:41:24","nodeType":"YulIdentifier","src":"3513:41:24"},"nativeSrc":"3513:74:24","nodeType":"YulFunctionCall","src":"3513:74:24"},"variableNames":[{"name":"value0","nativeSrc":"3503:6:24","nodeType":"YulIdentifier","src":"3503:6:24"}]}]},{"nativeSrc":"3607:292:24","nodeType":"YulBlock","src":"3607:292:24","statements":[{"nativeSrc":"3622:39:24","nodeType":"YulVariableDeclaration","src":"3622:39:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3646:9:24","nodeType":"YulIdentifier","src":"3646:9:24"},{"kind":"number","nativeSrc":"3657:2:24","nodeType":"YulLiteral","src":"3657:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3642:3:24","nodeType":"YulIdentifier","src":"3642:3:24"},"nativeSrc":"3642:18:24","nodeType":"YulFunctionCall","src":"3642:18:24"}],"functionName":{"name":"mload","nativeSrc":"3636:5:24","nodeType":"YulIdentifier","src":"3636:5:24"},"nativeSrc":"3636:25:24","nodeType":"YulFunctionCall","src":"3636:25:24"},"variables":[{"name":"offset","nativeSrc":"3626:6:24","nodeType":"YulTypedName","src":"3626:6:24","type":""}]},{"body":{"nativeSrc":"3708:83:24","nodeType":"YulBlock","src":"3708:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3710:77:24","nodeType":"YulIdentifier","src":"3710:77:24"},"nativeSrc":"3710:79:24","nodeType":"YulFunctionCall","src":"3710:79:24"},"nativeSrc":"3710:79:24","nodeType":"YulExpressionStatement","src":"3710:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3680:6:24","nodeType":"YulIdentifier","src":"3680:6:24"},{"kind":"number","nativeSrc":"3688:18:24","nodeType":"YulLiteral","src":"3688:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3677:2:24","nodeType":"YulIdentifier","src":"3677:2:24"},"nativeSrc":"3677:30:24","nodeType":"YulFunctionCall","src":"3677:30:24"},"nativeSrc":"3674:117:24","nodeType":"YulIf","src":"3674:117:24"},{"nativeSrc":"3805:84:24","nodeType":"YulAssignment","src":"3805:84:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3861:9:24","nodeType":"YulIdentifier","src":"3861:9:24"},{"name":"offset","nativeSrc":"3872:6:24","nodeType":"YulIdentifier","src":"3872:6:24"}],"functionName":{"name":"add","nativeSrc":"3857:3:24","nodeType":"YulIdentifier","src":"3857:3:24"},"nativeSrc":"3857:22:24","nodeType":"YulFunctionCall","src":"3857:22:24"},{"name":"dataEnd","nativeSrc":"3881:7:24","nodeType":"YulIdentifier","src":"3881:7:24"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3815:41:24","nodeType":"YulIdentifier","src":"3815:41:24"},"nativeSrc":"3815:74:24","nodeType":"YulFunctionCall","src":"3815:74:24"},"variableNames":[{"name":"value1","nativeSrc":"3805:6:24","nodeType":"YulIdentifier","src":"3805:6:24"}]}]},{"nativeSrc":"3909:127:24","nodeType":"YulBlock","src":"3909:127:24","statements":[{"nativeSrc":"3924:16:24","nodeType":"YulVariableDeclaration","src":"3924:16:24","value":{"kind":"number","nativeSrc":"3938:2:24","nodeType":"YulLiteral","src":"3938:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3928:6:24","nodeType":"YulTypedName","src":"3928:6:24","type":""}]},{"nativeSrc":"3954:72:24","nodeType":"YulAssignment","src":"3954:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3998:9:24","nodeType":"YulIdentifier","src":"3998:9:24"},{"name":"offset","nativeSrc":"4009:6:24","nodeType":"YulIdentifier","src":"4009:6:24"}],"functionName":{"name":"add","nativeSrc":"3994:3:24","nodeType":"YulIdentifier","src":"3994:3:24"},"nativeSrc":"3994:22:24","nodeType":"YulFunctionCall","src":"3994:22:24"},{"name":"dataEnd","nativeSrc":"4018:7:24","nodeType":"YulIdentifier","src":"4018:7:24"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nativeSrc":"3964:29:24","nodeType":"YulIdentifier","src":"3964:29:24"},"nativeSrc":"3964:62:24","nodeType":"YulFunctionCall","src":"3964:62:24"},"variableNames":[{"name":"value2","nativeSrc":"3954:6:24","nodeType":"YulIdentifier","src":"3954:6:24"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory","nativeSrc":"3038:1005:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3121:9:24","nodeType":"YulTypedName","src":"3121:9:24","type":""},{"name":"dataEnd","nativeSrc":"3132:7:24","nodeType":"YulTypedName","src":"3132:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3144:6:24","nodeType":"YulTypedName","src":"3144:6:24","type":""},{"name":"value1","nativeSrc":"3152:6:24","nodeType":"YulTypedName","src":"3152:6:24","type":""},{"name":"value2","nativeSrc":"3160:6:24","nodeType":"YulTypedName","src":"3160:6:24","type":""}],"src":"3038:1005:24"},{"body":{"nativeSrc":"4108:40:24","nodeType":"YulBlock","src":"4108:40:24","statements":[{"nativeSrc":"4119:22:24","nodeType":"YulAssignment","src":"4119:22:24","value":{"arguments":[{"name":"value","nativeSrc":"4135:5:24","nodeType":"YulIdentifier","src":"4135:5:24"}],"functionName":{"name":"mload","nativeSrc":"4129:5:24","nodeType":"YulIdentifier","src":"4129:5:24"},"nativeSrc":"4129:12:24","nodeType":"YulFunctionCall","src":"4129:12:24"},"variableNames":[{"name":"length","nativeSrc":"4119:6:24","nodeType":"YulIdentifier","src":"4119:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4049:99:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4091:5:24","nodeType":"YulTypedName","src":"4091:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4101:6:24","nodeType":"YulTypedName","src":"4101:6:24","type":""}],"src":"4049:99:24"},{"body":{"nativeSrc":"4182:152:24","nodeType":"YulBlock","src":"4182:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4199:1:24","nodeType":"YulLiteral","src":"4199:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"4202:77:24","nodeType":"YulLiteral","src":"4202:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4192:6:24","nodeType":"YulIdentifier","src":"4192:6:24"},"nativeSrc":"4192:88:24","nodeType":"YulFunctionCall","src":"4192:88:24"},"nativeSrc":"4192:88:24","nodeType":"YulExpressionStatement","src":"4192:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4296:1:24","nodeType":"YulLiteral","src":"4296:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"4299:4:24","nodeType":"YulLiteral","src":"4299:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4289:6:24","nodeType":"YulIdentifier","src":"4289:6:24"},"nativeSrc":"4289:15:24","nodeType":"YulFunctionCall","src":"4289:15:24"},"nativeSrc":"4289:15:24","nodeType":"YulExpressionStatement","src":"4289:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4320:1:24","nodeType":"YulLiteral","src":"4320:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"4323:4:24","nodeType":"YulLiteral","src":"4323:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4313:6:24","nodeType":"YulIdentifier","src":"4313:6:24"},"nativeSrc":"4313:15:24","nodeType":"YulFunctionCall","src":"4313:15:24"},"nativeSrc":"4313:15:24","nodeType":"YulExpressionStatement","src":"4313:15:24"}]},"name":"panic_error_0x22","nativeSrc":"4154:180:24","nodeType":"YulFunctionDefinition","src":"4154:180:24"},{"body":{"nativeSrc":"4391:269:24","nodeType":"YulBlock","src":"4391:269:24","statements":[{"nativeSrc":"4401:22:24","nodeType":"YulAssignment","src":"4401:22:24","value":{"arguments":[{"name":"data","nativeSrc":"4415:4:24","nodeType":"YulIdentifier","src":"4415:4:24"},{"kind":"number","nativeSrc":"4421:1:24","nodeType":"YulLiteral","src":"4421:1:24","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4411:3:24","nodeType":"YulIdentifier","src":"4411:3:24"},"nativeSrc":"4411:12:24","nodeType":"YulFunctionCall","src":"4411:12:24"},"variableNames":[{"name":"length","nativeSrc":"4401:6:24","nodeType":"YulIdentifier","src":"4401:6:24"}]},{"nativeSrc":"4432:38:24","nodeType":"YulVariableDeclaration","src":"4432:38:24","value":{"arguments":[{"name":"data","nativeSrc":"4462:4:24","nodeType":"YulIdentifier","src":"4462:4:24"},{"kind":"number","nativeSrc":"4468:1:24","nodeType":"YulLiteral","src":"4468:1:24","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4458:3:24","nodeType":"YulIdentifier","src":"4458:3:24"},"nativeSrc":"4458:12:24","nodeType":"YulFunctionCall","src":"4458:12:24"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4436:18:24","nodeType":"YulTypedName","src":"4436:18:24","type":""}]},{"body":{"nativeSrc":"4509:51:24","nodeType":"YulBlock","src":"4509:51:24","statements":[{"nativeSrc":"4523:27:24","nodeType":"YulAssignment","src":"4523:27:24","value":{"arguments":[{"name":"length","nativeSrc":"4537:6:24","nodeType":"YulIdentifier","src":"4537:6:24"},{"kind":"number","nativeSrc":"4545:4:24","nodeType":"YulLiteral","src":"4545:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4533:3:24","nodeType":"YulIdentifier","src":"4533:3:24"},"nativeSrc":"4533:17:24","nodeType":"YulFunctionCall","src":"4533:17:24"},"variableNames":[{"name":"length","nativeSrc":"4523:6:24","nodeType":"YulIdentifier","src":"4523:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4489:18:24","nodeType":"YulIdentifier","src":"4489:18:24"}],"functionName":{"name":"iszero","nativeSrc":"4482:6:24","nodeType":"YulIdentifier","src":"4482:6:24"},"nativeSrc":"4482:26:24","nodeType":"YulFunctionCall","src":"4482:26:24"},"nativeSrc":"4479:81:24","nodeType":"YulIf","src":"4479:81:24"},{"body":{"nativeSrc":"4612:42:24","nodeType":"YulBlock","src":"4612:42:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4626:16:24","nodeType":"YulIdentifier","src":"4626:16:24"},"nativeSrc":"4626:18:24","nodeType":"YulFunctionCall","src":"4626:18:24"},"nativeSrc":"4626:18:24","nodeType":"YulExpressionStatement","src":"4626:18:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4576:18:24","nodeType":"YulIdentifier","src":"4576:18:24"},{"arguments":[{"name":"length","nativeSrc":"4599:6:24","nodeType":"YulIdentifier","src":"4599:6:24"},{"kind":"number","nativeSrc":"4607:2:24","nodeType":"YulLiteral","src":"4607:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4596:2:24","nodeType":"YulIdentifier","src":"4596:2:24"},"nativeSrc":"4596:14:24","nodeType":"YulFunctionCall","src":"4596:14:24"}],"functionName":{"name":"eq","nativeSrc":"4573:2:24","nodeType":"YulIdentifier","src":"4573:2:24"},"nativeSrc":"4573:38:24","nodeType":"YulFunctionCall","src":"4573:38:24"},"nativeSrc":"4570:84:24","nodeType":"YulIf","src":"4570:84:24"}]},"name":"extract_byte_array_length","nativeSrc":"4340:320:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4375:4:24","nodeType":"YulTypedName","src":"4375:4:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4384:6:24","nodeType":"YulTypedName","src":"4384:6:24","type":""}],"src":"4340:320:24"},{"body":{"nativeSrc":"4720:87:24","nodeType":"YulBlock","src":"4720:87:24","statements":[{"nativeSrc":"4730:11:24","nodeType":"YulAssignment","src":"4730:11:24","value":{"name":"ptr","nativeSrc":"4738:3:24","nodeType":"YulIdentifier","src":"4738:3:24"},"variableNames":[{"name":"data","nativeSrc":"4730:4:24","nodeType":"YulIdentifier","src":"4730:4:24"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4758:1:24","nodeType":"YulLiteral","src":"4758:1:24","type":"","value":"0"},{"name":"ptr","nativeSrc":"4761:3:24","nodeType":"YulIdentifier","src":"4761:3:24"}],"functionName":{"name":"mstore","nativeSrc":"4751:6:24","nodeType":"YulIdentifier","src":"4751:6:24"},"nativeSrc":"4751:14:24","nodeType":"YulFunctionCall","src":"4751:14:24"},"nativeSrc":"4751:14:24","nodeType":"YulExpressionStatement","src":"4751:14:24"},{"nativeSrc":"4774:26:24","nodeType":"YulAssignment","src":"4774:26:24","value":{"arguments":[{"kind":"number","nativeSrc":"4792:1:24","nodeType":"YulLiteral","src":"4792:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"4795:4:24","nodeType":"YulLiteral","src":"4795:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4782:9:24","nodeType":"YulIdentifier","src":"4782:9:24"},"nativeSrc":"4782:18:24","nodeType":"YulFunctionCall","src":"4782:18:24"},"variableNames":[{"name":"data","nativeSrc":"4774:4:24","nodeType":"YulIdentifier","src":"4774:4:24"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4666:141:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4707:3:24","nodeType":"YulTypedName","src":"4707:3:24","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4715:4:24","nodeType":"YulTypedName","src":"4715:4:24","type":""}],"src":"4666:141:24"},{"body":{"nativeSrc":"4857:49:24","nodeType":"YulBlock","src":"4857:49:24","statements":[{"nativeSrc":"4867:33:24","nodeType":"YulAssignment","src":"4867:33:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4885:5:24","nodeType":"YulIdentifier","src":"4885:5:24"},{"kind":"number","nativeSrc":"4892:2:24","nodeType":"YulLiteral","src":"4892:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4881:3:24","nodeType":"YulIdentifier","src":"4881:3:24"},"nativeSrc":"4881:14:24","nodeType":"YulFunctionCall","src":"4881:14:24"},{"kind":"number","nativeSrc":"4897:2:24","nodeType":"YulLiteral","src":"4897:2:24","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4877:3:24","nodeType":"YulIdentifier","src":"4877:3:24"},"nativeSrc":"4877:23:24","nodeType":"YulFunctionCall","src":"4877:23:24"},"variableNames":[{"name":"result","nativeSrc":"4867:6:24","nodeType":"YulIdentifier","src":"4867:6:24"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4813:93:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4840:5:24","nodeType":"YulTypedName","src":"4840:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4850:6:24","nodeType":"YulTypedName","src":"4850:6:24","type":""}],"src":"4813:93:24"},{"body":{"nativeSrc":"4965:54:24","nodeType":"YulBlock","src":"4965:54:24","statements":[{"nativeSrc":"4975:37:24","nodeType":"YulAssignment","src":"4975:37:24","value":{"arguments":[{"name":"bits","nativeSrc":"5000:4:24","nodeType":"YulIdentifier","src":"5000:4:24"},{"name":"value","nativeSrc":"5006:5:24","nodeType":"YulIdentifier","src":"5006:5:24"}],"functionName":{"name":"shl","nativeSrc":"4996:3:24","nodeType":"YulIdentifier","src":"4996:3:24"},"nativeSrc":"4996:16:24","nodeType":"YulFunctionCall","src":"4996:16:24"},"variableNames":[{"name":"newValue","nativeSrc":"4975:8:24","nodeType":"YulIdentifier","src":"4975:8:24"}]}]},"name":"shift_left_dynamic","nativeSrc":"4912:107:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4940:4:24","nodeType":"YulTypedName","src":"4940:4:24","type":""},{"name":"value","nativeSrc":"4946:5:24","nodeType":"YulTypedName","src":"4946:5:24","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4956:8:24","nodeType":"YulTypedName","src":"4956:8:24","type":""}],"src":"4912:107:24"},{"body":{"nativeSrc":"5101:317:24","nodeType":"YulBlock","src":"5101:317:24","statements":[{"nativeSrc":"5111:35:24","nodeType":"YulVariableDeclaration","src":"5111:35:24","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"5132:10:24","nodeType":"YulIdentifier","src":"5132:10:24"},{"kind":"number","nativeSrc":"5144:1:24","nodeType":"YulLiteral","src":"5144:1:24","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"5128:3:24","nodeType":"YulIdentifier","src":"5128:3:24"},"nativeSrc":"5128:18:24","nodeType":"YulFunctionCall","src":"5128:18:24"},"variables":[{"name":"shiftBits","nativeSrc":"5115:9:24","nodeType":"YulTypedName","src":"5115:9:24","type":""}]},{"nativeSrc":"5155:109:24","nodeType":"YulVariableDeclaration","src":"5155:109:24","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5186:9:24","nodeType":"YulIdentifier","src":"5186:9:24"},{"kind":"number","nativeSrc":"5197:66:24","nodeType":"YulLiteral","src":"5197:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5167:18:24","nodeType":"YulIdentifier","src":"5167:18:24"},"nativeSrc":"5167:97:24","nodeType":"YulFunctionCall","src":"5167:97:24"},"variables":[{"name":"mask","nativeSrc":"5159:4:24","nodeType":"YulTypedName","src":"5159:4:24","type":""}]},{"nativeSrc":"5273:51:24","nodeType":"YulAssignment","src":"5273:51:24","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5304:9:24","nodeType":"YulIdentifier","src":"5304:9:24"},{"name":"toInsert","nativeSrc":"5315:8:24","nodeType":"YulIdentifier","src":"5315:8:24"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5285:18:24","nodeType":"YulIdentifier","src":"5285:18:24"},"nativeSrc":"5285:39:24","nodeType":"YulFunctionCall","src":"5285:39:24"},"variableNames":[{"name":"toInsert","nativeSrc":"5273:8:24","nodeType":"YulIdentifier","src":"5273:8:24"}]},{"nativeSrc":"5333:30:24","nodeType":"YulAssignment","src":"5333:30:24","value":{"arguments":[{"name":"value","nativeSrc":"5346:5:24","nodeType":"YulIdentifier","src":"5346:5:24"},{"arguments":[{"name":"mask","nativeSrc":"5357:4:24","nodeType":"YulIdentifier","src":"5357:4:24"}],"functionName":{"name":"not","nativeSrc":"5353:3:24","nodeType":"YulIdentifier","src":"5353:3:24"},"nativeSrc":"5353:9:24","nodeType":"YulFunctionCall","src":"5353:9:24"}],"functionName":{"name":"and","nativeSrc":"5342:3:24","nodeType":"YulIdentifier","src":"5342:3:24"},"nativeSrc":"5342:21:24","nodeType":"YulFunctionCall","src":"5342:21:24"},"variableNames":[{"name":"value","nativeSrc":"5333:5:24","nodeType":"YulIdentifier","src":"5333:5:24"}]},{"nativeSrc":"5372:40:24","nodeType":"YulAssignment","src":"5372:40:24","value":{"arguments":[{"name":"value","nativeSrc":"5385:5:24","nodeType":"YulIdentifier","src":"5385:5:24"},{"arguments":[{"name":"toInsert","nativeSrc":"5396:8:24","nodeType":"YulIdentifier","src":"5396:8:24"},{"name":"mask","nativeSrc":"5406:4:24","nodeType":"YulIdentifier","src":"5406:4:24"}],"functionName":{"name":"and","nativeSrc":"5392:3:24","nodeType":"YulIdentifier","src":"5392:3:24"},"nativeSrc":"5392:19:24","nodeType":"YulFunctionCall","src":"5392:19:24"}],"functionName":{"name":"or","nativeSrc":"5382:2:24","nodeType":"YulIdentifier","src":"5382:2:24"},"nativeSrc":"5382:30:24","nodeType":"YulFunctionCall","src":"5382:30:24"},"variableNames":[{"name":"result","nativeSrc":"5372:6:24","nodeType":"YulIdentifier","src":"5372:6:24"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"5025:393:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5062:5:24","nodeType":"YulTypedName","src":"5062:5:24","type":""},{"name":"shiftBytes","nativeSrc":"5069:10:24","nodeType":"YulTypedName","src":"5069:10:24","type":""},{"name":"toInsert","nativeSrc":"5081:8:24","nodeType":"YulTypedName","src":"5081:8:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5094:6:24","nodeType":"YulTypedName","src":"5094:6:24","type":""}],"src":"5025:393:24"},{"body":{"nativeSrc":"5469:32:24","nodeType":"YulBlock","src":"5469:32:24","statements":[{"nativeSrc":"5479:16:24","nodeType":"YulAssignment","src":"5479:16:24","value":{"name":"value","nativeSrc":"5490:5:24","nodeType":"YulIdentifier","src":"5490:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"5479:7:24","nodeType":"YulIdentifier","src":"5479:7:24"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5424:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5451:5:24","nodeType":"YulTypedName","src":"5451:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5461:7:24","nodeType":"YulTypedName","src":"5461:7:24","type":""}],"src":"5424:77:24"},{"body":{"nativeSrc":"5539:28:24","nodeType":"YulBlock","src":"5539:28:24","statements":[{"nativeSrc":"5549:12:24","nodeType":"YulAssignment","src":"5549:12:24","value":{"name":"value","nativeSrc":"5556:5:24","nodeType":"YulIdentifier","src":"5556:5:24"},"variableNames":[{"name":"ret","nativeSrc":"5549:3:24","nodeType":"YulIdentifier","src":"5549:3:24"}]}]},"name":"identity","nativeSrc":"5507:60:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5525:5:24","nodeType":"YulTypedName","src":"5525:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5535:3:24","nodeType":"YulTypedName","src":"5535:3:24","type":""}],"src":"5507:60:24"},{"body":{"nativeSrc":"5633:82:24","nodeType":"YulBlock","src":"5633:82:24","statements":[{"nativeSrc":"5643:66:24","nodeType":"YulAssignment","src":"5643:66:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5701:5:24","nodeType":"YulIdentifier","src":"5701:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5683:17:24","nodeType":"YulIdentifier","src":"5683:17:24"},"nativeSrc":"5683:24:24","nodeType":"YulFunctionCall","src":"5683:24:24"}],"functionName":{"name":"identity","nativeSrc":"5674:8:24","nodeType":"YulIdentifier","src":"5674:8:24"},"nativeSrc":"5674:34:24","nodeType":"YulFunctionCall","src":"5674:34:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5656:17:24","nodeType":"YulIdentifier","src":"5656:17:24"},"nativeSrc":"5656:53:24","nodeType":"YulFunctionCall","src":"5656:53:24"},"variableNames":[{"name":"converted","nativeSrc":"5643:9:24","nodeType":"YulIdentifier","src":"5643:9:24"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5573:142:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5613:5:24","nodeType":"YulTypedName","src":"5613:5:24","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5623:9:24","nodeType":"YulTypedName","src":"5623:9:24","type":""}],"src":"5573:142:24"},{"body":{"nativeSrc":"5768:28:24","nodeType":"YulBlock","src":"5768:28:24","statements":[{"nativeSrc":"5778:12:24","nodeType":"YulAssignment","src":"5778:12:24","value":{"name":"value","nativeSrc":"5785:5:24","nodeType":"YulIdentifier","src":"5785:5:24"},"variableNames":[{"name":"ret","nativeSrc":"5778:3:24","nodeType":"YulIdentifier","src":"5778:3:24"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5721:75:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5754:5:24","nodeType":"YulTypedName","src":"5754:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5764:3:24","nodeType":"YulTypedName","src":"5764:3:24","type":""}],"src":"5721:75:24"},{"body":{"nativeSrc":"5878:193:24","nodeType":"YulBlock","src":"5878:193:24","statements":[{"nativeSrc":"5888:63:24","nodeType":"YulVariableDeclaration","src":"5888:63:24","value":{"arguments":[{"name":"value_0","nativeSrc":"5943:7:24","nodeType":"YulIdentifier","src":"5943:7:24"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5912:30:24","nodeType":"YulIdentifier","src":"5912:30:24"},"nativeSrc":"5912:39:24","nodeType":"YulFunctionCall","src":"5912:39:24"},"variables":[{"name":"convertedValue_0","nativeSrc":"5892:16:24","nodeType":"YulTypedName","src":"5892:16:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5967:4:24","nodeType":"YulIdentifier","src":"5967:4:24"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"6007:4:24","nodeType":"YulIdentifier","src":"6007:4:24"}],"functionName":{"name":"sload","nativeSrc":"6001:5:24","nodeType":"YulIdentifier","src":"6001:5:24"},"nativeSrc":"6001:11:24","nodeType":"YulFunctionCall","src":"6001:11:24"},{"name":"offset","nativeSrc":"6014:6:24","nodeType":"YulIdentifier","src":"6014:6:24"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"6046:16:24","nodeType":"YulIdentifier","src":"6046:16:24"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"6022:23:24","nodeType":"YulIdentifier","src":"6022:23:24"},"nativeSrc":"6022:41:24","nodeType":"YulFunctionCall","src":"6022:41:24"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5973:27:24","nodeType":"YulIdentifier","src":"5973:27:24"},"nativeSrc":"5973:91:24","nodeType":"YulFunctionCall","src":"5973:91:24"}],"functionName":{"name":"sstore","nativeSrc":"5960:6:24","nodeType":"YulIdentifier","src":"5960:6:24"},"nativeSrc":"5960:105:24","nodeType":"YulFunctionCall","src":"5960:105:24"},"nativeSrc":"5960:105:24","nodeType":"YulExpressionStatement","src":"5960:105:24"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5802:269:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5855:4:24","nodeType":"YulTypedName","src":"5855:4:24","type":""},{"name":"offset","nativeSrc":"5861:6:24","nodeType":"YulTypedName","src":"5861:6:24","type":""},{"name":"value_0","nativeSrc":"5869:7:24","nodeType":"YulTypedName","src":"5869:7:24","type":""}],"src":"5802:269:24"},{"body":{"nativeSrc":"6126:24:24","nodeType":"YulBlock","src":"6126:24:24","statements":[{"nativeSrc":"6136:8:24","nodeType":"YulAssignment","src":"6136:8:24","value":{"kind":"number","nativeSrc":"6143:1:24","nodeType":"YulLiteral","src":"6143:1:24","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"6136:3:24","nodeType":"YulIdentifier","src":"6136:3:24"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"6077:73:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"6122:3:24","nodeType":"YulTypedName","src":"6122:3:24","type":""}],"src":"6077:73:24"},{"body":{"nativeSrc":"6209:136:24","nodeType":"YulBlock","src":"6209:136:24","statements":[{"nativeSrc":"6219:46:24","nodeType":"YulVariableDeclaration","src":"6219:46:24","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"6233:30:24","nodeType":"YulIdentifier","src":"6233:30:24"},"nativeSrc":"6233:32:24","nodeType":"YulFunctionCall","src":"6233:32:24"},"variables":[{"name":"zero_0","nativeSrc":"6223:6:24","nodeType":"YulTypedName","src":"6223:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6318:4:24","nodeType":"YulIdentifier","src":"6318:4:24"},{"name":"offset","nativeSrc":"6324:6:24","nodeType":"YulIdentifier","src":"6324:6:24"},{"name":"zero_0","nativeSrc":"6332:6:24","nodeType":"YulIdentifier","src":"6332:6:24"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6274:43:24","nodeType":"YulIdentifier","src":"6274:43:24"},"nativeSrc":"6274:65:24","nodeType":"YulFunctionCall","src":"6274:65:24"},"nativeSrc":"6274:65:24","nodeType":"YulExpressionStatement","src":"6274:65:24"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"6156:189:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6195:4:24","nodeType":"YulTypedName","src":"6195:4:24","type":""},{"name":"offset","nativeSrc":"6201:6:24","nodeType":"YulTypedName","src":"6201:6:24","type":""}],"src":"6156:189:24"},{"body":{"nativeSrc":"6401:136:24","nodeType":"YulBlock","src":"6401:136:24","statements":[{"body":{"nativeSrc":"6468:63:24","nodeType":"YulBlock","src":"6468:63:24","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6512:5:24","nodeType":"YulIdentifier","src":"6512:5:24"},{"kind":"number","nativeSrc":"6519:1:24","nodeType":"YulLiteral","src":"6519:1:24","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6482:29:24","nodeType":"YulIdentifier","src":"6482:29:24"},"nativeSrc":"6482:39:24","nodeType":"YulFunctionCall","src":"6482:39:24"},"nativeSrc":"6482:39:24","nodeType":"YulExpressionStatement","src":"6482:39:24"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6421:5:24","nodeType":"YulIdentifier","src":"6421:5:24"},{"name":"end","nativeSrc":"6428:3:24","nodeType":"YulIdentifier","src":"6428:3:24"}],"functionName":{"name":"lt","nativeSrc":"6418:2:24","nodeType":"YulIdentifier","src":"6418:2:24"},"nativeSrc":"6418:14:24","nodeType":"YulFunctionCall","src":"6418:14:24"},"nativeSrc":"6411:120:24","nodeType":"YulForLoop","post":{"nativeSrc":"6433:26:24","nodeType":"YulBlock","src":"6433:26:24","statements":[{"nativeSrc":"6435:22:24","nodeType":"YulAssignment","src":"6435:22:24","value":{"arguments":[{"name":"start","nativeSrc":"6448:5:24","nodeType":"YulIdentifier","src":"6448:5:24"},{"kind":"number","nativeSrc":"6455:1:24","nodeType":"YulLiteral","src":"6455:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6444:3:24","nodeType":"YulIdentifier","src":"6444:3:24"},"nativeSrc":"6444:13:24","nodeType":"YulFunctionCall","src":"6444:13:24"},"variableNames":[{"name":"start","nativeSrc":"6435:5:24","nodeType":"YulIdentifier","src":"6435:5:24"}]}]},"pre":{"nativeSrc":"6415:2:24","nodeType":"YulBlock","src":"6415:2:24","statements":[]},"src":"6411:120:24"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"6351:186:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"6389:5:24","nodeType":"YulTypedName","src":"6389:5:24","type":""},{"name":"end","nativeSrc":"6396:3:24","nodeType":"YulTypedName","src":"6396:3:24","type":""}],"src":"6351:186:24"},{"body":{"nativeSrc":"6622:464:24","nodeType":"YulBlock","src":"6622:464:24","statements":[{"body":{"nativeSrc":"6648:431:24","nodeType":"YulBlock","src":"6648:431:24","statements":[{"nativeSrc":"6662:54:24","nodeType":"YulVariableDeclaration","src":"6662:54:24","value":{"arguments":[{"name":"array","nativeSrc":"6710:5:24","nodeType":"YulIdentifier","src":"6710:5:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6678:31:24","nodeType":"YulIdentifier","src":"6678:31:24"},"nativeSrc":"6678:38:24","nodeType":"YulFunctionCall","src":"6678:38:24"},"variables":[{"name":"dataArea","nativeSrc":"6666:8:24","nodeType":"YulTypedName","src":"6666:8:24","type":""}]},{"nativeSrc":"6729:63:24","nodeType":"YulVariableDeclaration","src":"6729:63:24","value":{"arguments":[{"name":"dataArea","nativeSrc":"6752:8:24","nodeType":"YulIdentifier","src":"6752:8:24"},{"arguments":[{"name":"startIndex","nativeSrc":"6780:10:24","nodeType":"YulIdentifier","src":"6780:10:24"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6762:17:24","nodeType":"YulIdentifier","src":"6762:17:24"},"nativeSrc":"6762:29:24","nodeType":"YulFunctionCall","src":"6762:29:24"}],"functionName":{"name":"add","nativeSrc":"6748:3:24","nodeType":"YulIdentifier","src":"6748:3:24"},"nativeSrc":"6748:44:24","nodeType":"YulFunctionCall","src":"6748:44:24"},"variables":[{"name":"deleteStart","nativeSrc":"6733:11:24","nodeType":"YulTypedName","src":"6733:11:24","type":""}]},{"body":{"nativeSrc":"6949:27:24","nodeType":"YulBlock","src":"6949:27:24","statements":[{"nativeSrc":"6951:23:24","nodeType":"YulAssignment","src":"6951:23:24","value":{"name":"dataArea","nativeSrc":"6966:8:24","nodeType":"YulIdentifier","src":"6966:8:24"},"variableNames":[{"name":"deleteStart","nativeSrc":"6951:11:24","nodeType":"YulIdentifier","src":"6951:11:24"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6933:10:24","nodeType":"YulIdentifier","src":"6933:10:24"},{"kind":"number","nativeSrc":"6945:2:24","nodeType":"YulLiteral","src":"6945:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6930:2:24","nodeType":"YulIdentifier","src":"6930:2:24"},"nativeSrc":"6930:18:24","nodeType":"YulFunctionCall","src":"6930:18:24"},"nativeSrc":"6927:49:24","nodeType":"YulIf","src":"6927:49:24"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"7018:11:24","nodeType":"YulIdentifier","src":"7018:11:24"},{"arguments":[{"name":"dataArea","nativeSrc":"7035:8:24","nodeType":"YulIdentifier","src":"7035:8:24"},{"arguments":[{"name":"len","nativeSrc":"7063:3:24","nodeType":"YulIdentifier","src":"7063:3:24"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7045:17:24","nodeType":"YulIdentifier","src":"7045:17:24"},"nativeSrc":"7045:22:24","nodeType":"YulFunctionCall","src":"7045:22:24"}],"functionName":{"name":"add","nativeSrc":"7031:3:24","nodeType":"YulIdentifier","src":"7031:3:24"},"nativeSrc":"7031:37:24","nodeType":"YulFunctionCall","src":"7031:37:24"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6989:28:24","nodeType":"YulIdentifier","src":"6989:28:24"},"nativeSrc":"6989:80:24","nodeType":"YulFunctionCall","src":"6989:80:24"},"nativeSrc":"6989:80:24","nodeType":"YulExpressionStatement","src":"6989:80:24"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6639:3:24","nodeType":"YulIdentifier","src":"6639:3:24"},{"kind":"number","nativeSrc":"6644:2:24","nodeType":"YulLiteral","src":"6644:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6636:2:24","nodeType":"YulIdentifier","src":"6636:2:24"},"nativeSrc":"6636:11:24","nodeType":"YulFunctionCall","src":"6636:11:24"},"nativeSrc":"6633:446:24","nodeType":"YulIf","src":"6633:446:24"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6543:543:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6598:5:24","nodeType":"YulTypedName","src":"6598:5:24","type":""},{"name":"len","nativeSrc":"6605:3:24","nodeType":"YulTypedName","src":"6605:3:24","type":""},{"name":"startIndex","nativeSrc":"6610:10:24","nodeType":"YulTypedName","src":"6610:10:24","type":""}],"src":"6543:543:24"},{"body":{"nativeSrc":"7155:54:24","nodeType":"YulBlock","src":"7155:54:24","statements":[{"nativeSrc":"7165:37:24","nodeType":"YulAssignment","src":"7165:37:24","value":{"arguments":[{"name":"bits","nativeSrc":"7190:4:24","nodeType":"YulIdentifier","src":"7190:4:24"},{"name":"value","nativeSrc":"7196:5:24","nodeType":"YulIdentifier","src":"7196:5:24"}],"functionName":{"name":"shr","nativeSrc":"7186:3:24","nodeType":"YulIdentifier","src":"7186:3:24"},"nativeSrc":"7186:16:24","nodeType":"YulFunctionCall","src":"7186:16:24"},"variableNames":[{"name":"newValue","nativeSrc":"7165:8:24","nodeType":"YulIdentifier","src":"7165:8:24"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"7092:117:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7130:4:24","nodeType":"YulTypedName","src":"7130:4:24","type":""},{"name":"value","nativeSrc":"7136:5:24","nodeType":"YulTypedName","src":"7136:5:24","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7146:8:24","nodeType":"YulTypedName","src":"7146:8:24","type":""}],"src":"7092:117:24"},{"body":{"nativeSrc":"7266:118:24","nodeType":"YulBlock","src":"7266:118:24","statements":[{"nativeSrc":"7276:68:24","nodeType":"YulVariableDeclaration","src":"7276:68:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7325:1:24","nodeType":"YulLiteral","src":"7325:1:24","type":"","value":"8"},{"name":"bytes","nativeSrc":"7328:5:24","nodeType":"YulIdentifier","src":"7328:5:24"}],"functionName":{"name":"mul","nativeSrc":"7321:3:24","nodeType":"YulIdentifier","src":"7321:3:24"},"nativeSrc":"7321:13:24","nodeType":"YulFunctionCall","src":"7321:13:24"},{"arguments":[{"kind":"number","nativeSrc":"7340:1:24","nodeType":"YulLiteral","src":"7340:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7336:3:24","nodeType":"YulIdentifier","src":"7336:3:24"},"nativeSrc":"7336:6:24","nodeType":"YulFunctionCall","src":"7336:6:24"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"7292:28:24","nodeType":"YulIdentifier","src":"7292:28:24"},"nativeSrc":"7292:51:24","nodeType":"YulFunctionCall","src":"7292:51:24"}],"functionName":{"name":"not","nativeSrc":"7288:3:24","nodeType":"YulIdentifier","src":"7288:3:24"},"nativeSrc":"7288:56:24","nodeType":"YulFunctionCall","src":"7288:56:24"},"variables":[{"name":"mask","nativeSrc":"7280:4:24","nodeType":"YulTypedName","src":"7280:4:24","type":""}]},{"nativeSrc":"7353:25:24","nodeType":"YulAssignment","src":"7353:25:24","value":{"arguments":[{"name":"data","nativeSrc":"7367:4:24","nodeType":"YulIdentifier","src":"7367:4:24"},{"name":"mask","nativeSrc":"7373:4:24","nodeType":"YulIdentifier","src":"7373:4:24"}],"functionName":{"name":"and","nativeSrc":"7363:3:24","nodeType":"YulIdentifier","src":"7363:3:24"},"nativeSrc":"7363:15:24","nodeType":"YulFunctionCall","src":"7363:15:24"},"variableNames":[{"name":"result","nativeSrc":"7353:6:24","nodeType":"YulIdentifier","src":"7353:6:24"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"7215:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7243:4:24","nodeType":"YulTypedName","src":"7243:4:24","type":""},{"name":"bytes","nativeSrc":"7249:5:24","nodeType":"YulTypedName","src":"7249:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7259:6:24","nodeType":"YulTypedName","src":"7259:6:24","type":""}],"src":"7215:169:24"},{"body":{"nativeSrc":"7470:214:24","nodeType":"YulBlock","src":"7470:214:24","statements":[{"nativeSrc":"7603:37:24","nodeType":"YulAssignment","src":"7603:37:24","value":{"arguments":[{"name":"data","nativeSrc":"7630:4:24","nodeType":"YulIdentifier","src":"7630:4:24"},{"name":"len","nativeSrc":"7636:3:24","nodeType":"YulIdentifier","src":"7636:3:24"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7611:18:24","nodeType":"YulIdentifier","src":"7611:18:24"},"nativeSrc":"7611:29:24","nodeType":"YulFunctionCall","src":"7611:29:24"},"variableNames":[{"name":"data","nativeSrc":"7603:4:24","nodeType":"YulIdentifier","src":"7603:4:24"}]},{"nativeSrc":"7649:29:24","nodeType":"YulAssignment","src":"7649:29:24","value":{"arguments":[{"name":"data","nativeSrc":"7660:4:24","nodeType":"YulIdentifier","src":"7660:4:24"},{"arguments":[{"kind":"number","nativeSrc":"7670:1:24","nodeType":"YulLiteral","src":"7670:1:24","type":"","value":"2"},{"name":"len","nativeSrc":"7673:3:24","nodeType":"YulIdentifier","src":"7673:3:24"}],"functionName":{"name":"mul","nativeSrc":"7666:3:24","nodeType":"YulIdentifier","src":"7666:3:24"},"nativeSrc":"7666:11:24","nodeType":"YulFunctionCall","src":"7666:11:24"}],"functionName":{"name":"or","nativeSrc":"7657:2:24","nodeType":"YulIdentifier","src":"7657:2:24"},"nativeSrc":"7657:21:24","nodeType":"YulFunctionCall","src":"7657:21:24"},"variableNames":[{"name":"used","nativeSrc":"7649:4:24","nodeType":"YulIdentifier","src":"7649:4:24"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7389:295:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7451:4:24","nodeType":"YulTypedName","src":"7451:4:24","type":""},{"name":"len","nativeSrc":"7457:3:24","nodeType":"YulTypedName","src":"7457:3:24","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7465:4:24","nodeType":"YulTypedName","src":"7465:4:24","type":""}],"src":"7389:295:24"},{"body":{"nativeSrc":"7781:1303:24","nodeType":"YulBlock","src":"7781:1303:24","statements":[{"nativeSrc":"7792:51:24","nodeType":"YulVariableDeclaration","src":"7792:51:24","value":{"arguments":[{"name":"src","nativeSrc":"7839:3:24","nodeType":"YulIdentifier","src":"7839:3:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7806:32:24","nodeType":"YulIdentifier","src":"7806:32:24"},"nativeSrc":"7806:37:24","nodeType":"YulFunctionCall","src":"7806:37:24"},"variables":[{"name":"newLen","nativeSrc":"7796:6:24","nodeType":"YulTypedName","src":"7796:6:24","type":""}]},{"body":{"nativeSrc":"7928:22:24","nodeType":"YulBlock","src":"7928:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7930:16:24","nodeType":"YulIdentifier","src":"7930:16:24"},"nativeSrc":"7930:18:24","nodeType":"YulFunctionCall","src":"7930:18:24"},"nativeSrc":"7930:18:24","nodeType":"YulExpressionStatement","src":"7930:18:24"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7900:6:24","nodeType":"YulIdentifier","src":"7900:6:24"},{"kind":"number","nativeSrc":"7908:18:24","nodeType":"YulLiteral","src":"7908:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7897:2:24","nodeType":"YulIdentifier","src":"7897:2:24"},"nativeSrc":"7897:30:24","nodeType":"YulFunctionCall","src":"7897:30:24"},"nativeSrc":"7894:56:24","nodeType":"YulIf","src":"7894:56:24"},{"nativeSrc":"7960:52:24","nodeType":"YulVariableDeclaration","src":"7960:52:24","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8006:4:24","nodeType":"YulIdentifier","src":"8006:4:24"}],"functionName":{"name":"sload","nativeSrc":"8000:5:24","nodeType":"YulIdentifier","src":"8000:5:24"},"nativeSrc":"8000:11:24","nodeType":"YulFunctionCall","src":"8000:11:24"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7974:25:24","nodeType":"YulIdentifier","src":"7974:25:24"},"nativeSrc":"7974:38:24","nodeType":"YulFunctionCall","src":"7974:38:24"},"variables":[{"name":"oldLen","nativeSrc":"7964:6:24","nodeType":"YulTypedName","src":"7964:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8105:4:24","nodeType":"YulIdentifier","src":"8105:4:24"},{"name":"oldLen","nativeSrc":"8111:6:24","nodeType":"YulIdentifier","src":"8111:6:24"},{"name":"newLen","nativeSrc":"8119:6:24","nodeType":"YulIdentifier","src":"8119:6:24"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"8059:45:24","nodeType":"YulIdentifier","src":"8059:45:24"},"nativeSrc":"8059:67:24","nodeType":"YulFunctionCall","src":"8059:67:24"},"nativeSrc":"8059:67:24","nodeType":"YulExpressionStatement","src":"8059:67:24"},{"nativeSrc":"8136:18:24","nodeType":"YulVariableDeclaration","src":"8136:18:24","value":{"kind":"number","nativeSrc":"8153:1:24","nodeType":"YulLiteral","src":"8153:1:24","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8140:9:24","nodeType":"YulTypedName","src":"8140:9:24","type":""}]},{"nativeSrc":"8164:17:24","nodeType":"YulAssignment","src":"8164:17:24","value":{"kind":"number","nativeSrc":"8177:4:24","nodeType":"YulLiteral","src":"8177:4:24","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8164:9:24","nodeType":"YulIdentifier","src":"8164:9:24"}]},{"cases":[{"body":{"nativeSrc":"8228:611:24","nodeType":"YulBlock","src":"8228:611:24","statements":[{"nativeSrc":"8242:37:24","nodeType":"YulVariableDeclaration","src":"8242:37:24","value":{"arguments":[{"name":"newLen","nativeSrc":"8261:6:24","nodeType":"YulIdentifier","src":"8261:6:24"},{"arguments":[{"kind":"number","nativeSrc":"8273:4:24","nodeType":"YulLiteral","src":"8273:4:24","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"8269:3:24","nodeType":"YulIdentifier","src":"8269:3:24"},"nativeSrc":"8269:9:24","nodeType":"YulFunctionCall","src":"8269:9:24"}],"functionName":{"name":"and","nativeSrc":"8257:3:24","nodeType":"YulIdentifier","src":"8257:3:24"},"nativeSrc":"8257:22:24","nodeType":"YulFunctionCall","src":"8257:22:24"},"variables":[{"name":"loopEnd","nativeSrc":"8246:7:24","nodeType":"YulTypedName","src":"8246:7:24","type":""}]},{"nativeSrc":"8293:51:24","nodeType":"YulVariableDeclaration","src":"8293:51:24","value":{"arguments":[{"name":"slot","nativeSrc":"8339:4:24","nodeType":"YulIdentifier","src":"8339:4:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"8307:31:24","nodeType":"YulIdentifier","src":"8307:31:24"},"nativeSrc":"8307:37:24","nodeType":"YulFunctionCall","src":"8307:37:24"},"variables":[{"name":"dstPtr","nativeSrc":"8297:6:24","nodeType":"YulTypedName","src":"8297:6:24","type":""}]},{"nativeSrc":"8357:10:24","nodeType":"YulVariableDeclaration","src":"8357:10:24","value":{"kind":"number","nativeSrc":"8366:1:24","nodeType":"YulLiteral","src":"8366:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8361:1:24","nodeType":"YulTypedName","src":"8361:1:24","type":""}]},{"body":{"nativeSrc":"8425:163:24","nodeType":"YulBlock","src":"8425:163:24","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8450:6:24","nodeType":"YulIdentifier","src":"8450:6:24"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8468:3:24","nodeType":"YulIdentifier","src":"8468:3:24"},{"name":"srcOffset","nativeSrc":"8473:9:24","nodeType":"YulIdentifier","src":"8473:9:24"}],"functionName":{"name":"add","nativeSrc":"8464:3:24","nodeType":"YulIdentifier","src":"8464:3:24"},"nativeSrc":"8464:19:24","nodeType":"YulFunctionCall","src":"8464:19:24"}],"functionName":{"name":"mload","nativeSrc":"8458:5:24","nodeType":"YulIdentifier","src":"8458:5:24"},"nativeSrc":"8458:26:24","nodeType":"YulFunctionCall","src":"8458:26:24"}],"functionName":{"name":"sstore","nativeSrc":"8443:6:24","nodeType":"YulIdentifier","src":"8443:6:24"},"nativeSrc":"8443:42:24","nodeType":"YulFunctionCall","src":"8443:42:24"},"nativeSrc":"8443:42:24","nodeType":"YulExpressionStatement","src":"8443:42:24"},{"nativeSrc":"8502:24:24","nodeType":"YulAssignment","src":"8502:24:24","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8516:6:24","nodeType":"YulIdentifier","src":"8516:6:24"},{"kind":"number","nativeSrc":"8524:1:24","nodeType":"YulLiteral","src":"8524:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8512:3:24","nodeType":"YulIdentifier","src":"8512:3:24"},"nativeSrc":"8512:14:24","nodeType":"YulFunctionCall","src":"8512:14:24"},"variableNames":[{"name":"dstPtr","nativeSrc":"8502:6:24","nodeType":"YulIdentifier","src":"8502:6:24"}]},{"nativeSrc":"8543:31:24","nodeType":"YulAssignment","src":"8543:31:24","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8560:9:24","nodeType":"YulIdentifier","src":"8560:9:24"},{"kind":"number","nativeSrc":"8571:2:24","nodeType":"YulLiteral","src":"8571:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8556:3:24","nodeType":"YulIdentifier","src":"8556:3:24"},"nativeSrc":"8556:18:24","nodeType":"YulFunctionCall","src":"8556:18:24"},"variableNames":[{"name":"srcOffset","nativeSrc":"8543:9:24","nodeType":"YulIdentifier","src":"8543:9:24"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8391:1:24","nodeType":"YulIdentifier","src":"8391:1:24"},{"name":"loopEnd","nativeSrc":"8394:7:24","nodeType":"YulIdentifier","src":"8394:7:24"}],"functionName":{"name":"lt","nativeSrc":"8388:2:24","nodeType":"YulIdentifier","src":"8388:2:24"},"nativeSrc":"8388:14:24","nodeType":"YulFunctionCall","src":"8388:14:24"},"nativeSrc":"8380:208:24","nodeType":"YulForLoop","post":{"nativeSrc":"8403:21:24","nodeType":"YulBlock","src":"8403:21:24","statements":[{"nativeSrc":"8405:17:24","nodeType":"YulAssignment","src":"8405:17:24","value":{"arguments":[{"name":"i","nativeSrc":"8414:1:24","nodeType":"YulIdentifier","src":"8414:1:24"},{"kind":"number","nativeSrc":"8417:4:24","nodeType":"YulLiteral","src":"8417:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8410:3:24","nodeType":"YulIdentifier","src":"8410:3:24"},"nativeSrc":"8410:12:24","nodeType":"YulFunctionCall","src":"8410:12:24"},"variableNames":[{"name":"i","nativeSrc":"8405:1:24","nodeType":"YulIdentifier","src":"8405:1:24"}]}]},"pre":{"nativeSrc":"8384:3:24","nodeType":"YulBlock","src":"8384:3:24","statements":[]},"src":"8380:208:24"},{"body":{"nativeSrc":"8624:156:24","nodeType":"YulBlock","src":"8624:156:24","statements":[{"nativeSrc":"8642:43:24","nodeType":"YulVariableDeclaration","src":"8642:43:24","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8669:3:24","nodeType":"YulIdentifier","src":"8669:3:24"},{"name":"srcOffset","nativeSrc":"8674:9:24","nodeType":"YulIdentifier","src":"8674:9:24"}],"functionName":{"name":"add","nativeSrc":"8665:3:24","nodeType":"YulIdentifier","src":"8665:3:24"},"nativeSrc":"8665:19:24","nodeType":"YulFunctionCall","src":"8665:19:24"}],"functionName":{"name":"mload","nativeSrc":"8659:5:24","nodeType":"YulIdentifier","src":"8659:5:24"},"nativeSrc":"8659:26:24","nodeType":"YulFunctionCall","src":"8659:26:24"},"variables":[{"name":"lastValue","nativeSrc":"8646:9:24","nodeType":"YulTypedName","src":"8646:9:24","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8709:6:24","nodeType":"YulIdentifier","src":"8709:6:24"},{"arguments":[{"name":"lastValue","nativeSrc":"8736:9:24","nodeType":"YulIdentifier","src":"8736:9:24"},{"arguments":[{"name":"newLen","nativeSrc":"8751:6:24","nodeType":"YulIdentifier","src":"8751:6:24"},{"kind":"number","nativeSrc":"8759:4:24","nodeType":"YulLiteral","src":"8759:4:24","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8747:3:24","nodeType":"YulIdentifier","src":"8747:3:24"},"nativeSrc":"8747:17:24","nodeType":"YulFunctionCall","src":"8747:17:24"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8717:18:24","nodeType":"YulIdentifier","src":"8717:18:24"},"nativeSrc":"8717:48:24","nodeType":"YulFunctionCall","src":"8717:48:24"}],"functionName":{"name":"sstore","nativeSrc":"8702:6:24","nodeType":"YulIdentifier","src":"8702:6:24"},"nativeSrc":"8702:64:24","nodeType":"YulFunctionCall","src":"8702:64:24"},"nativeSrc":"8702:64:24","nodeType":"YulExpressionStatement","src":"8702:64:24"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8607:7:24","nodeType":"YulIdentifier","src":"8607:7:24"},{"name":"newLen","nativeSrc":"8616:6:24","nodeType":"YulIdentifier","src":"8616:6:24"}],"functionName":{"name":"lt","nativeSrc":"8604:2:24","nodeType":"YulIdentifier","src":"8604:2:24"},"nativeSrc":"8604:19:24","nodeType":"YulFunctionCall","src":"8604:19:24"},"nativeSrc":"8601:179:24","nodeType":"YulIf","src":"8601:179:24"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8800:4:24","nodeType":"YulIdentifier","src":"8800:4:24"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8814:6:24","nodeType":"YulIdentifier","src":"8814:6:24"},{"kind":"number","nativeSrc":"8822:1:24","nodeType":"YulLiteral","src":"8822:1:24","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8810:3:24","nodeType":"YulIdentifier","src":"8810:3:24"},"nativeSrc":"8810:14:24","nodeType":"YulFunctionCall","src":"8810:14:24"},{"kind":"number","nativeSrc":"8826:1:24","nodeType":"YulLiteral","src":"8826:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8806:3:24","nodeType":"YulIdentifier","src":"8806:3:24"},"nativeSrc":"8806:22:24","nodeType":"YulFunctionCall","src":"8806:22:24"}],"functionName":{"name":"sstore","nativeSrc":"8793:6:24","nodeType":"YulIdentifier","src":"8793:6:24"},"nativeSrc":"8793:36:24","nodeType":"YulFunctionCall","src":"8793:36:24"},"nativeSrc":"8793:36:24","nodeType":"YulExpressionStatement","src":"8793:36:24"}]},"nativeSrc":"8221:618:24","nodeType":"YulCase","src":"8221:618:24","value":{"kind":"number","nativeSrc":"8226:1:24","nodeType":"YulLiteral","src":"8226:1:24","type":"","value":"1"}},{"body":{"nativeSrc":"8856:222:24","nodeType":"YulBlock","src":"8856:222:24","statements":[{"nativeSrc":"8870:14:24","nodeType":"YulVariableDeclaration","src":"8870:14:24","value":{"kind":"number","nativeSrc":"8883:1:24","nodeType":"YulLiteral","src":"8883:1:24","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8874:5:24","nodeType":"YulTypedName","src":"8874:5:24","type":""}]},{"body":{"nativeSrc":"8907:67:24","nodeType":"YulBlock","src":"8907:67:24","statements":[{"nativeSrc":"8925:35:24","nodeType":"YulAssignment","src":"8925:35:24","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8944:3:24","nodeType":"YulIdentifier","src":"8944:3:24"},{"name":"srcOffset","nativeSrc":"8949:9:24","nodeType":"YulIdentifier","src":"8949:9:24"}],"functionName":{"name":"add","nativeSrc":"8940:3:24","nodeType":"YulIdentifier","src":"8940:3:24"},"nativeSrc":"8940:19:24","nodeType":"YulFunctionCall","src":"8940:19:24"}],"functionName":{"name":"mload","nativeSrc":"8934:5:24","nodeType":"YulIdentifier","src":"8934:5:24"},"nativeSrc":"8934:26:24","nodeType":"YulFunctionCall","src":"8934:26:24"},"variableNames":[{"name":"value","nativeSrc":"8925:5:24","nodeType":"YulIdentifier","src":"8925:5:24"}]}]},"condition":{"name":"newLen","nativeSrc":"8900:6:24","nodeType":"YulIdentifier","src":"8900:6:24"},"nativeSrc":"8897:77:24","nodeType":"YulIf","src":"8897:77:24"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8994:4:24","nodeType":"YulIdentifier","src":"8994:4:24"},{"arguments":[{"name":"value","nativeSrc":"9053:5:24","nodeType":"YulIdentifier","src":"9053:5:24"},{"name":"newLen","nativeSrc":"9060:6:24","nodeType":"YulIdentifier","src":"9060:6:24"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9000:52:24","nodeType":"YulIdentifier","src":"9000:52:24"},"nativeSrc":"9000:67:24","nodeType":"YulFunctionCall","src":"9000:67:24"}],"functionName":{"name":"sstore","nativeSrc":"8987:6:24","nodeType":"YulIdentifier","src":"8987:6:24"},"nativeSrc":"8987:81:24","nodeType":"YulFunctionCall","src":"8987:81:24"},"nativeSrc":"8987:81:24","nodeType":"YulExpressionStatement","src":"8987:81:24"}]},"nativeSrc":"8848:230:24","nodeType":"YulCase","src":"8848:230:24","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8201:6:24","nodeType":"YulIdentifier","src":"8201:6:24"},{"kind":"number","nativeSrc":"8209:2:24","nodeType":"YulLiteral","src":"8209:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8198:2:24","nodeType":"YulIdentifier","src":"8198:2:24"},"nativeSrc":"8198:14:24","nodeType":"YulFunctionCall","src":"8198:14:24"},"nativeSrc":"8191:887:24","nodeType":"YulSwitch","src":"8191:887:24"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7689:1395:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7770:4:24","nodeType":"YulTypedName","src":"7770:4:24","type":""},{"name":"src","nativeSrc":"7776:3:24","nodeType":"YulTypedName","src":"7776:3:24","type":""}],"src":"7689:1395:24"},{"body":{"nativeSrc":"9135:81:24","nodeType":"YulBlock","src":"9135:81:24","statements":[{"nativeSrc":"9145:65:24","nodeType":"YulAssignment","src":"9145:65:24","value":{"arguments":[{"name":"value","nativeSrc":"9160:5:24","nodeType":"YulIdentifier","src":"9160:5:24"},{"kind":"number","nativeSrc":"9167:42:24","nodeType":"YulLiteral","src":"9167:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9156:3:24","nodeType":"YulIdentifier","src":"9156:3:24"},"nativeSrc":"9156:54:24","nodeType":"YulFunctionCall","src":"9156:54:24"},"variableNames":[{"name":"cleaned","nativeSrc":"9145:7:24","nodeType":"YulIdentifier","src":"9145:7:24"}]}]},"name":"cleanup_t_uint160","nativeSrc":"9090:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9117:5:24","nodeType":"YulTypedName","src":"9117:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9127:7:24","nodeType":"YulTypedName","src":"9127:7:24","type":""}],"src":"9090:126:24"},{"body":{"nativeSrc":"9267:51:24","nodeType":"YulBlock","src":"9267:51:24","statements":[{"nativeSrc":"9277:35:24","nodeType":"YulAssignment","src":"9277:35:24","value":{"arguments":[{"name":"value","nativeSrc":"9306:5:24","nodeType":"YulIdentifier","src":"9306:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9288:17:24","nodeType":"YulIdentifier","src":"9288:17:24"},"nativeSrc":"9288:24:24","nodeType":"YulFunctionCall","src":"9288:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"9277:7:24","nodeType":"YulIdentifier","src":"9277:7:24"}]}]},"name":"cleanup_t_address","nativeSrc":"9222:96:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9249:5:24","nodeType":"YulTypedName","src":"9249:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9259:7:24","nodeType":"YulTypedName","src":"9259:7:24","type":""}],"src":"9222:96:24"},{"body":{"nativeSrc":"9389:53:24","nodeType":"YulBlock","src":"9389:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9406:3:24","nodeType":"YulIdentifier","src":"9406:3:24"},{"arguments":[{"name":"value","nativeSrc":"9429:5:24","nodeType":"YulIdentifier","src":"9429:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9411:17:24","nodeType":"YulIdentifier","src":"9411:17:24"},"nativeSrc":"9411:24:24","nodeType":"YulFunctionCall","src":"9411:24:24"}],"functionName":{"name":"mstore","nativeSrc":"9399:6:24","nodeType":"YulIdentifier","src":"9399:6:24"},"nativeSrc":"9399:37:24","nodeType":"YulFunctionCall","src":"9399:37:24"},"nativeSrc":"9399:37:24","nodeType":"YulExpressionStatement","src":"9399:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9324:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9377:5:24","nodeType":"YulTypedName","src":"9377:5:24","type":""},{"name":"pos","nativeSrc":"9384:3:24","nodeType":"YulTypedName","src":"9384:3:24","type":""}],"src":"9324:118:24"},{"body":{"nativeSrc":"9546:124:24","nodeType":"YulBlock","src":"9546:124:24","statements":[{"nativeSrc":"9556:26:24","nodeType":"YulAssignment","src":"9556:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"9568:9:24","nodeType":"YulIdentifier","src":"9568:9:24"},{"kind":"number","nativeSrc":"9579:2:24","nodeType":"YulLiteral","src":"9579:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9564:3:24","nodeType":"YulIdentifier","src":"9564:3:24"},"nativeSrc":"9564:18:24","nodeType":"YulFunctionCall","src":"9564:18:24"},"variableNames":[{"name":"tail","nativeSrc":"9556:4:24","nodeType":"YulIdentifier","src":"9556:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9636:6:24","nodeType":"YulIdentifier","src":"9636:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"9649:9:24","nodeType":"YulIdentifier","src":"9649:9:24"},{"kind":"number","nativeSrc":"9660:1:24","nodeType":"YulLiteral","src":"9660:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9645:3:24","nodeType":"YulIdentifier","src":"9645:3:24"},"nativeSrc":"9645:17:24","nodeType":"YulFunctionCall","src":"9645:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9592:43:24","nodeType":"YulIdentifier","src":"9592:43:24"},"nativeSrc":"9592:71:24","nodeType":"YulFunctionCall","src":"9592:71:24"},"nativeSrc":"9592:71:24","nodeType":"YulExpressionStatement","src":"9592:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9448:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9518:9:24","nodeType":"YulTypedName","src":"9518:9:24","type":""},{"name":"value0","nativeSrc":"9530:6:24","nodeType":"YulTypedName","src":"9530:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9541:4:24","nodeType":"YulTypedName","src":"9541:4:24","type":""}],"src":"9448:222:24"},{"body":{"nativeSrc":"9721:32:24","nodeType":"YulBlock","src":"9721:32:24","statements":[{"nativeSrc":"9731:16:24","nodeType":"YulAssignment","src":"9731:16:24","value":{"name":"value","nativeSrc":"9742:5:24","nodeType":"YulIdentifier","src":"9742:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"9731:7:24","nodeType":"YulIdentifier","src":"9731:7:24"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"9676:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9703:5:24","nodeType":"YulTypedName","src":"9703:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9713:7:24","nodeType":"YulTypedName","src":"9713:7:24","type":""}],"src":"9676:77:24"},{"body":{"nativeSrc":"9824:53:24","nodeType":"YulBlock","src":"9824:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9841:3:24","nodeType":"YulIdentifier","src":"9841:3:24"},{"arguments":[{"name":"value","nativeSrc":"9864:5:24","nodeType":"YulIdentifier","src":"9864:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9846:17:24","nodeType":"YulIdentifier","src":"9846:17:24"},"nativeSrc":"9846:24:24","nodeType":"YulFunctionCall","src":"9846:24:24"}],"functionName":{"name":"mstore","nativeSrc":"9834:6:24","nodeType":"YulIdentifier","src":"9834:6:24"},"nativeSrc":"9834:37:24","nodeType":"YulFunctionCall","src":"9834:37:24"},"nativeSrc":"9834:37:24","nodeType":"YulExpressionStatement","src":"9834:37:24"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9759:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9812:5:24","nodeType":"YulTypedName","src":"9812:5:24","type":""},{"name":"pos","nativeSrc":"9819:3:24","nodeType":"YulTypedName","src":"9819:3:24","type":""}],"src":"9759:118:24"},{"body":{"nativeSrc":"9948:53:24","nodeType":"YulBlock","src":"9948:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9965:3:24","nodeType":"YulIdentifier","src":"9965:3:24"},{"arguments":[{"name":"value","nativeSrc":"9988:5:24","nodeType":"YulIdentifier","src":"9988:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9970:17:24","nodeType":"YulIdentifier","src":"9970:17:24"},"nativeSrc":"9970:24:24","nodeType":"YulFunctionCall","src":"9970:24:24"}],"functionName":{"name":"mstore","nativeSrc":"9958:6:24","nodeType":"YulIdentifier","src":"9958:6:24"},"nativeSrc":"9958:37:24","nodeType":"YulFunctionCall","src":"9958:37:24"},"nativeSrc":"9958:37:24","nodeType":"YulExpressionStatement","src":"9958:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9883:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9936:5:24","nodeType":"YulTypedName","src":"9936:5:24","type":""},{"name":"pos","nativeSrc":"9943:3:24","nodeType":"YulTypedName","src":"9943:3:24","type":""}],"src":"9883:118:24"},{"body":{"nativeSrc":"10217:454:24","nodeType":"YulBlock","src":"10217:454:24","statements":[{"nativeSrc":"10227:27:24","nodeType":"YulAssignment","src":"10227:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"10239:9:24","nodeType":"YulIdentifier","src":"10239:9:24"},{"kind":"number","nativeSrc":"10250:3:24","nodeType":"YulLiteral","src":"10250:3:24","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10235:3:24","nodeType":"YulIdentifier","src":"10235:3:24"},"nativeSrc":"10235:19:24","nodeType":"YulFunctionCall","src":"10235:19:24"},"variableNames":[{"name":"tail","nativeSrc":"10227:4:24","nodeType":"YulIdentifier","src":"10227:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10308:6:24","nodeType":"YulIdentifier","src":"10308:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"10321:9:24","nodeType":"YulIdentifier","src":"10321:9:24"},{"kind":"number","nativeSrc":"10332:1:24","nodeType":"YulLiteral","src":"10332:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10317:3:24","nodeType":"YulIdentifier","src":"10317:3:24"},"nativeSrc":"10317:17:24","nodeType":"YulFunctionCall","src":"10317:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10264:43:24","nodeType":"YulIdentifier","src":"10264:43:24"},"nativeSrc":"10264:71:24","nodeType":"YulFunctionCall","src":"10264:71:24"},"nativeSrc":"10264:71:24","nodeType":"YulExpressionStatement","src":"10264:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10389:6:24","nodeType":"YulIdentifier","src":"10389:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"10402:9:24","nodeType":"YulIdentifier","src":"10402:9:24"},{"kind":"number","nativeSrc":"10413:2:24","nodeType":"YulLiteral","src":"10413:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10398:3:24","nodeType":"YulIdentifier","src":"10398:3:24"},"nativeSrc":"10398:18:24","nodeType":"YulFunctionCall","src":"10398:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10345:43:24","nodeType":"YulIdentifier","src":"10345:43:24"},"nativeSrc":"10345:72:24","nodeType":"YulFunctionCall","src":"10345:72:24"},"nativeSrc":"10345:72:24","nodeType":"YulExpressionStatement","src":"10345:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10471:6:24","nodeType":"YulIdentifier","src":"10471:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"10484:9:24","nodeType":"YulIdentifier","src":"10484:9:24"},{"kind":"number","nativeSrc":"10495:2:24","nodeType":"YulLiteral","src":"10495:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10480:3:24","nodeType":"YulIdentifier","src":"10480:3:24"},"nativeSrc":"10480:18:24","nodeType":"YulFunctionCall","src":"10480:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10427:43:24","nodeType":"YulIdentifier","src":"10427:43:24"},"nativeSrc":"10427:72:24","nodeType":"YulFunctionCall","src":"10427:72:24"},"nativeSrc":"10427:72:24","nodeType":"YulExpressionStatement","src":"10427:72:24"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10553:6:24","nodeType":"YulIdentifier","src":"10553:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"10566:9:24","nodeType":"YulIdentifier","src":"10566:9:24"},{"kind":"number","nativeSrc":"10577:2:24","nodeType":"YulLiteral","src":"10577:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10562:3:24","nodeType":"YulIdentifier","src":"10562:3:24"},"nativeSrc":"10562:18:24","nodeType":"YulFunctionCall","src":"10562:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10509:43:24","nodeType":"YulIdentifier","src":"10509:43:24"},"nativeSrc":"10509:72:24","nodeType":"YulFunctionCall","src":"10509:72:24"},"nativeSrc":"10509:72:24","nodeType":"YulExpressionStatement","src":"10509:72:24"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"10635:6:24","nodeType":"YulIdentifier","src":"10635:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"10648:9:24","nodeType":"YulIdentifier","src":"10648:9:24"},{"kind":"number","nativeSrc":"10659:3:24","nodeType":"YulLiteral","src":"10659:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10644:3:24","nodeType":"YulIdentifier","src":"10644:3:24"},"nativeSrc":"10644:19:24","nodeType":"YulFunctionCall","src":"10644:19:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10591:43:24","nodeType":"YulIdentifier","src":"10591:43:24"},"nativeSrc":"10591:73:24","nodeType":"YulFunctionCall","src":"10591:73:24"},"nativeSrc":"10591:73:24","nodeType":"YulExpressionStatement","src":"10591:73:24"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"10007:664:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10157:9:24","nodeType":"YulTypedName","src":"10157:9:24","type":""},{"name":"value4","nativeSrc":"10169:6:24","nodeType":"YulTypedName","src":"10169:6:24","type":""},{"name":"value3","nativeSrc":"10177:6:24","nodeType":"YulTypedName","src":"10177:6:24","type":""},{"name":"value2","nativeSrc":"10185:6:24","nodeType":"YulTypedName","src":"10185:6:24","type":""},{"name":"value1","nativeSrc":"10193:6:24","nodeType":"YulTypedName","src":"10193:6:24","type":""},{"name":"value0","nativeSrc":"10201:6:24","nodeType":"YulTypedName","src":"10201:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10212:4:24","nodeType":"YulTypedName","src":"10212:4:24","type":""}],"src":"10007:664:24"},{"body":{"nativeSrc":"10773:73:24","nodeType":"YulBlock","src":"10773:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10790:3:24","nodeType":"YulIdentifier","src":"10790:3:24"},{"name":"length","nativeSrc":"10795:6:24","nodeType":"YulIdentifier","src":"10795:6:24"}],"functionName":{"name":"mstore","nativeSrc":"10783:6:24","nodeType":"YulIdentifier","src":"10783:6:24"},"nativeSrc":"10783:19:24","nodeType":"YulFunctionCall","src":"10783:19:24"},"nativeSrc":"10783:19:24","nodeType":"YulExpressionStatement","src":"10783:19:24"},{"nativeSrc":"10811:29:24","nodeType":"YulAssignment","src":"10811:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"10830:3:24","nodeType":"YulIdentifier","src":"10830:3:24"},{"kind":"number","nativeSrc":"10835:4:24","nodeType":"YulLiteral","src":"10835:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10826:3:24","nodeType":"YulIdentifier","src":"10826:3:24"},"nativeSrc":"10826:14:24","nodeType":"YulFunctionCall","src":"10826:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"10811:11:24","nodeType":"YulIdentifier","src":"10811:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10677:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10745:3:24","nodeType":"YulTypedName","src":"10745:3:24","type":""},{"name":"length","nativeSrc":"10750:6:24","nodeType":"YulTypedName","src":"10750:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10761:11:24","nodeType":"YulTypedName","src":"10761:11:24","type":""}],"src":"10677:169:24"},{"body":{"nativeSrc":"10944:285:24","nodeType":"YulBlock","src":"10944:285:24","statements":[{"nativeSrc":"10954:53:24","nodeType":"YulVariableDeclaration","src":"10954:53:24","value":{"arguments":[{"name":"value","nativeSrc":"11001:5:24","nodeType":"YulIdentifier","src":"11001:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"10968:32:24","nodeType":"YulIdentifier","src":"10968:32:24"},"nativeSrc":"10968:39:24","nodeType":"YulFunctionCall","src":"10968:39:24"},"variables":[{"name":"length","nativeSrc":"10958:6:24","nodeType":"YulTypedName","src":"10958:6:24","type":""}]},{"nativeSrc":"11016:78:24","nodeType":"YulAssignment","src":"11016:78:24","value":{"arguments":[{"name":"pos","nativeSrc":"11082:3:24","nodeType":"YulIdentifier","src":"11082:3:24"},{"name":"length","nativeSrc":"11087:6:24","nodeType":"YulIdentifier","src":"11087:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11023:58:24","nodeType":"YulIdentifier","src":"11023:58:24"},"nativeSrc":"11023:71:24","nodeType":"YulFunctionCall","src":"11023:71:24"},"variableNames":[{"name":"pos","nativeSrc":"11016:3:24","nodeType":"YulIdentifier","src":"11016:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11142:5:24","nodeType":"YulIdentifier","src":"11142:5:24"},{"kind":"number","nativeSrc":"11149:4:24","nodeType":"YulLiteral","src":"11149:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11138:3:24","nodeType":"YulIdentifier","src":"11138:3:24"},"nativeSrc":"11138:16:24","nodeType":"YulFunctionCall","src":"11138:16:24"},{"name":"pos","nativeSrc":"11156:3:24","nodeType":"YulIdentifier","src":"11156:3:24"},{"name":"length","nativeSrc":"11161:6:24","nodeType":"YulIdentifier","src":"11161:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11103:34:24","nodeType":"YulIdentifier","src":"11103:34:24"},"nativeSrc":"11103:65:24","nodeType":"YulFunctionCall","src":"11103:65:24"},"nativeSrc":"11103:65:24","nodeType":"YulExpressionStatement","src":"11103:65:24"},{"nativeSrc":"11177:46:24","nodeType":"YulAssignment","src":"11177:46:24","value":{"arguments":[{"name":"pos","nativeSrc":"11188:3:24","nodeType":"YulIdentifier","src":"11188:3:24"},{"arguments":[{"name":"length","nativeSrc":"11215:6:24","nodeType":"YulIdentifier","src":"11215:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11193:21:24","nodeType":"YulIdentifier","src":"11193:21:24"},"nativeSrc":"11193:29:24","nodeType":"YulFunctionCall","src":"11193:29:24"}],"functionName":{"name":"add","nativeSrc":"11184:3:24","nodeType":"YulIdentifier","src":"11184:3:24"},"nativeSrc":"11184:39:24","nodeType":"YulFunctionCall","src":"11184:39:24"},"variableNames":[{"name":"end","nativeSrc":"11177:3:24","nodeType":"YulIdentifier","src":"11177:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10852:377:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10925:5:24","nodeType":"YulTypedName","src":"10925:5:24","type":""},{"name":"pos","nativeSrc":"10932:3:24","nodeType":"YulTypedName","src":"10932:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10940:3:24","nodeType":"YulTypedName","src":"10940:3:24","type":""}],"src":"10852:377:24"},{"body":{"nativeSrc":"11353:195:24","nodeType":"YulBlock","src":"11353:195:24","statements":[{"nativeSrc":"11363:26:24","nodeType":"YulAssignment","src":"11363:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"11375:9:24","nodeType":"YulIdentifier","src":"11375:9:24"},{"kind":"number","nativeSrc":"11386:2:24","nodeType":"YulLiteral","src":"11386:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11371:3:24","nodeType":"YulIdentifier","src":"11371:3:24"},"nativeSrc":"11371:18:24","nodeType":"YulFunctionCall","src":"11371:18:24"},"variableNames":[{"name":"tail","nativeSrc":"11363:4:24","nodeType":"YulIdentifier","src":"11363:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11410:9:24","nodeType":"YulIdentifier","src":"11410:9:24"},{"kind":"number","nativeSrc":"11421:1:24","nodeType":"YulLiteral","src":"11421:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11406:3:24","nodeType":"YulIdentifier","src":"11406:3:24"},"nativeSrc":"11406:17:24","nodeType":"YulFunctionCall","src":"11406:17:24"},{"arguments":[{"name":"tail","nativeSrc":"11429:4:24","nodeType":"YulIdentifier","src":"11429:4:24"},{"name":"headStart","nativeSrc":"11435:9:24","nodeType":"YulIdentifier","src":"11435:9:24"}],"functionName":{"name":"sub","nativeSrc":"11425:3:24","nodeType":"YulIdentifier","src":"11425:3:24"},"nativeSrc":"11425:20:24","nodeType":"YulFunctionCall","src":"11425:20:24"}],"functionName":{"name":"mstore","nativeSrc":"11399:6:24","nodeType":"YulIdentifier","src":"11399:6:24"},"nativeSrc":"11399:47:24","nodeType":"YulFunctionCall","src":"11399:47:24"},"nativeSrc":"11399:47:24","nodeType":"YulExpressionStatement","src":"11399:47:24"},{"nativeSrc":"11455:86:24","nodeType":"YulAssignment","src":"11455:86:24","value":{"arguments":[{"name":"value0","nativeSrc":"11527:6:24","nodeType":"YulIdentifier","src":"11527:6:24"},{"name":"tail","nativeSrc":"11536:4:24","nodeType":"YulIdentifier","src":"11536:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11463:63:24","nodeType":"YulIdentifier","src":"11463:63:24"},"nativeSrc":"11463:78:24","nodeType":"YulFunctionCall","src":"11463:78:24"},"variableNames":[{"name":"tail","nativeSrc":"11455:4:24","nodeType":"YulIdentifier","src":"11455:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11235:313:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11325:9:24","nodeType":"YulTypedName","src":"11325:9:24","type":""},{"name":"value0","nativeSrc":"11337:6:24","nodeType":"YulTypedName","src":"11337:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11348:4:24","nodeType":"YulTypedName","src":"11348:4:24","type":""}],"src":"11235:313:24"},{"body":{"nativeSrc":"11612:40:24","nodeType":"YulBlock","src":"11612:40:24","statements":[{"nativeSrc":"11623:22:24","nodeType":"YulAssignment","src":"11623:22:24","value":{"arguments":[{"name":"value","nativeSrc":"11639:5:24","nodeType":"YulIdentifier","src":"11639:5:24"}],"functionName":{"name":"mload","nativeSrc":"11633:5:24","nodeType":"YulIdentifier","src":"11633:5:24"},"nativeSrc":"11633:12:24","nodeType":"YulFunctionCall","src":"11633:12:24"},"variableNames":[{"name":"length","nativeSrc":"11623:6:24","nodeType":"YulIdentifier","src":"11623:6:24"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11554:98:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11595:5:24","nodeType":"YulTypedName","src":"11595:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11605:6:24","nodeType":"YulTypedName","src":"11605:6:24","type":""}],"src":"11554:98:24"},{"body":{"nativeSrc":"11714:60:24","nodeType":"YulBlock","src":"11714:60:24","statements":[{"nativeSrc":"11724:11:24","nodeType":"YulAssignment","src":"11724:11:24","value":{"name":"ptr","nativeSrc":"11732:3:24","nodeType":"YulIdentifier","src":"11732:3:24"},"variableNames":[{"name":"data","nativeSrc":"11724:4:24","nodeType":"YulIdentifier","src":"11724:4:24"}]},{"nativeSrc":"11745:22:24","nodeType":"YulAssignment","src":"11745:22:24","value":{"arguments":[{"name":"ptr","nativeSrc":"11757:3:24","nodeType":"YulIdentifier","src":"11757:3:24"},{"kind":"number","nativeSrc":"11762:4:24","nodeType":"YulLiteral","src":"11762:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11753:3:24","nodeType":"YulIdentifier","src":"11753:3:24"},"nativeSrc":"11753:14:24","nodeType":"YulFunctionCall","src":"11753:14:24"},"variableNames":[{"name":"data","nativeSrc":"11745:4:24","nodeType":"YulIdentifier","src":"11745:4:24"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"11658:116:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11701:3:24","nodeType":"YulTypedName","src":"11701:3:24","type":""}],"returnVariables":[{"name":"data","nativeSrc":"11709:4:24","nodeType":"YulTypedName","src":"11709:4:24","type":""}],"src":"11658:116:24"},{"body":{"nativeSrc":"11835:99:24","nodeType":"YulBlock","src":"11835:99:24","statements":[{"nativeSrc":"11846:42:24","nodeType":"YulVariableDeclaration","src":"11846:42:24","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"11883:3:24","nodeType":"YulIdentifier","src":"11883:3:24"}],"functionName":{"name":"mload","nativeSrc":"11877:5:24","nodeType":"YulIdentifier","src":"11877:5:24"},"nativeSrc":"11877:10:24","nodeType":"YulFunctionCall","src":"11877:10:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"11859:17:24","nodeType":"YulIdentifier","src":"11859:17:24"},"nativeSrc":"11859:29:24","nodeType":"YulFunctionCall","src":"11859:29:24"},"variables":[{"name":"value","nativeSrc":"11850:5:24","nodeType":"YulTypedName","src":"11850:5:24","type":""}]},{"nativeSrc":"11898:29:24","nodeType":"YulAssignment","src":"11898:29:24","value":{"name":"value","nativeSrc":"11922:5:24","nodeType":"YulIdentifier","src":"11922:5:24"},"variableNames":[{"name":"returnValue","nativeSrc":"11898:11:24","nodeType":"YulIdentifier","src":"11898:11:24"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"11780:154:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11815:3:24","nodeType":"YulTypedName","src":"11815:3:24","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"11823:11:24","nodeType":"YulTypedName","src":"11823:11:24","type":""}],"src":"11780:154:24"},{"body":{"nativeSrc":"12030:504:24","nodeType":"YulBlock","src":"12030:504:24","statements":[{"nativeSrc":"12041:52:24","nodeType":"YulVariableDeclaration","src":"12041:52:24","value":{"arguments":[{"name":"array","nativeSrc":"12087:5:24","nodeType":"YulIdentifier","src":"12087:5:24"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12055:31:24","nodeType":"YulIdentifier","src":"12055:31:24"},"nativeSrc":"12055:38:24","nodeType":"YulFunctionCall","src":"12055:38:24"},"variables":[{"name":"length","nativeSrc":"12045:6:24","nodeType":"YulTypedName","src":"12045:6:24","type":""}]},{"nativeSrc":"12102:21:24","nodeType":"YulVariableDeclaration","src":"12102:21:24","value":{"name":"array","nativeSrc":"12118:5:24","nodeType":"YulIdentifier","src":"12118:5:24"},"variables":[{"name":"dataArea","nativeSrc":"12106:8:24","nodeType":"YulTypedName","src":"12106:8:24","type":""}]},{"nativeSrc":"12133:52:24","nodeType":"YulAssignment","src":"12133:52:24","value":{"arguments":[{"name":"array","nativeSrc":"12179:5:24","nodeType":"YulIdentifier","src":"12179:5:24"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12145:33:24","nodeType":"YulIdentifier","src":"12145:33:24"},"nativeSrc":"12145:40:24","nodeType":"YulFunctionCall","src":"12145:40:24"},"variableNames":[{"name":"dataArea","nativeSrc":"12133:8:24","nodeType":"YulIdentifier","src":"12133:8:24"}]},{"nativeSrc":"12195:44:24","nodeType":"YulAssignment","src":"12195:44:24","value":{"arguments":[{"name":"dataArea","nativeSrc":"12230:8:24","nodeType":"YulIdentifier","src":"12230:8:24"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"12204:25:24","nodeType":"YulIdentifier","src":"12204:25:24"},"nativeSrc":"12204:35:24","nodeType":"YulFunctionCall","src":"12204:35:24"},"variableNames":[{"name":"value","nativeSrc":"12195:5:24","nodeType":"YulIdentifier","src":"12195:5:24"}]},{"body":{"nativeSrc":"12267:260:24","nodeType":"YulBlock","src":"12267:260:24","statements":[{"nativeSrc":"12281:236:24","nodeType":"YulAssignment","src":"12281:236:24","value":{"arguments":[{"name":"value","nativeSrc":"12311:5:24","nodeType":"YulIdentifier","src":"12311:5:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12378:1:24","nodeType":"YulLiteral","src":"12378:1:24","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"12385:2:24","nodeType":"YulLiteral","src":"12385:2:24","type":"","value":"32"},{"name":"length","nativeSrc":"12389:6:24","nodeType":"YulIdentifier","src":"12389:6:24"}],"functionName":{"name":"sub","nativeSrc":"12381:3:24","nodeType":"YulIdentifier","src":"12381:3:24"},"nativeSrc":"12381:15:24","nodeType":"YulFunctionCall","src":"12381:15:24"}],"functionName":{"name":"mul","nativeSrc":"12374:3:24","nodeType":"YulIdentifier","src":"12374:3:24"},"nativeSrc":"12374:23:24","nodeType":"YulFunctionCall","src":"12374:23:24"},{"kind":"number","nativeSrc":"12419:66:24","nodeType":"YulLiteral","src":"12419:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"12334:18:24","nodeType":"YulIdentifier","src":"12334:18:24"},"nativeSrc":"12334:169:24","nodeType":"YulFunctionCall","src":"12334:169:24"}],"functionName":{"name":"and","nativeSrc":"12290:3:24","nodeType":"YulIdentifier","src":"12290:3:24"},"nativeSrc":"12290:227:24","nodeType":"YulFunctionCall","src":"12290:227:24"},"variableNames":[{"name":"value","nativeSrc":"12281:5:24","nodeType":"YulIdentifier","src":"12281:5:24"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12255:6:24","nodeType":"YulIdentifier","src":"12255:6:24"},{"kind":"number","nativeSrc":"12263:2:24","nodeType":"YulLiteral","src":"12263:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12252:2:24","nodeType":"YulIdentifier","src":"12252:2:24"},"nativeSrc":"12252:14:24","nodeType":"YulFunctionCall","src":"12252:14:24"},"nativeSrc":"12249:278:24","nodeType":"YulIf","src":"12249:278:24"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"11940:594:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"12014:5:24","nodeType":"YulTypedName","src":"12014:5:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12024:5:24","nodeType":"YulTypedName","src":"12024:5:24","type":""}],"src":"11940:594:24"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101806040523480156200001257600080fd5b5060405162002cdb38038062002cdb8339818101604052810190620000389190620005ac565b3383806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508686816003908162000084919062000891565b50806004908162000096919062000891565b505050620000af600583620001e960201b90919060201c565b6101208181525050620000cd600682620001e960201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200010c6200024160201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001bf5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001b69190620009bd565b60405180910390fd5b620001d0816200029e60201b60201c565b508060ff166101608160ff168152505050505062000b7b565b60006020835110156200020f5762000207836200036460201b60201c565b90506200023b565b826200022183620003d160201b60201c565b600001908162000232919062000891565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200028395949392919062000a06565b60405160208183030381529060405280519060200120905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080829050601f81511115620003b457826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620003ab919062000ab5565b60405180910390fd5b805181620003c29062000b0b565b60001c1760001b915050919050565b6000819050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200044482620003f9565b810181811067ffffffffffffffff821117156200046657620004656200040a565b5b80604052505050565b60006200047b620003db565b905062000489828262000439565b919050565b600067ffffffffffffffff821115620004ac57620004ab6200040a565b5b620004b782620003f9565b9050602081019050919050565b60005b83811015620004e4578082015181840152602081019050620004c7565b60008484015250505050565b60006200050762000501846200048e565b6200046f565b905082815260208101848484011115620005265762000525620003f4565b5b62000533848285620004c4565b509392505050565b600082601f830112620005535762000552620003ef565b5b815162000565848260208601620004f0565b91505092915050565b600060ff82169050919050565b62000586816200056e565b81146200059257600080fd5b50565b600081519050620005a6816200057b565b92915050565b600080600060608486031215620005c857620005c7620003e5565b5b600084015167ffffffffffffffff811115620005e957620005e8620003ea565b5b620005f7868287016200053b565b935050602084015167ffffffffffffffff8111156200061b576200061a620003ea565b5b62000629868287016200053b565b92505060406200063c8682870162000595565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200069957607f821691505b602082108103620006af57620006ae62000651565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006da565b620007258683620006da565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620007726200076c62000766846200073d565b62000747565b6200073d565b9050919050565b6000819050919050565b6200078e8362000751565b620007a66200079d8262000779565b848454620006e7565b825550505050565b600090565b620007bd620007ae565b620007ca81848462000783565b505050565b5b81811015620007f257620007e6600082620007b3565b600181019050620007d0565b5050565b601f82111562000841576200080b81620006b5565b6200081684620006ca565b8101602085101562000826578190505b6200083e6200083585620006ca565b830182620007cf565b50505b505050565b600082821c905092915050565b6000620008666000198460080262000846565b1980831691505092915050565b600062000881838362000853565b9150826002028217905092915050565b6200089c8262000646565b67ffffffffffffffff811115620008b857620008b76200040a565b5b620008c4825462000680565b620008d1828285620007f6565b600060209050601f831160018114620009095760008415620008f4578287015190505b62000900858262000873565b86555062000970565b601f1984166200091986620006b5565b60005b8281101562000943578489015182556001820191506020850194506020810190506200091c565b868310156200096357848901516200095f601f89168262000853565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009a58262000978565b9050919050565b620009b78162000998565b82525050565b6000602082019050620009d46000830184620009ac565b92915050565b6000819050919050565b620009ef81620009da565b82525050565b62000a00816200073d565b82525050565b600060a08201905062000a1d6000830188620009e4565b62000a2c6020830187620009e4565b62000a3b6040830186620009e4565b62000a4a6060830185620009f5565b62000a596080830184620009ac565b9695505050505050565b600082825260208201905092915050565b600062000a818262000646565b62000a8d818562000a63565b935062000a9f818560208601620004c4565b62000aaa81620003f9565b840191505092915050565b6000602082019050818103600083015262000ad1818462000a74565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062000b028251620009da565b80915050919050565b600062000b188262000ad9565b8262000b248462000ae4565b905062000b318162000af4565b9250602082101562000b745762000b6f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620006da565b831692505b5050919050565b60805160a05160c05160e051610100516101205161014051610160516120fa62000be160003960006104a601526000610ef401526000610eb901526000611409015260006113e801526000610b6301526000610bb901526000610be201526120fa6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad57806395d89b411161007157806395d89b41146102fe578063a9059cbb1461031c578063d505accf1461034c578063dd62ed3e14610368578063f2fde38b1461039857610121565b8063715018a61461026657806379cc6790146102705780637ecebe001461028c57806384b0196e146102bc5780638da5cb5b146102e057610121565b8063313ce567116100f4578063313ce567146101c25780633644e515146101e057806340c10f19146101fe57806342966c681461021a57806370a082311461023657610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103b4565b60405161013b91906118f6565b60405180910390f35b61015e600480360381019061015991906119b1565b610446565b60405161016b9190611a0c565b60405180910390f35b61017c610469565b6040516101899190611a36565b60405180910390f35b6101ac60048036038101906101a79190611a51565b610473565b6040516101b99190611a0c565b60405180910390f35b6101ca6104a2565b6040516101d79190611ac0565b60405180910390f35b6101e86104ca565b6040516101f59190611af4565b60405180910390f35b610218600480360381019061021391906119b1565b6104d9565b005b610234600480360381019061022f9190611b0f565b61053d565b005b610250600480360381019061024b9190611b3c565b610551565b60405161025d9190611a36565b60405180910390f35b61026e610599565b005b61028a600480360381019061028591906119b1565b6105ad565b005b6102a660048036038101906102a19190611b3c565b6105cd565b6040516102b39190611a36565b60405180910390f35b6102c46105df565b6040516102d79796959493929190611c71565b60405180910390f35b6102e8610689565b6040516102f59190611cf5565b60405180910390f35b6103066106b3565b60405161031391906118f6565b60405180910390f35b610336600480360381019061033191906119b1565b610745565b6040516103439190611a0c565b60405180910390f35b61036660048036038101906103619190611d68565b610768565b005b610382600480360381019061037d9190611e0a565b6108b0565b60405161038f9190611a36565b60405180910390f35b6103b260048036038101906103ad9190611b3c565b610937565b005b6060600380546103c390611e79565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611e79565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b6000806104516109bd565b905061045e8185856109c5565b600191505092915050565b6000600254905090565b60008061047e6109bd565b905061048b8582856109d7565b610496858585610a6b565b60019150509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006104d4610b5f565b905090565b6104e1610c16565b6104eb8282610c9d565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516105319190611a36565b60405180910390a25050565b61054e6105486109bd565b82610d1f565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105a1610c16565b6105ab6000610da1565b565b6105bf826105b96109bd565b836109d7565b6105c98282610d1f565b5050565b60006105d882610e67565b9050919050565b6000606080600080600060606105f3610eb0565b6105fb610eeb565b46306000801b600067ffffffffffffffff81111561061c5761061b611eaa565b5b60405190808252806020026020018201604052801561064a5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106c290611e79565b80601f01602080910402602001604051908101604052809291908181526020018280546106ee90611e79565b801561073b5780601f106107105761010080835404028352916020019161073b565b820191906000526020600020905b81548152906001019060200180831161071e57829003601f168201915b5050505050905090565b6000806107506109bd565b905061075d818585610a6b565b600191505092915050565b834211156107ad57836040517f627913020000000000000000000000000000000000000000000000000000000081526004016107a49190611a36565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107dc8c610f26565b896040516020016107f296959493929190611ed9565b604051602081830303815290604052805190602001209050600061081582610f7d565b9050600061082582878787610f97565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461089957808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610890929190611f3a565b60405180910390fd5b6108a48a8a8a6109c5565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61093f610c16565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109a89190611cf5565b60405180910390fd5b6109ba81610da1565b50565b600033905090565b6109d28383836001610fc7565b505050565b60006109e384846108b0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a655781811015610a55578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a4c93929190611f63565b60405180910390fd5b610a6484848484036000610fc7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610add5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ad49190611cf5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b4f5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b469190611cf5565b60405180910390fd5b610b5a83838361119e565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610bdb57507f000000000000000000000000000000000000000000000000000000000000000046145b15610c08577f00000000000000000000000000000000000000000000000000000000000000009050610c13565b610c106113c3565b90505b90565b610c1e6109bd565b73ffffffffffffffffffffffffffffffffffffffff16610c3c610689565b73ffffffffffffffffffffffffffffffffffffffff1614610c9b57610c5f6109bd565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c929190611cf5565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d0f5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d069190611cf5565b60405180910390fd5b610d1b6000838361119e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d915760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d889190611cf5565b60405180910390fd5b610d9d8260008361119e565b5050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610ee660057f000000000000000000000000000000000000000000000000000000000000000061145990919063ffffffff16565b905090565b6060610f2160067f000000000000000000000000000000000000000000000000000000000000000061145990919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610f90610f8a610b5f565b83611509565b9050919050565b600080600080610fa98888888861154a565b925092509250610fb9828261163e565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110395760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110309190611cf5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ab5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110a29190611cf5565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611198578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161118f9190611a36565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111f05780600260008282546111e49190611fc9565b925050819055506112c3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561127c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161127393929190611f63565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361130c5780600260008282540392505081905550611359565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113b69190611a36565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161143e959493929190611ffd565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146114765761146f836117a2565b9050611503565b81805461148290611e79565b80601f01602080910402602001604051908101604052809291908181526020018280546114ae90611e79565b80156114fb5780601f106114d0576101008083540402835291602001916114fb565b820191906000526020600020905b8154815290600101906020018083116114de57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561158a576000600385925092509250611634565b6000600188888888604051600081526020016040526040516115af9493929190612050565b6020604051602081039080840390855afa1580156115d1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361162557600060016000801b93509350935050611634565b8060008060001b935093509350505b9450945094915050565b6000600381111561165257611651612095565b5b82600381111561166557611664612095565b5b031561179e576001600381111561167f5761167e612095565b5b82600381111561169257611691612095565b5b036116c9576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156116dd576116dc612095565b5b8260038111156116f0576116ef612095565b5b03611735578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161172c9190611a36565b60405180910390fd5b60038081111561174857611747612095565b5b82600381111561175b5761175a612095565b5b0361179d57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016117949190611af4565b60405180910390fd5b5b5050565b606060006117af83611816565b90506000602067ffffffffffffffff8111156117ce576117cd611eaa565b5b6040519080825280601f01601f1916602001820160405280156118005781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f81111561185d576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118a0578082015181840152602081019050611885565b60008484015250505050565b6000601f19601f8301169050919050565b60006118c882611866565b6118d28185611871565b93506118e2818560208601611882565b6118eb816118ac565b840191505092915050565b6000602082019050818103600083015261191081846118bd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119488261191d565b9050919050565b6119588161193d565b811461196357600080fd5b50565b6000813590506119758161194f565b92915050565b6000819050919050565b61198e8161197b565b811461199957600080fd5b50565b6000813590506119ab81611985565b92915050565b600080604083850312156119c8576119c7611918565b5b60006119d685828601611966565b92505060206119e78582860161199c565b9150509250929050565b60008115159050919050565b611a06816119f1565b82525050565b6000602082019050611a2160008301846119fd565b92915050565b611a308161197b565b82525050565b6000602082019050611a4b6000830184611a27565b92915050565b600080600060608486031215611a6a57611a69611918565b5b6000611a7886828701611966565b9350506020611a8986828701611966565b9250506040611a9a8682870161199c565b9150509250925092565b600060ff82169050919050565b611aba81611aa4565b82525050565b6000602082019050611ad56000830184611ab1565b92915050565b6000819050919050565b611aee81611adb565b82525050565b6000602082019050611b096000830184611ae5565b92915050565b600060208284031215611b2557611b24611918565b5b6000611b338482850161199c565b91505092915050565b600060208284031215611b5257611b51611918565b5b6000611b6084828501611966565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b9e81611b69565b82525050565b611bad8161193d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611be88161197b565b82525050565b6000611bfa8383611bdf565b60208301905092915050565b6000602082019050919050565b6000611c1e82611bb3565b611c288185611bbe565b9350611c3383611bcf565b8060005b83811015611c64578151611c4b8882611bee565b9750611c5683611c06565b925050600181019050611c37565b5085935050505092915050565b600060e082019050611c86600083018a611b95565b8181036020830152611c9881896118bd565b90508181036040830152611cac81886118bd565b9050611cbb6060830187611a27565b611cc86080830186611ba4565b611cd560a0830185611ae5565b81810360c0830152611ce78184611c13565b905098975050505050505050565b6000602082019050611d0a6000830184611ba4565b92915050565b611d1981611aa4565b8114611d2457600080fd5b50565b600081359050611d3681611d10565b92915050565b611d4581611adb565b8114611d5057600080fd5b50565b600081359050611d6281611d3c565b92915050565b600080600080600080600060e0888a031215611d8757611d86611918565b5b6000611d958a828b01611966565b9750506020611da68a828b01611966565b9650506040611db78a828b0161199c565b9550506060611dc88a828b0161199c565b9450506080611dd98a828b01611d27565b93505060a0611dea8a828b01611d53565b92505060c0611dfb8a828b01611d53565b91505092959891949750929550565b60008060408385031215611e2157611e20611918565b5b6000611e2f85828601611966565b9250506020611e4085828601611966565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e9157607f821691505b602082108103611ea457611ea3611e4a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611eee6000830189611ae5565b611efb6020830188611ba4565b611f086040830187611ba4565b611f156060830186611a27565b611f226080830185611a27565b611f2f60a0830184611a27565b979650505050505050565b6000604082019050611f4f6000830185611ba4565b611f5c6020830184611ba4565b9392505050565b6000606082019050611f786000830186611ba4565b611f856020830185611a27565b611f926040830184611a27565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fd48261197b565b9150611fdf8361197b565b9250828201905080821115611ff757611ff6611f9a565b5b92915050565b600060a0820190506120126000830188611ae5565b61201f6020830187611ae5565b61202c6040830186611ae5565b6120396060830185611a27565b6120466080830184611ba4565b9695505050505050565b60006080820190506120656000830187611ae5565b6120726020830186611ab1565b61207f6040830185611ae5565b61208c6060830184611ae5565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220add52b7969b780d48b19bf2887c9194af3cae820aa68d429fb62acc6e07a355e64736f6c63430008180033","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2CDB CODESIZE SUB DUP1 PUSH3 0x2CDB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x5AC JUMP JUMPDEST CALLER DUP4 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP7 DUP7 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x84 SWAP2 SWAP1 PUSH3 0x891 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x891 JUMP JUMPDEST POP POP POP PUSH3 0xAF PUSH1 0x5 DUP4 PUSH3 0x1E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xCD PUSH1 0x6 DUP3 PUSH3 0x1E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x10C PUSH3 0x241 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1BF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B6 SWAP2 SWAP1 PUSH3 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1D0 DUP2 PUSH3 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0xFF AND PUSH2 0x160 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0xB7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x20F JUMPI PUSH3 0x207 DUP4 PUSH3 0x364 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x23B JUMP JUMPDEST DUP3 PUSH3 0x221 DUP4 PUSH3 0x3D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x232 SWAP2 SWAP1 PUSH3 0x891 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x283 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x3B4 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3AB SWAP2 SWAP1 PUSH3 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3C2 SWAP1 PUSH3 0xB0B JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x444 DUP3 PUSH3 0x3F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x466 JUMPI PUSH3 0x465 PUSH3 0x40A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x47B PUSH3 0x3DB JUMP JUMPDEST SWAP1 POP PUSH3 0x489 DUP3 DUP3 PUSH3 0x439 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4AC JUMPI PUSH3 0x4AB PUSH3 0x40A JUMP JUMPDEST JUMPDEST PUSH3 0x4B7 DUP3 PUSH3 0x3F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4E4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4C7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x507 PUSH3 0x501 DUP5 PUSH3 0x48E JUMP JUMPDEST PUSH3 0x46F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x526 JUMPI PUSH3 0x525 PUSH3 0x3F4 JUMP JUMPDEST JUMPDEST PUSH3 0x533 DUP5 DUP3 DUP6 PUSH3 0x4C4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x553 JUMPI PUSH3 0x552 PUSH3 0x3EF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x565 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x4F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x586 DUP2 PUSH3 0x56E JUMP JUMPDEST DUP2 EQ PUSH3 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5A6 DUP2 PUSH3 0x57B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x5C8 JUMPI PUSH3 0x5C7 PUSH3 0x3E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5E9 JUMPI PUSH3 0x5E8 PUSH3 0x3EA JUMP JUMPDEST JUMPDEST PUSH3 0x5F7 DUP7 DUP3 DUP8 ADD PUSH3 0x53B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x61B JUMPI PUSH3 0x61A PUSH3 0x3EA JUMP JUMPDEST JUMPDEST PUSH3 0x629 DUP7 DUP3 DUP8 ADD PUSH3 0x53B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x63C DUP7 DUP3 DUP8 ADD PUSH3 0x595 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x699 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6AF JUMPI PUSH3 0x6AE PUSH3 0x651 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x719 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x6DA JUMP JUMPDEST PUSH3 0x725 DUP7 DUP4 PUSH3 0x6DA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x772 PUSH3 0x76C PUSH3 0x766 DUP5 PUSH3 0x73D JUMP JUMPDEST PUSH3 0x747 JUMP JUMPDEST PUSH3 0x73D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x78E DUP4 PUSH3 0x751 JUMP JUMPDEST PUSH3 0x7A6 PUSH3 0x79D DUP3 PUSH3 0x779 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6E7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x7BD PUSH3 0x7AE JUMP JUMPDEST PUSH3 0x7CA DUP2 DUP5 DUP5 PUSH3 0x783 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7F2 JUMPI PUSH3 0x7E6 PUSH1 0x0 DUP3 PUSH3 0x7B3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x841 JUMPI PUSH3 0x80B DUP2 PUSH3 0x6B5 JUMP JUMPDEST PUSH3 0x816 DUP5 PUSH3 0x6CA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x826 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x83E PUSH3 0x835 DUP6 PUSH3 0x6CA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7CF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x866 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x846 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x881 DUP4 DUP4 PUSH3 0x853 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x89C DUP3 PUSH3 0x646 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8B8 JUMPI PUSH3 0x8B7 PUSH3 0x40A JUMP JUMPDEST JUMPDEST PUSH3 0x8C4 DUP3 SLOAD PUSH3 0x680 JUMP JUMPDEST PUSH3 0x8D1 DUP3 DUP3 DUP6 PUSH3 0x7F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x909 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x8F4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x900 DUP6 DUP3 PUSH3 0x873 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x970 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x919 DUP7 PUSH3 0x6B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x943 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x91C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x963 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x95F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x853 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9A5 DUP3 PUSH3 0x978 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9B7 DUP2 PUSH3 0x998 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9EF DUP2 PUSH3 0x9DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA00 DUP2 PUSH3 0x73D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xA1D PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x9E4 JUMP JUMPDEST PUSH3 0xA2C PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x9E4 JUMP JUMPDEST PUSH3 0xA3B PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x9E4 JUMP JUMPDEST PUSH3 0xA4A PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x9F5 JUMP JUMPDEST PUSH3 0xA59 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x9AC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA81 DUP3 PUSH3 0x646 JUMP JUMPDEST PUSH3 0xA8D DUP2 DUP6 PUSH3 0xA63 JUMP JUMPDEST SWAP4 POP PUSH3 0xA9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x4C4 JUMP JUMPDEST PUSH3 0xAAA DUP2 PUSH3 0x3F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xAD1 DUP2 DUP5 PUSH3 0xA74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB02 DUP3 MLOAD PUSH3 0x9DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB18 DUP3 PUSH3 0xAD9 JUMP JUMPDEST DUP3 PUSH3 0xB24 DUP5 PUSH3 0xAE4 JUMP JUMPDEST SWAP1 POP PUSH3 0xB31 DUP2 PUSH3 0xAF4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xB74 JUMPI PUSH3 0xB6F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x6DA JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x20FA PUSH3 0xBE1 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x4A6 ADD MSTORE PUSH1 0x0 PUSH2 0xEF4 ADD MSTORE PUSH1 0x0 PUSH2 0xEB9 ADD MSTORE PUSH1 0x0 PUSH2 0x1409 ADD MSTORE PUSH1 0x0 PUSH2 0x13E8 ADD MSTORE PUSH1 0x0 PUSH2 0xB63 ADD MSTORE PUSH1 0x0 PUSH2 0xBB9 ADD MSTORE PUSH1 0x0 PUSH2 0xBE2 ADD MSTORE PUSH2 0x20FA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x398 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x236 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x599 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3C3 SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EF SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x411 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x451 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH2 0x45E DUP2 DUP6 DUP6 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x47E PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH2 0x48B DUP6 DUP3 DUP6 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x496 DUP6 DUP6 DUP6 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4 PUSH2 0xB5F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x4EB DUP3 DUP3 PUSH2 0xC9D JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x54E PUSH2 0x548 PUSH2 0x9BD JUMP JUMPDEST DUP3 PUSH2 0xD1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x5AB PUSH1 0x0 PUSH2 0xDA1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH2 0x5B9 PUSH2 0x9BD JUMP JUMPDEST DUP4 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x5C9 DUP3 DUP3 PUSH2 0xD1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D8 DUP3 PUSH2 0xE67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x5F3 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0xEEB JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x64A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x710 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x750 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH2 0x75D DUP2 DUP6 DUP6 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x7AD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7DC DUP13 PUSH2 0xF26 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7F2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x815 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x825 DUP3 DUP8 DUP8 DUP8 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x899 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A4 DUP11 DUP11 DUP11 PUSH2 0x9C5 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x93F PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BA DUP2 PUSH2 0xDA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E3 DUP5 DUP5 PUSH2 0x8B0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA65 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA55 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA64 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xFC7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5A DUP4 DUP4 DUP4 PUSH2 0x119E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBDB JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC08 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC13 JUMP JUMPDEST PUSH2 0xC10 PUSH2 0x13C3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC1E PUSH2 0x9BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC3C PUSH2 0x689 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9B JUMPI PUSH2 0xC5F PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1B PUSH1 0x0 DUP4 DUP4 PUSH2 0x119E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD91 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9D DUP3 PUSH1 0x0 DUP4 PUSH2 0x119E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEE6 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1459 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF21 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1459 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF90 PUSH2 0xF8A PUSH2 0xB5F JUMP JUMPDEST DUP4 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xFA9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x154A JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xFB9 DUP3 DUP3 PUSH2 0x163E JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1039 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10AB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A2 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1198 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x127C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1273 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1359 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B6 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x143E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1476 JUMPI PUSH2 0x146F DUP4 PUSH2 0x17A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1503 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1482 SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14AE SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x158A JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x15AF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1625 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1634 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1652 JUMPI PUSH2 0x1651 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1665 JUMPI PUSH2 0x1664 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x179E JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1735 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172C SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x179D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x17AF DUP4 PUSH2 0x1816 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1800 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C8 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x18D2 DUP2 DUP6 PUSH2 0x1871 JUMP JUMPDEST SWAP4 POP PUSH2 0x18E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST PUSH2 0x18EB DUP2 PUSH2 0x18AC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1910 DUP2 DUP5 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1948 DUP3 PUSH2 0x191D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1958 DUP2 PUSH2 0x193D JUMP JUMPDEST DUP2 EQ PUSH2 0x1963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1975 DUP2 PUSH2 0x194F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198E DUP2 PUSH2 0x197B JUMP JUMPDEST DUP2 EQ PUSH2 0x1999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AB DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C8 JUMPI PUSH2 0x19C7 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E7 DUP6 DUP3 DUP7 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A06 DUP2 PUSH2 0x19F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A30 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A78 DUP7 DUP3 DUP8 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A89 DUP7 DUP3 DUP8 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A9A DUP7 DUP3 DUP8 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEE DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B09 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B25 JUMPI PUSH2 0x1B24 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B52 JUMPI PUSH2 0x1B51 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP5 DUP3 DUP6 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9E DUP2 PUSH2 0x1B69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BAD DUP2 PUSH2 0x193D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE8 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFA DUP4 DUP4 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP3 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x1C28 DUP2 DUP6 PUSH2 0x1BBE JUMP JUMPDEST SWAP4 POP PUSH2 0x1C33 DUP4 PUSH2 0x1BCF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C64 JUMPI DUP2 MLOAD PUSH2 0x1C4B DUP9 DUP3 PUSH2 0x1BEE JUMP JUMPDEST SWAP8 POP PUSH2 0x1C56 DUP4 PUSH2 0x1C06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C37 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1B95 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 DUP10 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CAC DUP2 DUP9 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP PUSH2 0x1CBB PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1CC8 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1CD5 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1AE5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1CE7 DUP2 DUP5 PUSH2 0x1C13 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D19 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D36 DUP2 PUSH2 0x1D10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D62 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D95 DUP11 DUP3 DUP12 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DA6 DUP11 DUP3 DUP12 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1DB7 DUP11 DUP3 DUP12 ADD PUSH2 0x199C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1DC8 DUP11 DUP3 DUP12 ADD PUSH2 0x199C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1DD9 DUP11 DUP3 DUP12 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1DEA DUP11 DUP3 DUP12 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1DFB DUP11 DUP3 DUP12 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E21 JUMPI PUSH2 0x1E20 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E2F DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E40 DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E91 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EA4 JUMPI PUSH2 0x1EA3 PUSH2 0x1E4A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1EEE PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x1EFB PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F08 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F15 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1F22 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1F2F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1A27 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F4F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F78 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1F92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A27 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD4 DUP3 PUSH2 0x197B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDF DUP4 PUSH2 0x197B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FF7 JUMPI PUSH2 0x1FF6 PUSH2 0x1F9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2012 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x201F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x202C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x2039 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x2046 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2065 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x2072 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xD5 0x2B PUSH26 0x69B780D48B19BF2887C9194AF3CAE820AA68D429FB62ACC6E07A CALLDATALOAD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"566:2008:22:-:0;;;1453:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1572:10;1634:5;1613:4:6;3328:431:18;;;;;;;;;;;;;;;;;1598:5:22;1605:7;1970:5:3;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:18;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:6;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1666:9:22::3;1655:20;;;;;;;;::::0;::::3;1453:229:::0;;;566:2008;;2914:340:14;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:18:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1708:286:14:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:15:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;7:75:24:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:86::-;2712:7;2752:4;2745:5;2741:16;2730:27;;2677:86;;;:::o;2769:118::-;2840:22;2856:5;2840:22;:::i;:::-;2833:5;2830:33;2820:61;;2877:1;2874;2867:12;2820:61;2769:118;:::o;2893:139::-;2948:5;2979:6;2973:13;2964:22;;2995:31;3020:5;2995:31;:::i;:::-;2893:139;;;;:::o;3038:1005::-;3144:6;3152;3160;3209:2;3197:9;3188:7;3184:23;3180:32;3177:119;;;3215:79;;:::i;:::-;3177:119;3356:1;3345:9;3341:17;3335:24;3386:18;3378:6;3375:30;3372:117;;;3408:79;;:::i;:::-;3372:117;3513:74;3579:7;3570:6;3559:9;3555:22;3513:74;:::i;:::-;3503:84;;3306:291;3657:2;3646:9;3642:18;3636:25;3688:18;3680:6;3677:30;3674:117;;;3710:79;;:::i;:::-;3674:117;3815:74;3881:7;3872:6;3861:9;3857:22;3815:74;:::i;:::-;3805:84;;3607:292;3938:2;3964:62;4018:7;4009:6;3998:9;3994:22;3964:62;:::i;:::-;3954:72;;3909:127;3038:1005;;;;;:::o;4049:99::-;4101:6;4135:5;4129:12;4119:22;;4049:99;;;:::o;4154:180::-;4202:77;4199:1;4192:88;4299:4;4296:1;4289:15;4323:4;4320:1;4313:15;4340:320;4384:6;4421:1;4415:4;4411:12;4401:22;;4468:1;4462:4;4458:12;4489:18;4479:81;;4545:4;4537:6;4533:17;4523:27;;4479:81;4607:2;4599:6;4596:14;4576:18;4573:38;4570:84;;4626:18;;:::i;:::-;4570:84;4391:269;4340:320;;;:::o;4666:141::-;4715:4;4738:3;4730:11;;4761:3;4758:1;4751:14;4795:4;4792:1;4782:18;4774:26;;4666:141;;;:::o;4813:93::-;4850:6;4897:2;4892;4885:5;4881:14;4877:23;4867:33;;4813:93;;;:::o;4912:107::-;4956:8;5006:5;5000:4;4996:16;4975:37;;4912:107;;;;:::o;5025:393::-;5094:6;5144:1;5132:10;5128:18;5167:97;5197:66;5186:9;5167:97;:::i;:::-;5285:39;5315:8;5304:9;5285:39;:::i;:::-;5273:51;;5357:4;5353:9;5346:5;5342:21;5333:30;;5406:4;5396:8;5392:19;5385:5;5382:30;5372:40;;5101:317;;5025:393;;;;;:::o;5424:77::-;5461:7;5490:5;5479:16;;5424:77;;;:::o;5507:60::-;5535:3;5556:5;5549:12;;5507:60;;;:::o;5573:142::-;5623:9;5656:53;5674:34;5683:24;5701:5;5683:24;:::i;:::-;5674:34;:::i;:::-;5656:53;:::i;:::-;5643:66;;5573:142;;;:::o;5721:75::-;5764:3;5785:5;5778:12;;5721:75;;;:::o;5802:269::-;5912:39;5943:7;5912:39;:::i;:::-;5973:91;6022:41;6046:16;6022:41;:::i;:::-;6014:6;6007:4;6001:11;5973:91;:::i;:::-;5967:4;5960:105;5878:193;5802:269;;;:::o;6077:73::-;6122:3;6077:73;:::o;6156:189::-;6233:32;;:::i;:::-;6274:65;6332:6;6324;6318:4;6274:65;:::i;:::-;6209:136;6156:189;;:::o;6351:186::-;6411:120;6428:3;6421:5;6418:14;6411:120;;;6482:39;6519:1;6512:5;6482:39;:::i;:::-;6455:1;6448:5;6444:13;6435:22;;6411:120;;;6351:186;;:::o;6543:543::-;6644:2;6639:3;6636:11;6633:446;;;6678:38;6710:5;6678:38;:::i;:::-;6762:29;6780:10;6762:29;:::i;:::-;6752:8;6748:44;6945:2;6933:10;6930:18;6927:49;;;6966:8;6951:23;;6927:49;6989:80;7045:22;7063:3;7045:22;:::i;:::-;7035:8;7031:37;7018:11;6989:80;:::i;:::-;6648:431;;6633:446;6543:543;;;:::o;7092:117::-;7146:8;7196:5;7190:4;7186:16;7165:37;;7092:117;;;;:::o;7215:169::-;7259:6;7292:51;7340:1;7336:6;7328:5;7325:1;7321:13;7292:51;:::i;:::-;7288:56;7373:4;7367;7363:15;7353:25;;7266:118;7215:169;;;;:::o;7389:295::-;7465:4;7611:29;7636:3;7630:4;7611:29;:::i;:::-;7603:37;;7673:3;7670:1;7666:11;7660:4;7657:21;7649:29;;7389:295;;;;:::o;7689:1395::-;7806:37;7839:3;7806:37;:::i;:::-;7908:18;7900:6;7897:30;7894:56;;;7930:18;;:::i;:::-;7894:56;7974:38;8006:4;8000:11;7974:38;:::i;:::-;8059:67;8119:6;8111;8105:4;8059:67;:::i;:::-;8153:1;8177:4;8164:17;;8209:2;8201:6;8198:14;8226:1;8221:618;;;;8883:1;8900:6;8897:77;;;8949:9;8944:3;8940:19;8934:26;8925:35;;8897:77;9000:67;9060:6;9053:5;9000:67;:::i;:::-;8994:4;8987:81;8856:222;8191:887;;8221:618;8273:4;8269:9;8261:6;8257:22;8307:37;8339:4;8307:37;:::i;:::-;8366:1;8380:208;8394:7;8391:1;8388:14;8380:208;;;8473:9;8468:3;8464:19;8458:26;8450:6;8443:42;8524:1;8516:6;8512:14;8502:24;;8571:2;8560:9;8556:18;8543:31;;8417:4;8414:1;8410:12;8405:17;;8380:208;;;8616:6;8607:7;8604:19;8601:179;;;8674:9;8669:3;8665:19;8659:26;8717:48;8759:4;8751:6;8747:17;8736:9;8717:48;:::i;:::-;8709:6;8702:64;8624:156;8601:179;8826:1;8822;8814:6;8810:14;8806:22;8800:4;8793:36;8228:611;;;8191:887;;7781:1303;;;7689:1395;;:::o;9090:126::-;9127:7;9167:42;9160:5;9156:54;9145:65;;9090:126;;;:::o;9222:96::-;9259:7;9288:24;9306:5;9288:24;:::i;:::-;9277:35;;9222:96;;;:::o;9324:118::-;9411:24;9429:5;9411:24;:::i;:::-;9406:3;9399:37;9324:118;;:::o;9448:222::-;9541:4;9579:2;9568:9;9564:18;9556:26;;9592:71;9660:1;9649:9;9645:17;9636:6;9592:71;:::i;:::-;9448:222;;;;:::o;9676:77::-;9713:7;9742:5;9731:16;;9676:77;;;:::o;9759:118::-;9846:24;9864:5;9846:24;:::i;:::-;9841:3;9834:37;9759:118;;:::o;9883:::-;9970:24;9988:5;9970:24;:::i;:::-;9965:3;9958:37;9883:118;;:::o;10007:664::-;10212:4;10250:3;10239:9;10235:19;10227:27;;10264:71;10332:1;10321:9;10317:17;10308:6;10264:71;:::i;:::-;10345:72;10413:2;10402:9;10398:18;10389:6;10345:72;:::i;:::-;10427;10495:2;10484:9;10480:18;10471:6;10427:72;:::i;:::-;10509;10577:2;10566:9;10562:18;10553:6;10509:72;:::i;:::-;10591:73;10659:3;10648:9;10644:19;10635:6;10591:73;:::i;:::-;10007:664;;;;;;;;:::o;10677:169::-;10761:11;10795:6;10790:3;10783:19;10835:4;10830:3;10826:14;10811:29;;10677:169;;;;:::o;10852:377::-;10940:3;10968:39;11001:5;10968:39;:::i;:::-;11023:71;11087:6;11082:3;11023:71;:::i;:::-;11016:78;;11103:65;11161:6;11156:3;11149:4;11142:5;11138:16;11103:65;:::i;:::-;11193:29;11215:6;11193:29;:::i;:::-;11188:3;11184:39;11177:46;;10944:285;10852:377;;;;:::o;11235:313::-;11348:4;11386:2;11375:9;11371:18;11363:26;;11435:9;11429:4;11425:20;11421:1;11410:9;11406:17;11399:47;11463:78;11536:4;11527:6;11463:78;:::i;:::-;11455:86;;11235:313;;;;:::o;11554:98::-;11605:6;11639:5;11633:12;11623:22;;11554:98;;;:::o;11658:116::-;11709:4;11732:3;11724:11;;11762:4;11757:3;11753:14;11745:22;;11658:116;;;:::o;11780:154::-;11823:11;11859:29;11883:3;11877:10;11859:29;:::i;:::-;11922:5;11898:29;;11835:99;11780:154;;;:::o;11940:594::-;12024:5;12055:38;12087:5;12055:38;:::i;:::-;12118:5;12145:40;12179:5;12145:40;:::i;:::-;12133:52;;12204:35;12230:8;12204:35;:::i;:::-;12195:44;;12263:2;12255:6;12252:14;12249:278;;;12334:169;12419:66;12389:6;12385:2;12381:15;12378:1;12374:23;12334:169;:::i;:::-;12311:5;12290:227;12281:236;;12249:278;12030:504;;11940:594;;;:::o;566:2008:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1101":{"entryPoint":1226,"id":1101,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3018":{"entryPoint":3760,"id":3018,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3030":{"entryPoint":3819,"id":3030,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":2501,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":4039,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_2948":{"entryPoint":5059,"id":2948,"parameterSlots":0,"returnSlots":1},"@_burn_697":{"entryPoint":3359,"id":697,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3094,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_2927":{"entryPoint":2911,"id":2927,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2964":{"entryPoint":3965,"id":2964,"parameterSlots":1,"returnSlots":1},"@_mint_664":{"entryPoint":3229,"id":664,"parameterSlots":2,"returnSlots":0},"@_msgSender_1719":{"entryPoint":2493,"id":1719,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":2519,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_2803":{"entryPoint":5694,"id":2803,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3489,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":2667,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":4510,"id":631,"parameterSlots":3,"returnSlots":0},"@_useNonce_1779":{"entryPoint":3878,"id":1779,"parameterSlots":1,"returnSlots":1},"@allowance_451":{"entryPoint":2224,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1094,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":1361,"id":410,"parameterSlots":1,"returnSlots":1},"@burnFrom_947":{"entryPoint":1453,"id":947,"parameterSlots":2,"returnSlots":0},"@burn_926":{"entryPoint":1341,"id":926,"parameterSlots":1,"returnSlots":0},"@byteLength_1992":{"entryPoint":6166,"id":1992,"parameterSlots":1,"returnSlots":1},"@decimals_4374":{"entryPoint":1186,"id":4374,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3006":{"entryPoint":1503,"id":3006,"parameterSlots":0,"returnSlots":7},"@mint_4364":{"entryPoint":1241,"id":4364,"parameterSlots":2,"returnSlots":0},"@name_370":{"entryPoint":948,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1091":{"entryPoint":1485,"id":1091,"parameterSlots":1,"returnSlots":1},"@nonces_1764":{"entryPoint":3687,"id":1764,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1673,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1074":{"entryPoint":1896,"id":1074,"parameterSlots":7,"returnSlots":0},"@recover_2754":{"entryPoint":3991,"id":2754,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1433,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_379":{"entryPoint":1715,"id":379,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2059":{"entryPoint":5209,"id":2059,"parameterSlots":2,"returnSlots":1},"@toString_1960":{"entryPoint":6050,"id":1960,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3104":{"entryPoint":5385,"id":3104,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":1129,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":1139,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2359,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":1861,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_2718":{"entryPoint":5450,"id":2718,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":6502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6972,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7690,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6737,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7528,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6577,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":6927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7076,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6653,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":7061,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6885,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7135,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6695,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6833,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":7994,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8035,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7281,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7897,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":8189,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8272,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6848,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7119,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7091,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6246,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7174,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7102,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6257,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8137,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6461,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6641,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":7017,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6875,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6429,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6523,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6820,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6274,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7801,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8090,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8341,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7754,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7850,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6424,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6316,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6479,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7484,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6533,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7440,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15716:24","nodeType":"YulBlock","src":"0:15716:24","statements":[{"body":{"nativeSrc":"66:40:24","nodeType":"YulBlock","src":"66:40:24","statements":[{"nativeSrc":"77:22:24","nodeType":"YulAssignment","src":"77:22:24","value":{"arguments":[{"name":"value","nativeSrc":"93:5:24","nodeType":"YulIdentifier","src":"93:5:24"}],"functionName":{"name":"mload","nativeSrc":"87:5:24","nodeType":"YulIdentifier","src":"87:5:24"},"nativeSrc":"87:12:24","nodeType":"YulFunctionCall","src":"87:12:24"},"variableNames":[{"name":"length","nativeSrc":"77:6:24","nodeType":"YulIdentifier","src":"77:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:24","nodeType":"YulTypedName","src":"49:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:24","nodeType":"YulTypedName","src":"59:6:24","type":""}],"src":"7:99:24"},{"body":{"nativeSrc":"208:73:24","nodeType":"YulBlock","src":"208:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:24","nodeType":"YulIdentifier","src":"225:3:24"},{"name":"length","nativeSrc":"230:6:24","nodeType":"YulIdentifier","src":"230:6:24"}],"functionName":{"name":"mstore","nativeSrc":"218:6:24","nodeType":"YulIdentifier","src":"218:6:24"},"nativeSrc":"218:19:24","nodeType":"YulFunctionCall","src":"218:19:24"},"nativeSrc":"218:19:24","nodeType":"YulExpressionStatement","src":"218:19:24"},{"nativeSrc":"246:29:24","nodeType":"YulAssignment","src":"246:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:24","nodeType":"YulIdentifier","src":"265:3:24"},{"kind":"number","nativeSrc":"270:4:24","nodeType":"YulLiteral","src":"270:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:24","nodeType":"YulIdentifier","src":"261:3:24"},"nativeSrc":"261:14:24","nodeType":"YulFunctionCall","src":"261:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:24","nodeType":"YulIdentifier","src":"246:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:24","nodeType":"YulTypedName","src":"180:3:24","type":""},{"name":"length","nativeSrc":"185:6:24","nodeType":"YulTypedName","src":"185:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:24","nodeType":"YulTypedName","src":"196:11:24","type":""}],"src":"112:169:24"},{"body":{"nativeSrc":"349:184:24","nodeType":"YulBlock","src":"349:184:24","statements":[{"nativeSrc":"359:10:24","nodeType":"YulVariableDeclaration","src":"359:10:24","value":{"kind":"number","nativeSrc":"368:1:24","nodeType":"YulLiteral","src":"368:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:24","nodeType":"YulTypedName","src":"363:1:24","type":""}]},{"body":{"nativeSrc":"428:63:24","nodeType":"YulBlock","src":"428:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:24","nodeType":"YulIdentifier","src":"453:3:24"},{"name":"i","nativeSrc":"458:1:24","nodeType":"YulIdentifier","src":"458:1:24"}],"functionName":{"name":"add","nativeSrc":"449:3:24","nodeType":"YulIdentifier","src":"449:3:24"},"nativeSrc":"449:11:24","nodeType":"YulFunctionCall","src":"449:11:24"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:24","nodeType":"YulIdentifier","src":"472:3:24"},{"name":"i","nativeSrc":"477:1:24","nodeType":"YulIdentifier","src":"477:1:24"}],"functionName":{"name":"add","nativeSrc":"468:3:24","nodeType":"YulIdentifier","src":"468:3:24"},"nativeSrc":"468:11:24","nodeType":"YulFunctionCall","src":"468:11:24"}],"functionName":{"name":"mload","nativeSrc":"462:5:24","nodeType":"YulIdentifier","src":"462:5:24"},"nativeSrc":"462:18:24","nodeType":"YulFunctionCall","src":"462:18:24"}],"functionName":{"name":"mstore","nativeSrc":"442:6:24","nodeType":"YulIdentifier","src":"442:6:24"},"nativeSrc":"442:39:24","nodeType":"YulFunctionCall","src":"442:39:24"},"nativeSrc":"442:39:24","nodeType":"YulExpressionStatement","src":"442:39:24"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:24","nodeType":"YulIdentifier","src":"389:1:24"},{"name":"length","nativeSrc":"392:6:24","nodeType":"YulIdentifier","src":"392:6:24"}],"functionName":{"name":"lt","nativeSrc":"386:2:24","nodeType":"YulIdentifier","src":"386:2:24"},"nativeSrc":"386:13:24","nodeType":"YulFunctionCall","src":"386:13:24"},"nativeSrc":"378:113:24","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:24","nodeType":"YulBlock","src":"400:19:24","statements":[{"nativeSrc":"402:15:24","nodeType":"YulAssignment","src":"402:15:24","value":{"arguments":[{"name":"i","nativeSrc":"411:1:24","nodeType":"YulIdentifier","src":"411:1:24"},{"kind":"number","nativeSrc":"414:2:24","nodeType":"YulLiteral","src":"414:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:24","nodeType":"YulIdentifier","src":"407:3:24"},"nativeSrc":"407:10:24","nodeType":"YulFunctionCall","src":"407:10:24"},"variableNames":[{"name":"i","nativeSrc":"402:1:24","nodeType":"YulIdentifier","src":"402:1:24"}]}]},"pre":{"nativeSrc":"382:3:24","nodeType":"YulBlock","src":"382:3:24","statements":[]},"src":"378:113:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:24","nodeType":"YulIdentifier","src":"511:3:24"},{"name":"length","nativeSrc":"516:6:24","nodeType":"YulIdentifier","src":"516:6:24"}],"functionName":{"name":"add","nativeSrc":"507:3:24","nodeType":"YulIdentifier","src":"507:3:24"},"nativeSrc":"507:16:24","nodeType":"YulFunctionCall","src":"507:16:24"},{"kind":"number","nativeSrc":"525:1:24","nodeType":"YulLiteral","src":"525:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:24","nodeType":"YulIdentifier","src":"500:6:24"},"nativeSrc":"500:27:24","nodeType":"YulFunctionCall","src":"500:27:24"},"nativeSrc":"500:27:24","nodeType":"YulExpressionStatement","src":"500:27:24"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:24","nodeType":"YulTypedName","src":"331:3:24","type":""},{"name":"dst","nativeSrc":"336:3:24","nodeType":"YulTypedName","src":"336:3:24","type":""},{"name":"length","nativeSrc":"341:6:24","nodeType":"YulTypedName","src":"341:6:24","type":""}],"src":"287:246:24"},{"body":{"nativeSrc":"587:54:24","nodeType":"YulBlock","src":"587:54:24","statements":[{"nativeSrc":"597:38:24","nodeType":"YulAssignment","src":"597:38:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:24","nodeType":"YulIdentifier","src":"615:5:24"},{"kind":"number","nativeSrc":"622:2:24","nodeType":"YulLiteral","src":"622:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:24","nodeType":"YulIdentifier","src":"611:3:24"},"nativeSrc":"611:14:24","nodeType":"YulFunctionCall","src":"611:14:24"},{"arguments":[{"kind":"number","nativeSrc":"631:2:24","nodeType":"YulLiteral","src":"631:2:24","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:24","nodeType":"YulIdentifier","src":"627:3:24"},"nativeSrc":"627:7:24","nodeType":"YulFunctionCall","src":"627:7:24"}],"functionName":{"name":"and","nativeSrc":"607:3:24","nodeType":"YulIdentifier","src":"607:3:24"},"nativeSrc":"607:28:24","nodeType":"YulFunctionCall","src":"607:28:24"},"variableNames":[{"name":"result","nativeSrc":"597:6:24","nodeType":"YulIdentifier","src":"597:6:24"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:24","nodeType":"YulTypedName","src":"570:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:24","nodeType":"YulTypedName","src":"580:6:24","type":""}],"src":"539:102:24"},{"body":{"nativeSrc":"739:285:24","nodeType":"YulBlock","src":"739:285:24","statements":[{"nativeSrc":"749:53:24","nodeType":"YulVariableDeclaration","src":"749:53:24","value":{"arguments":[{"name":"value","nativeSrc":"796:5:24","nodeType":"YulIdentifier","src":"796:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:24","nodeType":"YulIdentifier","src":"763:32:24"},"nativeSrc":"763:39:24","nodeType":"YulFunctionCall","src":"763:39:24"},"variables":[{"name":"length","nativeSrc":"753:6:24","nodeType":"YulTypedName","src":"753:6:24","type":""}]},{"nativeSrc":"811:78:24","nodeType":"YulAssignment","src":"811:78:24","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:24","nodeType":"YulIdentifier","src":"877:3:24"},{"name":"length","nativeSrc":"882:6:24","nodeType":"YulIdentifier","src":"882:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:24","nodeType":"YulIdentifier","src":"818:58:24"},"nativeSrc":"818:71:24","nodeType":"YulFunctionCall","src":"818:71:24"},"variableNames":[{"name":"pos","nativeSrc":"811:3:24","nodeType":"YulIdentifier","src":"811:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:24","nodeType":"YulIdentifier","src":"937:5:24"},{"kind":"number","nativeSrc":"944:4:24","nodeType":"YulLiteral","src":"944:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:24","nodeType":"YulIdentifier","src":"933:3:24"},"nativeSrc":"933:16:24","nodeType":"YulFunctionCall","src":"933:16:24"},{"name":"pos","nativeSrc":"951:3:24","nodeType":"YulIdentifier","src":"951:3:24"},{"name":"length","nativeSrc":"956:6:24","nodeType":"YulIdentifier","src":"956:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:24","nodeType":"YulIdentifier","src":"898:34:24"},"nativeSrc":"898:65:24","nodeType":"YulFunctionCall","src":"898:65:24"},"nativeSrc":"898:65:24","nodeType":"YulExpressionStatement","src":"898:65:24"},{"nativeSrc":"972:46:24","nodeType":"YulAssignment","src":"972:46:24","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:24","nodeType":"YulIdentifier","src":"983:3:24"},{"arguments":[{"name":"length","nativeSrc":"1010:6:24","nodeType":"YulIdentifier","src":"1010:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:24","nodeType":"YulIdentifier","src":"988:21:24"},"nativeSrc":"988:29:24","nodeType":"YulFunctionCall","src":"988:29:24"}],"functionName":{"name":"add","nativeSrc":"979:3:24","nodeType":"YulIdentifier","src":"979:3:24"},"nativeSrc":"979:39:24","nodeType":"YulFunctionCall","src":"979:39:24"},"variableNames":[{"name":"end","nativeSrc":"972:3:24","nodeType":"YulIdentifier","src":"972:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:24","nodeType":"YulTypedName","src":"720:5:24","type":""},{"name":"pos","nativeSrc":"727:3:24","nodeType":"YulTypedName","src":"727:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:24","nodeType":"YulTypedName","src":"735:3:24","type":""}],"src":"647:377:24"},{"body":{"nativeSrc":"1148:195:24","nodeType":"YulBlock","src":"1148:195:24","statements":[{"nativeSrc":"1158:26:24","nodeType":"YulAssignment","src":"1158:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:24","nodeType":"YulIdentifier","src":"1170:9:24"},{"kind":"number","nativeSrc":"1181:2:24","nodeType":"YulLiteral","src":"1181:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:24","nodeType":"YulIdentifier","src":"1166:3:24"},"nativeSrc":"1166:18:24","nodeType":"YulFunctionCall","src":"1166:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:24","nodeType":"YulIdentifier","src":"1158:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:24","nodeType":"YulIdentifier","src":"1205:9:24"},{"kind":"number","nativeSrc":"1216:1:24","nodeType":"YulLiteral","src":"1216:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:24","nodeType":"YulIdentifier","src":"1201:3:24"},"nativeSrc":"1201:17:24","nodeType":"YulFunctionCall","src":"1201:17:24"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:24","nodeType":"YulIdentifier","src":"1224:4:24"},{"name":"headStart","nativeSrc":"1230:9:24","nodeType":"YulIdentifier","src":"1230:9:24"}],"functionName":{"name":"sub","nativeSrc":"1220:3:24","nodeType":"YulIdentifier","src":"1220:3:24"},"nativeSrc":"1220:20:24","nodeType":"YulFunctionCall","src":"1220:20:24"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:24","nodeType":"YulIdentifier","src":"1194:6:24"},"nativeSrc":"1194:47:24","nodeType":"YulFunctionCall","src":"1194:47:24"},"nativeSrc":"1194:47:24","nodeType":"YulExpressionStatement","src":"1194:47:24"},{"nativeSrc":"1250:86:24","nodeType":"YulAssignment","src":"1250:86:24","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:24","nodeType":"YulIdentifier","src":"1322:6:24"},{"name":"tail","nativeSrc":"1331:4:24","nodeType":"YulIdentifier","src":"1331:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:24","nodeType":"YulIdentifier","src":"1258:63:24"},"nativeSrc":"1258:78:24","nodeType":"YulFunctionCall","src":"1258:78:24"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:24","nodeType":"YulIdentifier","src":"1250:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:24","nodeType":"YulTypedName","src":"1120:9:24","type":""},{"name":"value0","nativeSrc":"1132:6:24","nodeType":"YulTypedName","src":"1132:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:24","nodeType":"YulTypedName","src":"1143:4:24","type":""}],"src":"1030:313:24"},{"body":{"nativeSrc":"1389:35:24","nodeType":"YulBlock","src":"1389:35:24","statements":[{"nativeSrc":"1399:19:24","nodeType":"YulAssignment","src":"1399:19:24","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:24","nodeType":"YulLiteral","src":"1415:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:24","nodeType":"YulIdentifier","src":"1409:5:24"},"nativeSrc":"1409:9:24","nodeType":"YulFunctionCall","src":"1409:9:24"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:24","nodeType":"YulIdentifier","src":"1399:6:24"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:24","nodeType":"YulTypedName","src":"1382:6:24","type":""}],"src":"1349:75:24"},{"body":{"nativeSrc":"1519:28:24","nodeType":"YulBlock","src":"1519:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:24","nodeType":"YulLiteral","src":"1536:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:24","nodeType":"YulLiteral","src":"1539:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:24","nodeType":"YulIdentifier","src":"1529:6:24"},"nativeSrc":"1529:12:24","nodeType":"YulFunctionCall","src":"1529:12:24"},"nativeSrc":"1529:12:24","nodeType":"YulExpressionStatement","src":"1529:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:24","nodeType":"YulFunctionDefinition","src":"1430:117:24"},{"body":{"nativeSrc":"1642:28:24","nodeType":"YulBlock","src":"1642:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:24","nodeType":"YulLiteral","src":"1659:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:24","nodeType":"YulLiteral","src":"1662:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:24","nodeType":"YulIdentifier","src":"1652:6:24"},"nativeSrc":"1652:12:24","nodeType":"YulFunctionCall","src":"1652:12:24"},"nativeSrc":"1652:12:24","nodeType":"YulExpressionStatement","src":"1652:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:24","nodeType":"YulFunctionDefinition","src":"1553:117:24"},{"body":{"nativeSrc":"1721:81:24","nodeType":"YulBlock","src":"1721:81:24","statements":[{"nativeSrc":"1731:65:24","nodeType":"YulAssignment","src":"1731:65:24","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:24","nodeType":"YulIdentifier","src":"1746:5:24"},{"kind":"number","nativeSrc":"1753:42:24","nodeType":"YulLiteral","src":"1753:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:24","nodeType":"YulIdentifier","src":"1742:3:24"},"nativeSrc":"1742:54:24","nodeType":"YulFunctionCall","src":"1742:54:24"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:24","nodeType":"YulIdentifier","src":"1731:7:24"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:24","nodeType":"YulTypedName","src":"1703:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:24","nodeType":"YulTypedName","src":"1713:7:24","type":""}],"src":"1676:126:24"},{"body":{"nativeSrc":"1853:51:24","nodeType":"YulBlock","src":"1853:51:24","statements":[{"nativeSrc":"1863:35:24","nodeType":"YulAssignment","src":"1863:35:24","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:24","nodeType":"YulIdentifier","src":"1892:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:24","nodeType":"YulIdentifier","src":"1874:17:24"},"nativeSrc":"1874:24:24","nodeType":"YulFunctionCall","src":"1874:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:24","nodeType":"YulIdentifier","src":"1863:7:24"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:24","nodeType":"YulTypedName","src":"1835:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:24","nodeType":"YulTypedName","src":"1845:7:24","type":""}],"src":"1808:96:24"},{"body":{"nativeSrc":"1953:79:24","nodeType":"YulBlock","src":"1953:79:24","statements":[{"body":{"nativeSrc":"2010:16:24","nodeType":"YulBlock","src":"2010:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:24","nodeType":"YulLiteral","src":"2019:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:24","nodeType":"YulLiteral","src":"2022:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:24","nodeType":"YulIdentifier","src":"2012:6:24"},"nativeSrc":"2012:12:24","nodeType":"YulFunctionCall","src":"2012:12:24"},"nativeSrc":"2012:12:24","nodeType":"YulExpressionStatement","src":"2012:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:24","nodeType":"YulIdentifier","src":"1976:5:24"},{"arguments":[{"name":"value","nativeSrc":"2001:5:24","nodeType":"YulIdentifier","src":"2001:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:24","nodeType":"YulIdentifier","src":"1983:17:24"},"nativeSrc":"1983:24:24","nodeType":"YulFunctionCall","src":"1983:24:24"}],"functionName":{"name":"eq","nativeSrc":"1973:2:24","nodeType":"YulIdentifier","src":"1973:2:24"},"nativeSrc":"1973:35:24","nodeType":"YulFunctionCall","src":"1973:35:24"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:24","nodeType":"YulIdentifier","src":"1966:6:24"},"nativeSrc":"1966:43:24","nodeType":"YulFunctionCall","src":"1966:43:24"},"nativeSrc":"1963:63:24","nodeType":"YulIf","src":"1963:63:24"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:24","nodeType":"YulTypedName","src":"1946:5:24","type":""}],"src":"1910:122:24"},{"body":{"nativeSrc":"2090:87:24","nodeType":"YulBlock","src":"2090:87:24","statements":[{"nativeSrc":"2100:29:24","nodeType":"YulAssignment","src":"2100:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:24","nodeType":"YulIdentifier","src":"2122:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:24","nodeType":"YulIdentifier","src":"2109:12:24"},"nativeSrc":"2109:20:24","nodeType":"YulFunctionCall","src":"2109:20:24"},"variableNames":[{"name":"value","nativeSrc":"2100:5:24","nodeType":"YulIdentifier","src":"2100:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:24","nodeType":"YulIdentifier","src":"2165:5:24"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:24","nodeType":"YulIdentifier","src":"2138:26:24"},"nativeSrc":"2138:33:24","nodeType":"YulFunctionCall","src":"2138:33:24"},"nativeSrc":"2138:33:24","nodeType":"YulExpressionStatement","src":"2138:33:24"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:24","nodeType":"YulTypedName","src":"2068:6:24","type":""},{"name":"end","nativeSrc":"2076:3:24","nodeType":"YulTypedName","src":"2076:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:24","nodeType":"YulTypedName","src":"2084:5:24","type":""}],"src":"2038:139:24"},{"body":{"nativeSrc":"2228:32:24","nodeType":"YulBlock","src":"2228:32:24","statements":[{"nativeSrc":"2238:16:24","nodeType":"YulAssignment","src":"2238:16:24","value":{"name":"value","nativeSrc":"2249:5:24","nodeType":"YulIdentifier","src":"2249:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:24","nodeType":"YulIdentifier","src":"2238:7:24"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:24","nodeType":"YulTypedName","src":"2210:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:24","nodeType":"YulTypedName","src":"2220:7:24","type":""}],"src":"2183:77:24"},{"body":{"nativeSrc":"2309:79:24","nodeType":"YulBlock","src":"2309:79:24","statements":[{"body":{"nativeSrc":"2366:16:24","nodeType":"YulBlock","src":"2366:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:24","nodeType":"YulLiteral","src":"2375:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:24","nodeType":"YulLiteral","src":"2378:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:24","nodeType":"YulIdentifier","src":"2368:6:24"},"nativeSrc":"2368:12:24","nodeType":"YulFunctionCall","src":"2368:12:24"},"nativeSrc":"2368:12:24","nodeType":"YulExpressionStatement","src":"2368:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:24","nodeType":"YulIdentifier","src":"2332:5:24"},{"arguments":[{"name":"value","nativeSrc":"2357:5:24","nodeType":"YulIdentifier","src":"2357:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:24","nodeType":"YulIdentifier","src":"2339:17:24"},"nativeSrc":"2339:24:24","nodeType":"YulFunctionCall","src":"2339:24:24"}],"functionName":{"name":"eq","nativeSrc":"2329:2:24","nodeType":"YulIdentifier","src":"2329:2:24"},"nativeSrc":"2329:35:24","nodeType":"YulFunctionCall","src":"2329:35:24"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:24","nodeType":"YulIdentifier","src":"2322:6:24"},"nativeSrc":"2322:43:24","nodeType":"YulFunctionCall","src":"2322:43:24"},"nativeSrc":"2319:63:24","nodeType":"YulIf","src":"2319:63:24"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:24","nodeType":"YulTypedName","src":"2302:5:24","type":""}],"src":"2266:122:24"},{"body":{"nativeSrc":"2446:87:24","nodeType":"YulBlock","src":"2446:87:24","statements":[{"nativeSrc":"2456:29:24","nodeType":"YulAssignment","src":"2456:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:24","nodeType":"YulIdentifier","src":"2478:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:24","nodeType":"YulIdentifier","src":"2465:12:24"},"nativeSrc":"2465:20:24","nodeType":"YulFunctionCall","src":"2465:20:24"},"variableNames":[{"name":"value","nativeSrc":"2456:5:24","nodeType":"YulIdentifier","src":"2456:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:24","nodeType":"YulIdentifier","src":"2521:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:24","nodeType":"YulIdentifier","src":"2494:26:24"},"nativeSrc":"2494:33:24","nodeType":"YulFunctionCall","src":"2494:33:24"},"nativeSrc":"2494:33:24","nodeType":"YulExpressionStatement","src":"2494:33:24"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:24","nodeType":"YulTypedName","src":"2424:6:24","type":""},{"name":"end","nativeSrc":"2432:3:24","nodeType":"YulTypedName","src":"2432:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:24","nodeType":"YulTypedName","src":"2440:5:24","type":""}],"src":"2394:139:24"},{"body":{"nativeSrc":"2622:391:24","nodeType":"YulBlock","src":"2622:391:24","statements":[{"body":{"nativeSrc":"2668:83:24","nodeType":"YulBlock","src":"2668:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:24","nodeType":"YulIdentifier","src":"2670:77:24"},"nativeSrc":"2670:79:24","nodeType":"YulFunctionCall","src":"2670:79:24"},"nativeSrc":"2670:79:24","nodeType":"YulExpressionStatement","src":"2670:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:24","nodeType":"YulIdentifier","src":"2643:7:24"},{"name":"headStart","nativeSrc":"2652:9:24","nodeType":"YulIdentifier","src":"2652:9:24"}],"functionName":{"name":"sub","nativeSrc":"2639:3:24","nodeType":"YulIdentifier","src":"2639:3:24"},"nativeSrc":"2639:23:24","nodeType":"YulFunctionCall","src":"2639:23:24"},{"kind":"number","nativeSrc":"2664:2:24","nodeType":"YulLiteral","src":"2664:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:24","nodeType":"YulIdentifier","src":"2635:3:24"},"nativeSrc":"2635:32:24","nodeType":"YulFunctionCall","src":"2635:32:24"},"nativeSrc":"2632:119:24","nodeType":"YulIf","src":"2632:119:24"},{"nativeSrc":"2761:117:24","nodeType":"YulBlock","src":"2761:117:24","statements":[{"nativeSrc":"2776:15:24","nodeType":"YulVariableDeclaration","src":"2776:15:24","value":{"kind":"number","nativeSrc":"2790:1:24","nodeType":"YulLiteral","src":"2790:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:24","nodeType":"YulTypedName","src":"2780:6:24","type":""}]},{"nativeSrc":"2805:63:24","nodeType":"YulAssignment","src":"2805:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:24","nodeType":"YulIdentifier","src":"2840:9:24"},{"name":"offset","nativeSrc":"2851:6:24","nodeType":"YulIdentifier","src":"2851:6:24"}],"functionName":{"name":"add","nativeSrc":"2836:3:24","nodeType":"YulIdentifier","src":"2836:3:24"},"nativeSrc":"2836:22:24","nodeType":"YulFunctionCall","src":"2836:22:24"},{"name":"dataEnd","nativeSrc":"2860:7:24","nodeType":"YulIdentifier","src":"2860:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:24","nodeType":"YulIdentifier","src":"2815:20:24"},"nativeSrc":"2815:53:24","nodeType":"YulFunctionCall","src":"2815:53:24"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:24","nodeType":"YulIdentifier","src":"2805:6:24"}]}]},{"nativeSrc":"2888:118:24","nodeType":"YulBlock","src":"2888:118:24","statements":[{"nativeSrc":"2903:16:24","nodeType":"YulVariableDeclaration","src":"2903:16:24","value":{"kind":"number","nativeSrc":"2917:2:24","nodeType":"YulLiteral","src":"2917:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:24","nodeType":"YulTypedName","src":"2907:6:24","type":""}]},{"nativeSrc":"2933:63:24","nodeType":"YulAssignment","src":"2933:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:24","nodeType":"YulIdentifier","src":"2968:9:24"},{"name":"offset","nativeSrc":"2979:6:24","nodeType":"YulIdentifier","src":"2979:6:24"}],"functionName":{"name":"add","nativeSrc":"2964:3:24","nodeType":"YulIdentifier","src":"2964:3:24"},"nativeSrc":"2964:22:24","nodeType":"YulFunctionCall","src":"2964:22:24"},{"name":"dataEnd","nativeSrc":"2988:7:24","nodeType":"YulIdentifier","src":"2988:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:24","nodeType":"YulIdentifier","src":"2943:20:24"},"nativeSrc":"2943:53:24","nodeType":"YulFunctionCall","src":"2943:53:24"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:24","nodeType":"YulIdentifier","src":"2933:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:24","nodeType":"YulTypedName","src":"2584:9:24","type":""},{"name":"dataEnd","nativeSrc":"2595:7:24","nodeType":"YulTypedName","src":"2595:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:24","nodeType":"YulTypedName","src":"2607:6:24","type":""},{"name":"value1","nativeSrc":"2615:6:24","nodeType":"YulTypedName","src":"2615:6:24","type":""}],"src":"2539:474:24"},{"body":{"nativeSrc":"3061:48:24","nodeType":"YulBlock","src":"3061:48:24","statements":[{"nativeSrc":"3071:32:24","nodeType":"YulAssignment","src":"3071:32:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:24","nodeType":"YulIdentifier","src":"3096:5:24"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:24","nodeType":"YulIdentifier","src":"3089:6:24"},"nativeSrc":"3089:13:24","nodeType":"YulFunctionCall","src":"3089:13:24"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:24","nodeType":"YulIdentifier","src":"3082:6:24"},"nativeSrc":"3082:21:24","nodeType":"YulFunctionCall","src":"3082:21:24"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:24","nodeType":"YulIdentifier","src":"3071:7:24"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:24","nodeType":"YulTypedName","src":"3043:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:24","nodeType":"YulTypedName","src":"3053:7:24","type":""}],"src":"3019:90:24"},{"body":{"nativeSrc":"3174:50:24","nodeType":"YulBlock","src":"3174:50:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:24","nodeType":"YulIdentifier","src":"3191:3:24"},{"arguments":[{"name":"value","nativeSrc":"3211:5:24","nodeType":"YulIdentifier","src":"3211:5:24"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:24","nodeType":"YulIdentifier","src":"3196:14:24"},"nativeSrc":"3196:21:24","nodeType":"YulFunctionCall","src":"3196:21:24"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:24","nodeType":"YulIdentifier","src":"3184:6:24"},"nativeSrc":"3184:34:24","nodeType":"YulFunctionCall","src":"3184:34:24"},"nativeSrc":"3184:34:24","nodeType":"YulExpressionStatement","src":"3184:34:24"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:24","nodeType":"YulTypedName","src":"3162:5:24","type":""},{"name":"pos","nativeSrc":"3169:3:24","nodeType":"YulTypedName","src":"3169:3:24","type":""}],"src":"3115:109:24"},{"body":{"nativeSrc":"3322:118:24","nodeType":"YulBlock","src":"3322:118:24","statements":[{"nativeSrc":"3332:26:24","nodeType":"YulAssignment","src":"3332:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:24","nodeType":"YulIdentifier","src":"3344:9:24"},{"kind":"number","nativeSrc":"3355:2:24","nodeType":"YulLiteral","src":"3355:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:24","nodeType":"YulIdentifier","src":"3340:3:24"},"nativeSrc":"3340:18:24","nodeType":"YulFunctionCall","src":"3340:18:24"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:24","nodeType":"YulIdentifier","src":"3332:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:24","nodeType":"YulIdentifier","src":"3406:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:24","nodeType":"YulIdentifier","src":"3419:9:24"},{"kind":"number","nativeSrc":"3430:1:24","nodeType":"YulLiteral","src":"3430:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:24","nodeType":"YulIdentifier","src":"3415:3:24"},"nativeSrc":"3415:17:24","nodeType":"YulFunctionCall","src":"3415:17:24"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:24","nodeType":"YulIdentifier","src":"3368:37:24"},"nativeSrc":"3368:65:24","nodeType":"YulFunctionCall","src":"3368:65:24"},"nativeSrc":"3368:65:24","nodeType":"YulExpressionStatement","src":"3368:65:24"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:24","nodeType":"YulTypedName","src":"3294:9:24","type":""},{"name":"value0","nativeSrc":"3306:6:24","nodeType":"YulTypedName","src":"3306:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:24","nodeType":"YulTypedName","src":"3317:4:24","type":""}],"src":"3230:210:24"},{"body":{"nativeSrc":"3511:53:24","nodeType":"YulBlock","src":"3511:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:24","nodeType":"YulIdentifier","src":"3528:3:24"},{"arguments":[{"name":"value","nativeSrc":"3551:5:24","nodeType":"YulIdentifier","src":"3551:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:24","nodeType":"YulIdentifier","src":"3533:17:24"},"nativeSrc":"3533:24:24","nodeType":"YulFunctionCall","src":"3533:24:24"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:24","nodeType":"YulIdentifier","src":"3521:6:24"},"nativeSrc":"3521:37:24","nodeType":"YulFunctionCall","src":"3521:37:24"},"nativeSrc":"3521:37:24","nodeType":"YulExpressionStatement","src":"3521:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:24","nodeType":"YulTypedName","src":"3499:5:24","type":""},{"name":"pos","nativeSrc":"3506:3:24","nodeType":"YulTypedName","src":"3506:3:24","type":""}],"src":"3446:118:24"},{"body":{"nativeSrc":"3668:124:24","nodeType":"YulBlock","src":"3668:124:24","statements":[{"nativeSrc":"3678:26:24","nodeType":"YulAssignment","src":"3678:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:24","nodeType":"YulIdentifier","src":"3690:9:24"},{"kind":"number","nativeSrc":"3701:2:24","nodeType":"YulLiteral","src":"3701:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:24","nodeType":"YulIdentifier","src":"3686:3:24"},"nativeSrc":"3686:18:24","nodeType":"YulFunctionCall","src":"3686:18:24"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:24","nodeType":"YulIdentifier","src":"3678:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:24","nodeType":"YulIdentifier","src":"3758:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:24","nodeType":"YulIdentifier","src":"3771:9:24"},{"kind":"number","nativeSrc":"3782:1:24","nodeType":"YulLiteral","src":"3782:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:24","nodeType":"YulIdentifier","src":"3767:3:24"},"nativeSrc":"3767:17:24","nodeType":"YulFunctionCall","src":"3767:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:24","nodeType":"YulIdentifier","src":"3714:43:24"},"nativeSrc":"3714:71:24","nodeType":"YulFunctionCall","src":"3714:71:24"},"nativeSrc":"3714:71:24","nodeType":"YulExpressionStatement","src":"3714:71:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:24","nodeType":"YulTypedName","src":"3640:9:24","type":""},{"name":"value0","nativeSrc":"3652:6:24","nodeType":"YulTypedName","src":"3652:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:24","nodeType":"YulTypedName","src":"3663:4:24","type":""}],"src":"3570:222:24"},{"body":{"nativeSrc":"3898:519:24","nodeType":"YulBlock","src":"3898:519:24","statements":[{"body":{"nativeSrc":"3944:83:24","nodeType":"YulBlock","src":"3944:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:24","nodeType":"YulIdentifier","src":"3946:77:24"},"nativeSrc":"3946:79:24","nodeType":"YulFunctionCall","src":"3946:79:24"},"nativeSrc":"3946:79:24","nodeType":"YulExpressionStatement","src":"3946:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:24","nodeType":"YulIdentifier","src":"3919:7:24"},{"name":"headStart","nativeSrc":"3928:9:24","nodeType":"YulIdentifier","src":"3928:9:24"}],"functionName":{"name":"sub","nativeSrc":"3915:3:24","nodeType":"YulIdentifier","src":"3915:3:24"},"nativeSrc":"3915:23:24","nodeType":"YulFunctionCall","src":"3915:23:24"},{"kind":"number","nativeSrc":"3940:2:24","nodeType":"YulLiteral","src":"3940:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:24","nodeType":"YulIdentifier","src":"3911:3:24"},"nativeSrc":"3911:32:24","nodeType":"YulFunctionCall","src":"3911:32:24"},"nativeSrc":"3908:119:24","nodeType":"YulIf","src":"3908:119:24"},{"nativeSrc":"4037:117:24","nodeType":"YulBlock","src":"4037:117:24","statements":[{"nativeSrc":"4052:15:24","nodeType":"YulVariableDeclaration","src":"4052:15:24","value":{"kind":"number","nativeSrc":"4066:1:24","nodeType":"YulLiteral","src":"4066:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:24","nodeType":"YulTypedName","src":"4056:6:24","type":""}]},{"nativeSrc":"4081:63:24","nodeType":"YulAssignment","src":"4081:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:24","nodeType":"YulIdentifier","src":"4116:9:24"},{"name":"offset","nativeSrc":"4127:6:24","nodeType":"YulIdentifier","src":"4127:6:24"}],"functionName":{"name":"add","nativeSrc":"4112:3:24","nodeType":"YulIdentifier","src":"4112:3:24"},"nativeSrc":"4112:22:24","nodeType":"YulFunctionCall","src":"4112:22:24"},{"name":"dataEnd","nativeSrc":"4136:7:24","nodeType":"YulIdentifier","src":"4136:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:24","nodeType":"YulIdentifier","src":"4091:20:24"},"nativeSrc":"4091:53:24","nodeType":"YulFunctionCall","src":"4091:53:24"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:24","nodeType":"YulIdentifier","src":"4081:6:24"}]}]},{"nativeSrc":"4164:118:24","nodeType":"YulBlock","src":"4164:118:24","statements":[{"nativeSrc":"4179:16:24","nodeType":"YulVariableDeclaration","src":"4179:16:24","value":{"kind":"number","nativeSrc":"4193:2:24","nodeType":"YulLiteral","src":"4193:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:24","nodeType":"YulTypedName","src":"4183:6:24","type":""}]},{"nativeSrc":"4209:63:24","nodeType":"YulAssignment","src":"4209:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:24","nodeType":"YulIdentifier","src":"4244:9:24"},{"name":"offset","nativeSrc":"4255:6:24","nodeType":"YulIdentifier","src":"4255:6:24"}],"functionName":{"name":"add","nativeSrc":"4240:3:24","nodeType":"YulIdentifier","src":"4240:3:24"},"nativeSrc":"4240:22:24","nodeType":"YulFunctionCall","src":"4240:22:24"},{"name":"dataEnd","nativeSrc":"4264:7:24","nodeType":"YulIdentifier","src":"4264:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:24","nodeType":"YulIdentifier","src":"4219:20:24"},"nativeSrc":"4219:53:24","nodeType":"YulFunctionCall","src":"4219:53:24"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:24","nodeType":"YulIdentifier","src":"4209:6:24"}]}]},{"nativeSrc":"4292:118:24","nodeType":"YulBlock","src":"4292:118:24","statements":[{"nativeSrc":"4307:16:24","nodeType":"YulVariableDeclaration","src":"4307:16:24","value":{"kind":"number","nativeSrc":"4321:2:24","nodeType":"YulLiteral","src":"4321:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:24","nodeType":"YulTypedName","src":"4311:6:24","type":""}]},{"nativeSrc":"4337:63:24","nodeType":"YulAssignment","src":"4337:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:24","nodeType":"YulIdentifier","src":"4372:9:24"},{"name":"offset","nativeSrc":"4383:6:24","nodeType":"YulIdentifier","src":"4383:6:24"}],"functionName":{"name":"add","nativeSrc":"4368:3:24","nodeType":"YulIdentifier","src":"4368:3:24"},"nativeSrc":"4368:22:24","nodeType":"YulFunctionCall","src":"4368:22:24"},{"name":"dataEnd","nativeSrc":"4392:7:24","nodeType":"YulIdentifier","src":"4392:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:24","nodeType":"YulIdentifier","src":"4347:20:24"},"nativeSrc":"4347:53:24","nodeType":"YulFunctionCall","src":"4347:53:24"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:24","nodeType":"YulIdentifier","src":"4337:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:24","nodeType":"YulTypedName","src":"3852:9:24","type":""},{"name":"dataEnd","nativeSrc":"3863:7:24","nodeType":"YulTypedName","src":"3863:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:24","nodeType":"YulTypedName","src":"3875:6:24","type":""},{"name":"value1","nativeSrc":"3883:6:24","nodeType":"YulTypedName","src":"3883:6:24","type":""},{"name":"value2","nativeSrc":"3891:6:24","nodeType":"YulTypedName","src":"3891:6:24","type":""}],"src":"3798:619:24"},{"body":{"nativeSrc":"4466:43:24","nodeType":"YulBlock","src":"4466:43:24","statements":[{"nativeSrc":"4476:27:24","nodeType":"YulAssignment","src":"4476:27:24","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:24","nodeType":"YulIdentifier","src":"4491:5:24"},{"kind":"number","nativeSrc":"4498:4:24","nodeType":"YulLiteral","src":"4498:4:24","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:24","nodeType":"YulIdentifier","src":"4487:3:24"},"nativeSrc":"4487:16:24","nodeType":"YulFunctionCall","src":"4487:16:24"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:24","nodeType":"YulIdentifier","src":"4476:7:24"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:24","nodeType":"YulTypedName","src":"4448:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:24","nodeType":"YulTypedName","src":"4458:7:24","type":""}],"src":"4423:86:24"},{"body":{"nativeSrc":"4576:51:24","nodeType":"YulBlock","src":"4576:51:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:24","nodeType":"YulIdentifier","src":"4593:3:24"},{"arguments":[{"name":"value","nativeSrc":"4614:5:24","nodeType":"YulIdentifier","src":"4614:5:24"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:24","nodeType":"YulIdentifier","src":"4598:15:24"},"nativeSrc":"4598:22:24","nodeType":"YulFunctionCall","src":"4598:22:24"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:24","nodeType":"YulIdentifier","src":"4586:6:24"},"nativeSrc":"4586:35:24","nodeType":"YulFunctionCall","src":"4586:35:24"},"nativeSrc":"4586:35:24","nodeType":"YulExpressionStatement","src":"4586:35:24"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:24","nodeType":"YulTypedName","src":"4564:5:24","type":""},{"name":"pos","nativeSrc":"4571:3:24","nodeType":"YulTypedName","src":"4571:3:24","type":""}],"src":"4515:112:24"},{"body":{"nativeSrc":"4727:120:24","nodeType":"YulBlock","src":"4727:120:24","statements":[{"nativeSrc":"4737:26:24","nodeType":"YulAssignment","src":"4737:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:24","nodeType":"YulIdentifier","src":"4749:9:24"},{"kind":"number","nativeSrc":"4760:2:24","nodeType":"YulLiteral","src":"4760:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:24","nodeType":"YulIdentifier","src":"4745:3:24"},"nativeSrc":"4745:18:24","nodeType":"YulFunctionCall","src":"4745:18:24"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:24","nodeType":"YulIdentifier","src":"4737:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:24","nodeType":"YulIdentifier","src":"4813:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:24","nodeType":"YulIdentifier","src":"4826:9:24"},{"kind":"number","nativeSrc":"4837:1:24","nodeType":"YulLiteral","src":"4837:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:24","nodeType":"YulIdentifier","src":"4822:3:24"},"nativeSrc":"4822:17:24","nodeType":"YulFunctionCall","src":"4822:17:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:24","nodeType":"YulIdentifier","src":"4773:39:24"},"nativeSrc":"4773:67:24","nodeType":"YulFunctionCall","src":"4773:67:24"},"nativeSrc":"4773:67:24","nodeType":"YulExpressionStatement","src":"4773:67:24"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:24","nodeType":"YulTypedName","src":"4699:9:24","type":""},{"name":"value0","nativeSrc":"4711:6:24","nodeType":"YulTypedName","src":"4711:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:24","nodeType":"YulTypedName","src":"4722:4:24","type":""}],"src":"4633:214:24"},{"body":{"nativeSrc":"4898:32:24","nodeType":"YulBlock","src":"4898:32:24","statements":[{"nativeSrc":"4908:16:24","nodeType":"YulAssignment","src":"4908:16:24","value":{"name":"value","nativeSrc":"4919:5:24","nodeType":"YulIdentifier","src":"4919:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"4908:7:24","nodeType":"YulIdentifier","src":"4908:7:24"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4853:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4880:5:24","nodeType":"YulTypedName","src":"4880:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4890:7:24","nodeType":"YulTypedName","src":"4890:7:24","type":""}],"src":"4853:77:24"},{"body":{"nativeSrc":"5001:53:24","nodeType":"YulBlock","src":"5001:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5018:3:24","nodeType":"YulIdentifier","src":"5018:3:24"},{"arguments":[{"name":"value","nativeSrc":"5041:5:24","nodeType":"YulIdentifier","src":"5041:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5023:17:24","nodeType":"YulIdentifier","src":"5023:17:24"},"nativeSrc":"5023:24:24","nodeType":"YulFunctionCall","src":"5023:24:24"}],"functionName":{"name":"mstore","nativeSrc":"5011:6:24","nodeType":"YulIdentifier","src":"5011:6:24"},"nativeSrc":"5011:37:24","nodeType":"YulFunctionCall","src":"5011:37:24"},"nativeSrc":"5011:37:24","nodeType":"YulExpressionStatement","src":"5011:37:24"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4936:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4989:5:24","nodeType":"YulTypedName","src":"4989:5:24","type":""},{"name":"pos","nativeSrc":"4996:3:24","nodeType":"YulTypedName","src":"4996:3:24","type":""}],"src":"4936:118:24"},{"body":{"nativeSrc":"5158:124:24","nodeType":"YulBlock","src":"5158:124:24","statements":[{"nativeSrc":"5168:26:24","nodeType":"YulAssignment","src":"5168:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"5180:9:24","nodeType":"YulIdentifier","src":"5180:9:24"},{"kind":"number","nativeSrc":"5191:2:24","nodeType":"YulLiteral","src":"5191:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5176:3:24","nodeType":"YulIdentifier","src":"5176:3:24"},"nativeSrc":"5176:18:24","nodeType":"YulFunctionCall","src":"5176:18:24"},"variableNames":[{"name":"tail","nativeSrc":"5168:4:24","nodeType":"YulIdentifier","src":"5168:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5248:6:24","nodeType":"YulIdentifier","src":"5248:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"5261:9:24","nodeType":"YulIdentifier","src":"5261:9:24"},{"kind":"number","nativeSrc":"5272:1:24","nodeType":"YulLiteral","src":"5272:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5257:3:24","nodeType":"YulIdentifier","src":"5257:3:24"},"nativeSrc":"5257:17:24","nodeType":"YulFunctionCall","src":"5257:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5204:43:24","nodeType":"YulIdentifier","src":"5204:43:24"},"nativeSrc":"5204:71:24","nodeType":"YulFunctionCall","src":"5204:71:24"},"nativeSrc":"5204:71:24","nodeType":"YulExpressionStatement","src":"5204:71:24"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5060:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5130:9:24","nodeType":"YulTypedName","src":"5130:9:24","type":""},{"name":"value0","nativeSrc":"5142:6:24","nodeType":"YulTypedName","src":"5142:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5153:4:24","nodeType":"YulTypedName","src":"5153:4:24","type":""}],"src":"5060:222:24"},{"body":{"nativeSrc":"5354:263:24","nodeType":"YulBlock","src":"5354:263:24","statements":[{"body":{"nativeSrc":"5400:83:24","nodeType":"YulBlock","src":"5400:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5402:77:24","nodeType":"YulIdentifier","src":"5402:77:24"},"nativeSrc":"5402:79:24","nodeType":"YulFunctionCall","src":"5402:79:24"},"nativeSrc":"5402:79:24","nodeType":"YulExpressionStatement","src":"5402:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5375:7:24","nodeType":"YulIdentifier","src":"5375:7:24"},{"name":"headStart","nativeSrc":"5384:9:24","nodeType":"YulIdentifier","src":"5384:9:24"}],"functionName":{"name":"sub","nativeSrc":"5371:3:24","nodeType":"YulIdentifier","src":"5371:3:24"},"nativeSrc":"5371:23:24","nodeType":"YulFunctionCall","src":"5371:23:24"},{"kind":"number","nativeSrc":"5396:2:24","nodeType":"YulLiteral","src":"5396:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5367:3:24","nodeType":"YulIdentifier","src":"5367:3:24"},"nativeSrc":"5367:32:24","nodeType":"YulFunctionCall","src":"5367:32:24"},"nativeSrc":"5364:119:24","nodeType":"YulIf","src":"5364:119:24"},{"nativeSrc":"5493:117:24","nodeType":"YulBlock","src":"5493:117:24","statements":[{"nativeSrc":"5508:15:24","nodeType":"YulVariableDeclaration","src":"5508:15:24","value":{"kind":"number","nativeSrc":"5522:1:24","nodeType":"YulLiteral","src":"5522:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5512:6:24","nodeType":"YulTypedName","src":"5512:6:24","type":""}]},{"nativeSrc":"5537:63:24","nodeType":"YulAssignment","src":"5537:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5572:9:24","nodeType":"YulIdentifier","src":"5572:9:24"},{"name":"offset","nativeSrc":"5583:6:24","nodeType":"YulIdentifier","src":"5583:6:24"}],"functionName":{"name":"add","nativeSrc":"5568:3:24","nodeType":"YulIdentifier","src":"5568:3:24"},"nativeSrc":"5568:22:24","nodeType":"YulFunctionCall","src":"5568:22:24"},{"name":"dataEnd","nativeSrc":"5592:7:24","nodeType":"YulIdentifier","src":"5592:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5547:20:24","nodeType":"YulIdentifier","src":"5547:20:24"},"nativeSrc":"5547:53:24","nodeType":"YulFunctionCall","src":"5547:53:24"},"variableNames":[{"name":"value0","nativeSrc":"5537:6:24","nodeType":"YulIdentifier","src":"5537:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5288:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:24","nodeType":"YulTypedName","src":"5324:9:24","type":""},{"name":"dataEnd","nativeSrc":"5335:7:24","nodeType":"YulTypedName","src":"5335:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5347:6:24","nodeType":"YulTypedName","src":"5347:6:24","type":""}],"src":"5288:329:24"},{"body":{"nativeSrc":"5689:263:24","nodeType":"YulBlock","src":"5689:263:24","statements":[{"body":{"nativeSrc":"5735:83:24","nodeType":"YulBlock","src":"5735:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5737:77:24","nodeType":"YulIdentifier","src":"5737:77:24"},"nativeSrc":"5737:79:24","nodeType":"YulFunctionCall","src":"5737:79:24"},"nativeSrc":"5737:79:24","nodeType":"YulExpressionStatement","src":"5737:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5710:7:24","nodeType":"YulIdentifier","src":"5710:7:24"},{"name":"headStart","nativeSrc":"5719:9:24","nodeType":"YulIdentifier","src":"5719:9:24"}],"functionName":{"name":"sub","nativeSrc":"5706:3:24","nodeType":"YulIdentifier","src":"5706:3:24"},"nativeSrc":"5706:23:24","nodeType":"YulFunctionCall","src":"5706:23:24"},{"kind":"number","nativeSrc":"5731:2:24","nodeType":"YulLiteral","src":"5731:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5702:3:24","nodeType":"YulIdentifier","src":"5702:3:24"},"nativeSrc":"5702:32:24","nodeType":"YulFunctionCall","src":"5702:32:24"},"nativeSrc":"5699:119:24","nodeType":"YulIf","src":"5699:119:24"},{"nativeSrc":"5828:117:24","nodeType":"YulBlock","src":"5828:117:24","statements":[{"nativeSrc":"5843:15:24","nodeType":"YulVariableDeclaration","src":"5843:15:24","value":{"kind":"number","nativeSrc":"5857:1:24","nodeType":"YulLiteral","src":"5857:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5847:6:24","nodeType":"YulTypedName","src":"5847:6:24","type":""}]},{"nativeSrc":"5872:63:24","nodeType":"YulAssignment","src":"5872:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5907:9:24","nodeType":"YulIdentifier","src":"5907:9:24"},{"name":"offset","nativeSrc":"5918:6:24","nodeType":"YulIdentifier","src":"5918:6:24"}],"functionName":{"name":"add","nativeSrc":"5903:3:24","nodeType":"YulIdentifier","src":"5903:3:24"},"nativeSrc":"5903:22:24","nodeType":"YulFunctionCall","src":"5903:22:24"},{"name":"dataEnd","nativeSrc":"5927:7:24","nodeType":"YulIdentifier","src":"5927:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5882:20:24","nodeType":"YulIdentifier","src":"5882:20:24"},"nativeSrc":"5882:53:24","nodeType":"YulFunctionCall","src":"5882:53:24"},"variableNames":[{"name":"value0","nativeSrc":"5872:6:24","nodeType":"YulIdentifier","src":"5872:6:24"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5623:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5659:9:24","nodeType":"YulTypedName","src":"5659:9:24","type":""},{"name":"dataEnd","nativeSrc":"5670:7:24","nodeType":"YulTypedName","src":"5670:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5682:6:24","nodeType":"YulTypedName","src":"5682:6:24","type":""}],"src":"5623:329:24"},{"body":{"nativeSrc":"6002:105:24","nodeType":"YulBlock","src":"6002:105:24","statements":[{"nativeSrc":"6012:89:24","nodeType":"YulAssignment","src":"6012:89:24","value":{"arguments":[{"name":"value","nativeSrc":"6027:5:24","nodeType":"YulIdentifier","src":"6027:5:24"},{"kind":"number","nativeSrc":"6034:66:24","nodeType":"YulLiteral","src":"6034:66:24","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"6023:3:24","nodeType":"YulIdentifier","src":"6023:3:24"},"nativeSrc":"6023:78:24","nodeType":"YulFunctionCall","src":"6023:78:24"},"variableNames":[{"name":"cleaned","nativeSrc":"6012:7:24","nodeType":"YulIdentifier","src":"6012:7:24"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"5958:149:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5984:5:24","nodeType":"YulTypedName","src":"5984:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5994:7:24","nodeType":"YulTypedName","src":"5994:7:24","type":""}],"src":"5958:149:24"},{"body":{"nativeSrc":"6176:52:24","nodeType":"YulBlock","src":"6176:52:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6193:3:24","nodeType":"YulIdentifier","src":"6193:3:24"},{"arguments":[{"name":"value","nativeSrc":"6215:5:24","nodeType":"YulIdentifier","src":"6215:5:24"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"6198:16:24","nodeType":"YulIdentifier","src":"6198:16:24"},"nativeSrc":"6198:23:24","nodeType":"YulFunctionCall","src":"6198:23:24"}],"functionName":{"name":"mstore","nativeSrc":"6186:6:24","nodeType":"YulIdentifier","src":"6186:6:24"},"nativeSrc":"6186:36:24","nodeType":"YulFunctionCall","src":"6186:36:24"},"nativeSrc":"6186:36:24","nodeType":"YulExpressionStatement","src":"6186:36:24"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"6113:115:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6164:5:24","nodeType":"YulTypedName","src":"6164:5:24","type":""},{"name":"pos","nativeSrc":"6171:3:24","nodeType":"YulTypedName","src":"6171:3:24","type":""}],"src":"6113:115:24"},{"body":{"nativeSrc":"6299:53:24","nodeType":"YulBlock","src":"6299:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6316:3:24","nodeType":"YulIdentifier","src":"6316:3:24"},{"arguments":[{"name":"value","nativeSrc":"6339:5:24","nodeType":"YulIdentifier","src":"6339:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6321:17:24","nodeType":"YulIdentifier","src":"6321:17:24"},"nativeSrc":"6321:24:24","nodeType":"YulFunctionCall","src":"6321:24:24"}],"functionName":{"name":"mstore","nativeSrc":"6309:6:24","nodeType":"YulIdentifier","src":"6309:6:24"},"nativeSrc":"6309:37:24","nodeType":"YulFunctionCall","src":"6309:37:24"},"nativeSrc":"6309:37:24","nodeType":"YulExpressionStatement","src":"6309:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6234:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6287:5:24","nodeType":"YulTypedName","src":"6287:5:24","type":""},{"name":"pos","nativeSrc":"6294:3:24","nodeType":"YulTypedName","src":"6294:3:24","type":""}],"src":"6234:118:24"},{"body":{"nativeSrc":"6432:40:24","nodeType":"YulBlock","src":"6432:40:24","statements":[{"nativeSrc":"6443:22:24","nodeType":"YulAssignment","src":"6443:22:24","value":{"arguments":[{"name":"value","nativeSrc":"6459:5:24","nodeType":"YulIdentifier","src":"6459:5:24"}],"functionName":{"name":"mload","nativeSrc":"6453:5:24","nodeType":"YulIdentifier","src":"6453:5:24"},"nativeSrc":"6453:12:24","nodeType":"YulFunctionCall","src":"6453:12:24"},"variableNames":[{"name":"length","nativeSrc":"6443:6:24","nodeType":"YulIdentifier","src":"6443:6:24"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6358:114:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6415:5:24","nodeType":"YulTypedName","src":"6415:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6425:6:24","nodeType":"YulTypedName","src":"6425:6:24","type":""}],"src":"6358:114:24"},{"body":{"nativeSrc":"6589:73:24","nodeType":"YulBlock","src":"6589:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6606:3:24","nodeType":"YulIdentifier","src":"6606:3:24"},{"name":"length","nativeSrc":"6611:6:24","nodeType":"YulIdentifier","src":"6611:6:24"}],"functionName":{"name":"mstore","nativeSrc":"6599:6:24","nodeType":"YulIdentifier","src":"6599:6:24"},"nativeSrc":"6599:19:24","nodeType":"YulFunctionCall","src":"6599:19:24"},"nativeSrc":"6599:19:24","nodeType":"YulExpressionStatement","src":"6599:19:24"},{"nativeSrc":"6627:29:24","nodeType":"YulAssignment","src":"6627:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"6646:3:24","nodeType":"YulIdentifier","src":"6646:3:24"},{"kind":"number","nativeSrc":"6651:4:24","nodeType":"YulLiteral","src":"6651:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6642:3:24","nodeType":"YulIdentifier","src":"6642:3:24"},"nativeSrc":"6642:14:24","nodeType":"YulFunctionCall","src":"6642:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"6627:11:24","nodeType":"YulIdentifier","src":"6627:11:24"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6478:184:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6561:3:24","nodeType":"YulTypedName","src":"6561:3:24","type":""},{"name":"length","nativeSrc":"6566:6:24","nodeType":"YulTypedName","src":"6566:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6577:11:24","nodeType":"YulTypedName","src":"6577:11:24","type":""}],"src":"6478:184:24"},{"body":{"nativeSrc":"6740:60:24","nodeType":"YulBlock","src":"6740:60:24","statements":[{"nativeSrc":"6750:11:24","nodeType":"YulAssignment","src":"6750:11:24","value":{"name":"ptr","nativeSrc":"6758:3:24","nodeType":"YulIdentifier","src":"6758:3:24"},"variableNames":[{"name":"data","nativeSrc":"6750:4:24","nodeType":"YulIdentifier","src":"6750:4:24"}]},{"nativeSrc":"6771:22:24","nodeType":"YulAssignment","src":"6771:22:24","value":{"arguments":[{"name":"ptr","nativeSrc":"6783:3:24","nodeType":"YulIdentifier","src":"6783:3:24"},{"kind":"number","nativeSrc":"6788:4:24","nodeType":"YulLiteral","src":"6788:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6779:3:24","nodeType":"YulIdentifier","src":"6779:3:24"},"nativeSrc":"6779:14:24","nodeType":"YulFunctionCall","src":"6779:14:24"},"variableNames":[{"name":"data","nativeSrc":"6771:4:24","nodeType":"YulIdentifier","src":"6771:4:24"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6668:132:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6727:3:24","nodeType":"YulTypedName","src":"6727:3:24","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6735:4:24","nodeType":"YulTypedName","src":"6735:4:24","type":""}],"src":"6668:132:24"},{"body":{"nativeSrc":"6861:53:24","nodeType":"YulBlock","src":"6861:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6878:3:24","nodeType":"YulIdentifier","src":"6878:3:24"},{"arguments":[{"name":"value","nativeSrc":"6901:5:24","nodeType":"YulIdentifier","src":"6901:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6883:17:24","nodeType":"YulIdentifier","src":"6883:17:24"},"nativeSrc":"6883:24:24","nodeType":"YulFunctionCall","src":"6883:24:24"}],"functionName":{"name":"mstore","nativeSrc":"6871:6:24","nodeType":"YulIdentifier","src":"6871:6:24"},"nativeSrc":"6871:37:24","nodeType":"YulFunctionCall","src":"6871:37:24"},"nativeSrc":"6871:37:24","nodeType":"YulExpressionStatement","src":"6871:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6806:108:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6849:5:24","nodeType":"YulTypedName","src":"6849:5:24","type":""},{"name":"pos","nativeSrc":"6856:3:24","nodeType":"YulTypedName","src":"6856:3:24","type":""}],"src":"6806:108:24"},{"body":{"nativeSrc":"7000:99:24","nodeType":"YulBlock","src":"7000:99:24","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"7044:6:24","nodeType":"YulIdentifier","src":"7044:6:24"},{"name":"pos","nativeSrc":"7052:3:24","nodeType":"YulIdentifier","src":"7052:3:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7010:33:24","nodeType":"YulIdentifier","src":"7010:33:24"},"nativeSrc":"7010:46:24","nodeType":"YulFunctionCall","src":"7010:46:24"},"nativeSrc":"7010:46:24","nodeType":"YulExpressionStatement","src":"7010:46:24"},{"nativeSrc":"7065:28:24","nodeType":"YulAssignment","src":"7065:28:24","value":{"arguments":[{"name":"pos","nativeSrc":"7083:3:24","nodeType":"YulIdentifier","src":"7083:3:24"},{"kind":"number","nativeSrc":"7088:4:24","nodeType":"YulLiteral","src":"7088:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7079:3:24","nodeType":"YulIdentifier","src":"7079:3:24"},"nativeSrc":"7079:14:24","nodeType":"YulFunctionCall","src":"7079:14:24"},"variableNames":[{"name":"updatedPos","nativeSrc":"7065:10:24","nodeType":"YulIdentifier","src":"7065:10:24"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6920:179:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6973:6:24","nodeType":"YulTypedName","src":"6973:6:24","type":""},{"name":"pos","nativeSrc":"6981:3:24","nodeType":"YulTypedName","src":"6981:3:24","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6989:10:24","nodeType":"YulTypedName","src":"6989:10:24","type":""}],"src":"6920:179:24"},{"body":{"nativeSrc":"7180:38:24","nodeType":"YulBlock","src":"7180:38:24","statements":[{"nativeSrc":"7190:22:24","nodeType":"YulAssignment","src":"7190:22:24","value":{"arguments":[{"name":"ptr","nativeSrc":"7202:3:24","nodeType":"YulIdentifier","src":"7202:3:24"},{"kind":"number","nativeSrc":"7207:4:24","nodeType":"YulLiteral","src":"7207:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7198:3:24","nodeType":"YulIdentifier","src":"7198:3:24"},"nativeSrc":"7198:14:24","nodeType":"YulFunctionCall","src":"7198:14:24"},"variableNames":[{"name":"next","nativeSrc":"7190:4:24","nodeType":"YulIdentifier","src":"7190:4:24"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7105:113:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7167:3:24","nodeType":"YulTypedName","src":"7167:3:24","type":""}],"returnVariables":[{"name":"next","nativeSrc":"7175:4:24","nodeType":"YulTypedName","src":"7175:4:24","type":""}],"src":"7105:113:24"},{"body":{"nativeSrc":"7378:608:24","nodeType":"YulBlock","src":"7378:608:24","statements":[{"nativeSrc":"7388:68:24","nodeType":"YulVariableDeclaration","src":"7388:68:24","value":{"arguments":[{"name":"value","nativeSrc":"7450:5:24","nodeType":"YulIdentifier","src":"7450:5:24"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7402:47:24","nodeType":"YulIdentifier","src":"7402:47:24"},"nativeSrc":"7402:54:24","nodeType":"YulFunctionCall","src":"7402:54:24"},"variables":[{"name":"length","nativeSrc":"7392:6:24","nodeType":"YulTypedName","src":"7392:6:24","type":""}]},{"nativeSrc":"7465:93:24","nodeType":"YulAssignment","src":"7465:93:24","value":{"arguments":[{"name":"pos","nativeSrc":"7546:3:24","nodeType":"YulIdentifier","src":"7546:3:24"},{"name":"length","nativeSrc":"7551:6:24","nodeType":"YulIdentifier","src":"7551:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7472:73:24","nodeType":"YulIdentifier","src":"7472:73:24"},"nativeSrc":"7472:86:24","nodeType":"YulFunctionCall","src":"7472:86:24"},"variableNames":[{"name":"pos","nativeSrc":"7465:3:24","nodeType":"YulIdentifier","src":"7465:3:24"}]},{"nativeSrc":"7567:71:24","nodeType":"YulVariableDeclaration","src":"7567:71:24","value":{"arguments":[{"name":"value","nativeSrc":"7632:5:24","nodeType":"YulIdentifier","src":"7632:5:24"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7582:49:24","nodeType":"YulIdentifier","src":"7582:49:24"},"nativeSrc":"7582:56:24","nodeType":"YulFunctionCall","src":"7582:56:24"},"variables":[{"name":"baseRef","nativeSrc":"7571:7:24","nodeType":"YulTypedName","src":"7571:7:24","type":""}]},{"nativeSrc":"7647:21:24","nodeType":"YulVariableDeclaration","src":"7647:21:24","value":{"name":"baseRef","nativeSrc":"7661:7:24","nodeType":"YulIdentifier","src":"7661:7:24"},"variables":[{"name":"srcPtr","nativeSrc":"7651:6:24","nodeType":"YulTypedName","src":"7651:6:24","type":""}]},{"body":{"nativeSrc":"7737:224:24","nodeType":"YulBlock","src":"7737:224:24","statements":[{"nativeSrc":"7751:34:24","nodeType":"YulVariableDeclaration","src":"7751:34:24","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7778:6:24","nodeType":"YulIdentifier","src":"7778:6:24"}],"functionName":{"name":"mload","nativeSrc":"7772:5:24","nodeType":"YulIdentifier","src":"7772:5:24"},"nativeSrc":"7772:13:24","nodeType":"YulFunctionCall","src":"7772:13:24"},"variables":[{"name":"elementValue0","nativeSrc":"7755:13:24","nodeType":"YulTypedName","src":"7755:13:24","type":""}]},{"nativeSrc":"7798:70:24","nodeType":"YulAssignment","src":"7798:70:24","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7849:13:24","nodeType":"YulIdentifier","src":"7849:13:24"},{"name":"pos","nativeSrc":"7864:3:24","nodeType":"YulIdentifier","src":"7864:3:24"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7805:43:24","nodeType":"YulIdentifier","src":"7805:43:24"},"nativeSrc":"7805:63:24","nodeType":"YulFunctionCall","src":"7805:63:24"},"variableNames":[{"name":"pos","nativeSrc":"7798:3:24","nodeType":"YulIdentifier","src":"7798:3:24"}]},{"nativeSrc":"7881:70:24","nodeType":"YulAssignment","src":"7881:70:24","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7944:6:24","nodeType":"YulIdentifier","src":"7944:6:24"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7891:52:24","nodeType":"YulIdentifier","src":"7891:52:24"},"nativeSrc":"7891:60:24","nodeType":"YulFunctionCall","src":"7891:60:24"},"variableNames":[{"name":"srcPtr","nativeSrc":"7881:6:24","nodeType":"YulIdentifier","src":"7881:6:24"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7699:1:24","nodeType":"YulIdentifier","src":"7699:1:24"},{"name":"length","nativeSrc":"7702:6:24","nodeType":"YulIdentifier","src":"7702:6:24"}],"functionName":{"name":"lt","nativeSrc":"7696:2:24","nodeType":"YulIdentifier","src":"7696:2:24"},"nativeSrc":"7696:13:24","nodeType":"YulFunctionCall","src":"7696:13:24"},"nativeSrc":"7677:284:24","nodeType":"YulForLoop","post":{"nativeSrc":"7710:18:24","nodeType":"YulBlock","src":"7710:18:24","statements":[{"nativeSrc":"7712:14:24","nodeType":"YulAssignment","src":"7712:14:24","value":{"arguments":[{"name":"i","nativeSrc":"7721:1:24","nodeType":"YulIdentifier","src":"7721:1:24"},{"kind":"number","nativeSrc":"7724:1:24","nodeType":"YulLiteral","src":"7724:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7717:3:24","nodeType":"YulIdentifier","src":"7717:3:24"},"nativeSrc":"7717:9:24","nodeType":"YulFunctionCall","src":"7717:9:24"},"variableNames":[{"name":"i","nativeSrc":"7712:1:24","nodeType":"YulIdentifier","src":"7712:1:24"}]}]},"pre":{"nativeSrc":"7681:14:24","nodeType":"YulBlock","src":"7681:14:24","statements":[{"nativeSrc":"7683:10:24","nodeType":"YulVariableDeclaration","src":"7683:10:24","value":{"kind":"number","nativeSrc":"7692:1:24","nodeType":"YulLiteral","src":"7692:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7687:1:24","nodeType":"YulTypedName","src":"7687:1:24","type":""}]}]},"src":"7677:284:24"},{"nativeSrc":"7970:10:24","nodeType":"YulAssignment","src":"7970:10:24","value":{"name":"pos","nativeSrc":"7977:3:24","nodeType":"YulIdentifier","src":"7977:3:24"},"variableNames":[{"name":"end","nativeSrc":"7970:3:24","nodeType":"YulIdentifier","src":"7970:3:24"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7254:732:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7357:5:24","nodeType":"YulTypedName","src":"7357:5:24","type":""},{"name":"pos","nativeSrc":"7364:3:24","nodeType":"YulTypedName","src":"7364:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7373:3:24","nodeType":"YulTypedName","src":"7373:3:24","type":""}],"src":"7254:732:24"},{"body":{"nativeSrc":"8346:861:24","nodeType":"YulBlock","src":"8346:861:24","statements":[{"nativeSrc":"8356:27:24","nodeType":"YulAssignment","src":"8356:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"8368:9:24","nodeType":"YulIdentifier","src":"8368:9:24"},{"kind":"number","nativeSrc":"8379:3:24","nodeType":"YulLiteral","src":"8379:3:24","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8364:3:24","nodeType":"YulIdentifier","src":"8364:3:24"},"nativeSrc":"8364:19:24","nodeType":"YulFunctionCall","src":"8364:19:24"},"variableNames":[{"name":"tail","nativeSrc":"8356:4:24","nodeType":"YulIdentifier","src":"8356:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8435:6:24","nodeType":"YulIdentifier","src":"8435:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"8448:9:24","nodeType":"YulIdentifier","src":"8448:9:24"},{"kind":"number","nativeSrc":"8459:1:24","nodeType":"YulLiteral","src":"8459:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8444:3:24","nodeType":"YulIdentifier","src":"8444:3:24"},"nativeSrc":"8444:17:24","nodeType":"YulFunctionCall","src":"8444:17:24"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8393:41:24","nodeType":"YulIdentifier","src":"8393:41:24"},"nativeSrc":"8393:69:24","nodeType":"YulFunctionCall","src":"8393:69:24"},"nativeSrc":"8393:69:24","nodeType":"YulExpressionStatement","src":"8393:69:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8483:9:24","nodeType":"YulIdentifier","src":"8483:9:24"},{"kind":"number","nativeSrc":"8494:2:24","nodeType":"YulLiteral","src":"8494:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8479:3:24","nodeType":"YulIdentifier","src":"8479:3:24"},"nativeSrc":"8479:18:24","nodeType":"YulFunctionCall","src":"8479:18:24"},{"arguments":[{"name":"tail","nativeSrc":"8503:4:24","nodeType":"YulIdentifier","src":"8503:4:24"},{"name":"headStart","nativeSrc":"8509:9:24","nodeType":"YulIdentifier","src":"8509:9:24"}],"functionName":{"name":"sub","nativeSrc":"8499:3:24","nodeType":"YulIdentifier","src":"8499:3:24"},"nativeSrc":"8499:20:24","nodeType":"YulFunctionCall","src":"8499:20:24"}],"functionName":{"name":"mstore","nativeSrc":"8472:6:24","nodeType":"YulIdentifier","src":"8472:6:24"},"nativeSrc":"8472:48:24","nodeType":"YulFunctionCall","src":"8472:48:24"},"nativeSrc":"8472:48:24","nodeType":"YulExpressionStatement","src":"8472:48:24"},{"nativeSrc":"8529:86:24","nodeType":"YulAssignment","src":"8529:86:24","value":{"arguments":[{"name":"value1","nativeSrc":"8601:6:24","nodeType":"YulIdentifier","src":"8601:6:24"},{"name":"tail","nativeSrc":"8610:4:24","nodeType":"YulIdentifier","src":"8610:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8537:63:24","nodeType":"YulIdentifier","src":"8537:63:24"},"nativeSrc":"8537:78:24","nodeType":"YulFunctionCall","src":"8537:78:24"},"variableNames":[{"name":"tail","nativeSrc":"8529:4:24","nodeType":"YulIdentifier","src":"8529:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8636:9:24","nodeType":"YulIdentifier","src":"8636:9:24"},{"kind":"number","nativeSrc":"8647:2:24","nodeType":"YulLiteral","src":"8647:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8632:3:24","nodeType":"YulIdentifier","src":"8632:3:24"},"nativeSrc":"8632:18:24","nodeType":"YulFunctionCall","src":"8632:18:24"},{"arguments":[{"name":"tail","nativeSrc":"8656:4:24","nodeType":"YulIdentifier","src":"8656:4:24"},{"name":"headStart","nativeSrc":"8662:9:24","nodeType":"YulIdentifier","src":"8662:9:24"}],"functionName":{"name":"sub","nativeSrc":"8652:3:24","nodeType":"YulIdentifier","src":"8652:3:24"},"nativeSrc":"8652:20:24","nodeType":"YulFunctionCall","src":"8652:20:24"}],"functionName":{"name":"mstore","nativeSrc":"8625:6:24","nodeType":"YulIdentifier","src":"8625:6:24"},"nativeSrc":"8625:48:24","nodeType":"YulFunctionCall","src":"8625:48:24"},"nativeSrc":"8625:48:24","nodeType":"YulExpressionStatement","src":"8625:48:24"},{"nativeSrc":"8682:86:24","nodeType":"YulAssignment","src":"8682:86:24","value":{"arguments":[{"name":"value2","nativeSrc":"8754:6:24","nodeType":"YulIdentifier","src":"8754:6:24"},{"name":"tail","nativeSrc":"8763:4:24","nodeType":"YulIdentifier","src":"8763:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8690:63:24","nodeType":"YulIdentifier","src":"8690:63:24"},"nativeSrc":"8690:78:24","nodeType":"YulFunctionCall","src":"8690:78:24"},"variableNames":[{"name":"tail","nativeSrc":"8682:4:24","nodeType":"YulIdentifier","src":"8682:4:24"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8822:6:24","nodeType":"YulIdentifier","src":"8822:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"8835:9:24","nodeType":"YulIdentifier","src":"8835:9:24"},{"kind":"number","nativeSrc":"8846:2:24","nodeType":"YulLiteral","src":"8846:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8831:3:24","nodeType":"YulIdentifier","src":"8831:3:24"},"nativeSrc":"8831:18:24","nodeType":"YulFunctionCall","src":"8831:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8778:43:24","nodeType":"YulIdentifier","src":"8778:43:24"},"nativeSrc":"8778:72:24","nodeType":"YulFunctionCall","src":"8778:72:24"},"nativeSrc":"8778:72:24","nodeType":"YulExpressionStatement","src":"8778:72:24"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8904:6:24","nodeType":"YulIdentifier","src":"8904:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"8917:9:24","nodeType":"YulIdentifier","src":"8917:9:24"},{"kind":"number","nativeSrc":"8928:3:24","nodeType":"YulLiteral","src":"8928:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8913:3:24","nodeType":"YulIdentifier","src":"8913:3:24"},"nativeSrc":"8913:19:24","nodeType":"YulFunctionCall","src":"8913:19:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8860:43:24","nodeType":"YulIdentifier","src":"8860:43:24"},"nativeSrc":"8860:73:24","nodeType":"YulFunctionCall","src":"8860:73:24"},"nativeSrc":"8860:73:24","nodeType":"YulExpressionStatement","src":"8860:73:24"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8987:6:24","nodeType":"YulIdentifier","src":"8987:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"9000:9:24","nodeType":"YulIdentifier","src":"9000:9:24"},{"kind":"number","nativeSrc":"9011:3:24","nodeType":"YulLiteral","src":"9011:3:24","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8996:3:24","nodeType":"YulIdentifier","src":"8996:3:24"},"nativeSrc":"8996:19:24","nodeType":"YulFunctionCall","src":"8996:19:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8943:43:24","nodeType":"YulIdentifier","src":"8943:43:24"},"nativeSrc":"8943:73:24","nodeType":"YulFunctionCall","src":"8943:73:24"},"nativeSrc":"8943:73:24","nodeType":"YulExpressionStatement","src":"8943:73:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9037:9:24","nodeType":"YulIdentifier","src":"9037:9:24"},{"kind":"number","nativeSrc":"9048:3:24","nodeType":"YulLiteral","src":"9048:3:24","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9033:3:24","nodeType":"YulIdentifier","src":"9033:3:24"},"nativeSrc":"9033:19:24","nodeType":"YulFunctionCall","src":"9033:19:24"},{"arguments":[{"name":"tail","nativeSrc":"9058:4:24","nodeType":"YulIdentifier","src":"9058:4:24"},{"name":"headStart","nativeSrc":"9064:9:24","nodeType":"YulIdentifier","src":"9064:9:24"}],"functionName":{"name":"sub","nativeSrc":"9054:3:24","nodeType":"YulIdentifier","src":"9054:3:24"},"nativeSrc":"9054:20:24","nodeType":"YulFunctionCall","src":"9054:20:24"}],"functionName":{"name":"mstore","nativeSrc":"9026:6:24","nodeType":"YulIdentifier","src":"9026:6:24"},"nativeSrc":"9026:49:24","nodeType":"YulFunctionCall","src":"9026:49:24"},"nativeSrc":"9026:49:24","nodeType":"YulExpressionStatement","src":"9026:49:24"},{"nativeSrc":"9084:116:24","nodeType":"YulAssignment","src":"9084:116:24","value":{"arguments":[{"name":"value6","nativeSrc":"9186:6:24","nodeType":"YulIdentifier","src":"9186:6:24"},{"name":"tail","nativeSrc":"9195:4:24","nodeType":"YulIdentifier","src":"9195:4:24"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9092:93:24","nodeType":"YulIdentifier","src":"9092:93:24"},"nativeSrc":"9092:108:24","nodeType":"YulFunctionCall","src":"9092:108:24"},"variableNames":[{"name":"tail","nativeSrc":"9084:4:24","nodeType":"YulIdentifier","src":"9084:4:24"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7992:1215:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8270:9:24","nodeType":"YulTypedName","src":"8270:9:24","type":""},{"name":"value6","nativeSrc":"8282:6:24","nodeType":"YulTypedName","src":"8282:6:24","type":""},{"name":"value5","nativeSrc":"8290:6:24","nodeType":"YulTypedName","src":"8290:6:24","type":""},{"name":"value4","nativeSrc":"8298:6:24","nodeType":"YulTypedName","src":"8298:6:24","type":""},{"name":"value3","nativeSrc":"8306:6:24","nodeType":"YulTypedName","src":"8306:6:24","type":""},{"name":"value2","nativeSrc":"8314:6:24","nodeType":"YulTypedName","src":"8314:6:24","type":""},{"name":"value1","nativeSrc":"8322:6:24","nodeType":"YulTypedName","src":"8322:6:24","type":""},{"name":"value0","nativeSrc":"8330:6:24","nodeType":"YulTypedName","src":"8330:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8341:4:24","nodeType":"YulTypedName","src":"8341:4:24","type":""}],"src":"7992:1215:24"},{"body":{"nativeSrc":"9311:124:24","nodeType":"YulBlock","src":"9311:124:24","statements":[{"nativeSrc":"9321:26:24","nodeType":"YulAssignment","src":"9321:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"9333:9:24","nodeType":"YulIdentifier","src":"9333:9:24"},{"kind":"number","nativeSrc":"9344:2:24","nodeType":"YulLiteral","src":"9344:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9329:3:24","nodeType":"YulIdentifier","src":"9329:3:24"},"nativeSrc":"9329:18:24","nodeType":"YulFunctionCall","src":"9329:18:24"},"variableNames":[{"name":"tail","nativeSrc":"9321:4:24","nodeType":"YulIdentifier","src":"9321:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9401:6:24","nodeType":"YulIdentifier","src":"9401:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"9414:9:24","nodeType":"YulIdentifier","src":"9414:9:24"},{"kind":"number","nativeSrc":"9425:1:24","nodeType":"YulLiteral","src":"9425:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9410:3:24","nodeType":"YulIdentifier","src":"9410:3:24"},"nativeSrc":"9410:17:24","nodeType":"YulFunctionCall","src":"9410:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9357:43:24","nodeType":"YulIdentifier","src":"9357:43:24"},"nativeSrc":"9357:71:24","nodeType":"YulFunctionCall","src":"9357:71:24"},"nativeSrc":"9357:71:24","nodeType":"YulExpressionStatement","src":"9357:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9213:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9283:9:24","nodeType":"YulTypedName","src":"9283:9:24","type":""},{"name":"value0","nativeSrc":"9295:6:24","nodeType":"YulTypedName","src":"9295:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9306:4:24","nodeType":"YulTypedName","src":"9306:4:24","type":""}],"src":"9213:222:24"},{"body":{"nativeSrc":"9482:77:24","nodeType":"YulBlock","src":"9482:77:24","statements":[{"body":{"nativeSrc":"9537:16:24","nodeType":"YulBlock","src":"9537:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9546:1:24","nodeType":"YulLiteral","src":"9546:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"9549:1:24","nodeType":"YulLiteral","src":"9549:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9539:6:24","nodeType":"YulIdentifier","src":"9539:6:24"},"nativeSrc":"9539:12:24","nodeType":"YulFunctionCall","src":"9539:12:24"},"nativeSrc":"9539:12:24","nodeType":"YulExpressionStatement","src":"9539:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9505:5:24","nodeType":"YulIdentifier","src":"9505:5:24"},{"arguments":[{"name":"value","nativeSrc":"9528:5:24","nodeType":"YulIdentifier","src":"9528:5:24"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9512:15:24","nodeType":"YulIdentifier","src":"9512:15:24"},"nativeSrc":"9512:22:24","nodeType":"YulFunctionCall","src":"9512:22:24"}],"functionName":{"name":"eq","nativeSrc":"9502:2:24","nodeType":"YulIdentifier","src":"9502:2:24"},"nativeSrc":"9502:33:24","nodeType":"YulFunctionCall","src":"9502:33:24"}],"functionName":{"name":"iszero","nativeSrc":"9495:6:24","nodeType":"YulIdentifier","src":"9495:6:24"},"nativeSrc":"9495:41:24","nodeType":"YulFunctionCall","src":"9495:41:24"},"nativeSrc":"9492:61:24","nodeType":"YulIf","src":"9492:61:24"}]},"name":"validator_revert_t_uint8","nativeSrc":"9441:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9475:5:24","nodeType":"YulTypedName","src":"9475:5:24","type":""}],"src":"9441:118:24"},{"body":{"nativeSrc":"9615:85:24","nodeType":"YulBlock","src":"9615:85:24","statements":[{"nativeSrc":"9625:29:24","nodeType":"YulAssignment","src":"9625:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"9647:6:24","nodeType":"YulIdentifier","src":"9647:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"9634:12:24","nodeType":"YulIdentifier","src":"9634:12:24"},"nativeSrc":"9634:20:24","nodeType":"YulFunctionCall","src":"9634:20:24"},"variableNames":[{"name":"value","nativeSrc":"9625:5:24","nodeType":"YulIdentifier","src":"9625:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9688:5:24","nodeType":"YulIdentifier","src":"9688:5:24"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"9663:24:24","nodeType":"YulIdentifier","src":"9663:24:24"},"nativeSrc":"9663:31:24","nodeType":"YulFunctionCall","src":"9663:31:24"},"nativeSrc":"9663:31:24","nodeType":"YulExpressionStatement","src":"9663:31:24"}]},"name":"abi_decode_t_uint8","nativeSrc":"9565:135:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9593:6:24","nodeType":"YulTypedName","src":"9593:6:24","type":""},{"name":"end","nativeSrc":"9601:3:24","nodeType":"YulTypedName","src":"9601:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9609:5:24","nodeType":"YulTypedName","src":"9609:5:24","type":""}],"src":"9565:135:24"},{"body":{"nativeSrc":"9749:79:24","nodeType":"YulBlock","src":"9749:79:24","statements":[{"body":{"nativeSrc":"9806:16:24","nodeType":"YulBlock","src":"9806:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9815:1:24","nodeType":"YulLiteral","src":"9815:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"9818:1:24","nodeType":"YulLiteral","src":"9818:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9808:6:24","nodeType":"YulIdentifier","src":"9808:6:24"},"nativeSrc":"9808:12:24","nodeType":"YulFunctionCall","src":"9808:12:24"},"nativeSrc":"9808:12:24","nodeType":"YulExpressionStatement","src":"9808:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9772:5:24","nodeType":"YulIdentifier","src":"9772:5:24"},{"arguments":[{"name":"value","nativeSrc":"9797:5:24","nodeType":"YulIdentifier","src":"9797:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9779:17:24","nodeType":"YulIdentifier","src":"9779:17:24"},"nativeSrc":"9779:24:24","nodeType":"YulFunctionCall","src":"9779:24:24"}],"functionName":{"name":"eq","nativeSrc":"9769:2:24","nodeType":"YulIdentifier","src":"9769:2:24"},"nativeSrc":"9769:35:24","nodeType":"YulFunctionCall","src":"9769:35:24"}],"functionName":{"name":"iszero","nativeSrc":"9762:6:24","nodeType":"YulIdentifier","src":"9762:6:24"},"nativeSrc":"9762:43:24","nodeType":"YulFunctionCall","src":"9762:43:24"},"nativeSrc":"9759:63:24","nodeType":"YulIf","src":"9759:63:24"}]},"name":"validator_revert_t_bytes32","nativeSrc":"9706:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9742:5:24","nodeType":"YulTypedName","src":"9742:5:24","type":""}],"src":"9706:122:24"},{"body":{"nativeSrc":"9886:87:24","nodeType":"YulBlock","src":"9886:87:24","statements":[{"nativeSrc":"9896:29:24","nodeType":"YulAssignment","src":"9896:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"9918:6:24","nodeType":"YulIdentifier","src":"9918:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"9905:12:24","nodeType":"YulIdentifier","src":"9905:12:24"},"nativeSrc":"9905:20:24","nodeType":"YulFunctionCall","src":"9905:20:24"},"variableNames":[{"name":"value","nativeSrc":"9896:5:24","nodeType":"YulIdentifier","src":"9896:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9961:5:24","nodeType":"YulIdentifier","src":"9961:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"9934:26:24","nodeType":"YulIdentifier","src":"9934:26:24"},"nativeSrc":"9934:33:24","nodeType":"YulFunctionCall","src":"9934:33:24"},"nativeSrc":"9934:33:24","nodeType":"YulExpressionStatement","src":"9934:33:24"}]},"name":"abi_decode_t_bytes32","nativeSrc":"9834:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9864:6:24","nodeType":"YulTypedName","src":"9864:6:24","type":""},{"name":"end","nativeSrc":"9872:3:24","nodeType":"YulTypedName","src":"9872:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9880:5:24","nodeType":"YulTypedName","src":"9880:5:24","type":""}],"src":"9834:139:24"},{"body":{"nativeSrc":"10145:1033:24","nodeType":"YulBlock","src":"10145:1033:24","statements":[{"body":{"nativeSrc":"10192:83:24","nodeType":"YulBlock","src":"10192:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10194:77:24","nodeType":"YulIdentifier","src":"10194:77:24"},"nativeSrc":"10194:79:24","nodeType":"YulFunctionCall","src":"10194:79:24"},"nativeSrc":"10194:79:24","nodeType":"YulExpressionStatement","src":"10194:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10166:7:24","nodeType":"YulIdentifier","src":"10166:7:24"},{"name":"headStart","nativeSrc":"10175:9:24","nodeType":"YulIdentifier","src":"10175:9:24"}],"functionName":{"name":"sub","nativeSrc":"10162:3:24","nodeType":"YulIdentifier","src":"10162:3:24"},"nativeSrc":"10162:23:24","nodeType":"YulFunctionCall","src":"10162:23:24"},{"kind":"number","nativeSrc":"10187:3:24","nodeType":"YulLiteral","src":"10187:3:24","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"10158:3:24","nodeType":"YulIdentifier","src":"10158:3:24"},"nativeSrc":"10158:33:24","nodeType":"YulFunctionCall","src":"10158:33:24"},"nativeSrc":"10155:120:24","nodeType":"YulIf","src":"10155:120:24"},{"nativeSrc":"10285:117:24","nodeType":"YulBlock","src":"10285:117:24","statements":[{"nativeSrc":"10300:15:24","nodeType":"YulVariableDeclaration","src":"10300:15:24","value":{"kind":"number","nativeSrc":"10314:1:24","nodeType":"YulLiteral","src":"10314:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10304:6:24","nodeType":"YulTypedName","src":"10304:6:24","type":""}]},{"nativeSrc":"10329:63:24","nodeType":"YulAssignment","src":"10329:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10364:9:24","nodeType":"YulIdentifier","src":"10364:9:24"},{"name":"offset","nativeSrc":"10375:6:24","nodeType":"YulIdentifier","src":"10375:6:24"}],"functionName":{"name":"add","nativeSrc":"10360:3:24","nodeType":"YulIdentifier","src":"10360:3:24"},"nativeSrc":"10360:22:24","nodeType":"YulFunctionCall","src":"10360:22:24"},{"name":"dataEnd","nativeSrc":"10384:7:24","nodeType":"YulIdentifier","src":"10384:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10339:20:24","nodeType":"YulIdentifier","src":"10339:20:24"},"nativeSrc":"10339:53:24","nodeType":"YulFunctionCall","src":"10339:53:24"},"variableNames":[{"name":"value0","nativeSrc":"10329:6:24","nodeType":"YulIdentifier","src":"10329:6:24"}]}]},{"nativeSrc":"10412:118:24","nodeType":"YulBlock","src":"10412:118:24","statements":[{"nativeSrc":"10427:16:24","nodeType":"YulVariableDeclaration","src":"10427:16:24","value":{"kind":"number","nativeSrc":"10441:2:24","nodeType":"YulLiteral","src":"10441:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10431:6:24","nodeType":"YulTypedName","src":"10431:6:24","type":""}]},{"nativeSrc":"10457:63:24","nodeType":"YulAssignment","src":"10457:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10492:9:24","nodeType":"YulIdentifier","src":"10492:9:24"},{"name":"offset","nativeSrc":"10503:6:24","nodeType":"YulIdentifier","src":"10503:6:24"}],"functionName":{"name":"add","nativeSrc":"10488:3:24","nodeType":"YulIdentifier","src":"10488:3:24"},"nativeSrc":"10488:22:24","nodeType":"YulFunctionCall","src":"10488:22:24"},{"name":"dataEnd","nativeSrc":"10512:7:24","nodeType":"YulIdentifier","src":"10512:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10467:20:24","nodeType":"YulIdentifier","src":"10467:20:24"},"nativeSrc":"10467:53:24","nodeType":"YulFunctionCall","src":"10467:53:24"},"variableNames":[{"name":"value1","nativeSrc":"10457:6:24","nodeType":"YulIdentifier","src":"10457:6:24"}]}]},{"nativeSrc":"10540:118:24","nodeType":"YulBlock","src":"10540:118:24","statements":[{"nativeSrc":"10555:16:24","nodeType":"YulVariableDeclaration","src":"10555:16:24","value":{"kind":"number","nativeSrc":"10569:2:24","nodeType":"YulLiteral","src":"10569:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"10559:6:24","nodeType":"YulTypedName","src":"10559:6:24","type":""}]},{"nativeSrc":"10585:63:24","nodeType":"YulAssignment","src":"10585:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10620:9:24","nodeType":"YulIdentifier","src":"10620:9:24"},{"name":"offset","nativeSrc":"10631:6:24","nodeType":"YulIdentifier","src":"10631:6:24"}],"functionName":{"name":"add","nativeSrc":"10616:3:24","nodeType":"YulIdentifier","src":"10616:3:24"},"nativeSrc":"10616:22:24","nodeType":"YulFunctionCall","src":"10616:22:24"},{"name":"dataEnd","nativeSrc":"10640:7:24","nodeType":"YulIdentifier","src":"10640:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10595:20:24","nodeType":"YulIdentifier","src":"10595:20:24"},"nativeSrc":"10595:53:24","nodeType":"YulFunctionCall","src":"10595:53:24"},"variableNames":[{"name":"value2","nativeSrc":"10585:6:24","nodeType":"YulIdentifier","src":"10585:6:24"}]}]},{"nativeSrc":"10668:118:24","nodeType":"YulBlock","src":"10668:118:24","statements":[{"nativeSrc":"10683:16:24","nodeType":"YulVariableDeclaration","src":"10683:16:24","value":{"kind":"number","nativeSrc":"10697:2:24","nodeType":"YulLiteral","src":"10697:2:24","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"10687:6:24","nodeType":"YulTypedName","src":"10687:6:24","type":""}]},{"nativeSrc":"10713:63:24","nodeType":"YulAssignment","src":"10713:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10748:9:24","nodeType":"YulIdentifier","src":"10748:9:24"},{"name":"offset","nativeSrc":"10759:6:24","nodeType":"YulIdentifier","src":"10759:6:24"}],"functionName":{"name":"add","nativeSrc":"10744:3:24","nodeType":"YulIdentifier","src":"10744:3:24"},"nativeSrc":"10744:22:24","nodeType":"YulFunctionCall","src":"10744:22:24"},{"name":"dataEnd","nativeSrc":"10768:7:24","nodeType":"YulIdentifier","src":"10768:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10723:20:24","nodeType":"YulIdentifier","src":"10723:20:24"},"nativeSrc":"10723:53:24","nodeType":"YulFunctionCall","src":"10723:53:24"},"variableNames":[{"name":"value3","nativeSrc":"10713:6:24","nodeType":"YulIdentifier","src":"10713:6:24"}]}]},{"nativeSrc":"10796:117:24","nodeType":"YulBlock","src":"10796:117:24","statements":[{"nativeSrc":"10811:17:24","nodeType":"YulVariableDeclaration","src":"10811:17:24","value":{"kind":"number","nativeSrc":"10825:3:24","nodeType":"YulLiteral","src":"10825:3:24","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"10815:6:24","nodeType":"YulTypedName","src":"10815:6:24","type":""}]},{"nativeSrc":"10842:61:24","nodeType":"YulAssignment","src":"10842:61:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10875:9:24","nodeType":"YulIdentifier","src":"10875:9:24"},{"name":"offset","nativeSrc":"10886:6:24","nodeType":"YulIdentifier","src":"10886:6:24"}],"functionName":{"name":"add","nativeSrc":"10871:3:24","nodeType":"YulIdentifier","src":"10871:3:24"},"nativeSrc":"10871:22:24","nodeType":"YulFunctionCall","src":"10871:22:24"},{"name":"dataEnd","nativeSrc":"10895:7:24","nodeType":"YulIdentifier","src":"10895:7:24"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"10852:18:24","nodeType":"YulIdentifier","src":"10852:18:24"},"nativeSrc":"10852:51:24","nodeType":"YulFunctionCall","src":"10852:51:24"},"variableNames":[{"name":"value4","nativeSrc":"10842:6:24","nodeType":"YulIdentifier","src":"10842:6:24"}]}]},{"nativeSrc":"10923:119:24","nodeType":"YulBlock","src":"10923:119:24","statements":[{"nativeSrc":"10938:17:24","nodeType":"YulVariableDeclaration","src":"10938:17:24","value":{"kind":"number","nativeSrc":"10952:3:24","nodeType":"YulLiteral","src":"10952:3:24","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10942:6:24","nodeType":"YulTypedName","src":"10942:6:24","type":""}]},{"nativeSrc":"10969:63:24","nodeType":"YulAssignment","src":"10969:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11004:9:24","nodeType":"YulIdentifier","src":"11004:9:24"},{"name":"offset","nativeSrc":"11015:6:24","nodeType":"YulIdentifier","src":"11015:6:24"}],"functionName":{"name":"add","nativeSrc":"11000:3:24","nodeType":"YulIdentifier","src":"11000:3:24"},"nativeSrc":"11000:22:24","nodeType":"YulFunctionCall","src":"11000:22:24"},{"name":"dataEnd","nativeSrc":"11024:7:24","nodeType":"YulIdentifier","src":"11024:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10979:20:24","nodeType":"YulIdentifier","src":"10979:20:24"},"nativeSrc":"10979:53:24","nodeType":"YulFunctionCall","src":"10979:53:24"},"variableNames":[{"name":"value5","nativeSrc":"10969:6:24","nodeType":"YulIdentifier","src":"10969:6:24"}]}]},{"nativeSrc":"11052:119:24","nodeType":"YulBlock","src":"11052:119:24","statements":[{"nativeSrc":"11067:17:24","nodeType":"YulVariableDeclaration","src":"11067:17:24","value":{"kind":"number","nativeSrc":"11081:3:24","nodeType":"YulLiteral","src":"11081:3:24","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"11071:6:24","nodeType":"YulTypedName","src":"11071:6:24","type":""}]},{"nativeSrc":"11098:63:24","nodeType":"YulAssignment","src":"11098:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11133:9:24","nodeType":"YulIdentifier","src":"11133:9:24"},{"name":"offset","nativeSrc":"11144:6:24","nodeType":"YulIdentifier","src":"11144:6:24"}],"functionName":{"name":"add","nativeSrc":"11129:3:24","nodeType":"YulIdentifier","src":"11129:3:24"},"nativeSrc":"11129:22:24","nodeType":"YulFunctionCall","src":"11129:22:24"},{"name":"dataEnd","nativeSrc":"11153:7:24","nodeType":"YulIdentifier","src":"11153:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"11108:20:24","nodeType":"YulIdentifier","src":"11108:20:24"},"nativeSrc":"11108:53:24","nodeType":"YulFunctionCall","src":"11108:53:24"},"variableNames":[{"name":"value6","nativeSrc":"11098:6:24","nodeType":"YulIdentifier","src":"11098:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"9979:1199:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10067:9:24","nodeType":"YulTypedName","src":"10067:9:24","type":""},{"name":"dataEnd","nativeSrc":"10078:7:24","nodeType":"YulTypedName","src":"10078:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10090:6:24","nodeType":"YulTypedName","src":"10090:6:24","type":""},{"name":"value1","nativeSrc":"10098:6:24","nodeType":"YulTypedName","src":"10098:6:24","type":""},{"name":"value2","nativeSrc":"10106:6:24","nodeType":"YulTypedName","src":"10106:6:24","type":""},{"name":"value3","nativeSrc":"10114:6:24","nodeType":"YulTypedName","src":"10114:6:24","type":""},{"name":"value4","nativeSrc":"10122:6:24","nodeType":"YulTypedName","src":"10122:6:24","type":""},{"name":"value5","nativeSrc":"10130:6:24","nodeType":"YulTypedName","src":"10130:6:24","type":""},{"name":"value6","nativeSrc":"10138:6:24","nodeType":"YulTypedName","src":"10138:6:24","type":""}],"src":"9979:1199:24"},{"body":{"nativeSrc":"11267:391:24","nodeType":"YulBlock","src":"11267:391:24","statements":[{"body":{"nativeSrc":"11313:83:24","nodeType":"YulBlock","src":"11313:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11315:77:24","nodeType":"YulIdentifier","src":"11315:77:24"},"nativeSrc":"11315:79:24","nodeType":"YulFunctionCall","src":"11315:79:24"},"nativeSrc":"11315:79:24","nodeType":"YulExpressionStatement","src":"11315:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11288:7:24","nodeType":"YulIdentifier","src":"11288:7:24"},{"name":"headStart","nativeSrc":"11297:9:24","nodeType":"YulIdentifier","src":"11297:9:24"}],"functionName":{"name":"sub","nativeSrc":"11284:3:24","nodeType":"YulIdentifier","src":"11284:3:24"},"nativeSrc":"11284:23:24","nodeType":"YulFunctionCall","src":"11284:23:24"},{"kind":"number","nativeSrc":"11309:2:24","nodeType":"YulLiteral","src":"11309:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11280:3:24","nodeType":"YulIdentifier","src":"11280:3:24"},"nativeSrc":"11280:32:24","nodeType":"YulFunctionCall","src":"11280:32:24"},"nativeSrc":"11277:119:24","nodeType":"YulIf","src":"11277:119:24"},{"nativeSrc":"11406:117:24","nodeType":"YulBlock","src":"11406:117:24","statements":[{"nativeSrc":"11421:15:24","nodeType":"YulVariableDeclaration","src":"11421:15:24","value":{"kind":"number","nativeSrc":"11435:1:24","nodeType":"YulLiteral","src":"11435:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11425:6:24","nodeType":"YulTypedName","src":"11425:6:24","type":""}]},{"nativeSrc":"11450:63:24","nodeType":"YulAssignment","src":"11450:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11485:9:24","nodeType":"YulIdentifier","src":"11485:9:24"},{"name":"offset","nativeSrc":"11496:6:24","nodeType":"YulIdentifier","src":"11496:6:24"}],"functionName":{"name":"add","nativeSrc":"11481:3:24","nodeType":"YulIdentifier","src":"11481:3:24"},"nativeSrc":"11481:22:24","nodeType":"YulFunctionCall","src":"11481:22:24"},{"name":"dataEnd","nativeSrc":"11505:7:24","nodeType":"YulIdentifier","src":"11505:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11460:20:24","nodeType":"YulIdentifier","src":"11460:20:24"},"nativeSrc":"11460:53:24","nodeType":"YulFunctionCall","src":"11460:53:24"},"variableNames":[{"name":"value0","nativeSrc":"11450:6:24","nodeType":"YulIdentifier","src":"11450:6:24"}]}]},{"nativeSrc":"11533:118:24","nodeType":"YulBlock","src":"11533:118:24","statements":[{"nativeSrc":"11548:16:24","nodeType":"YulVariableDeclaration","src":"11548:16:24","value":{"kind":"number","nativeSrc":"11562:2:24","nodeType":"YulLiteral","src":"11562:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11552:6:24","nodeType":"YulTypedName","src":"11552:6:24","type":""}]},{"nativeSrc":"11578:63:24","nodeType":"YulAssignment","src":"11578:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11613:9:24","nodeType":"YulIdentifier","src":"11613:9:24"},{"name":"offset","nativeSrc":"11624:6:24","nodeType":"YulIdentifier","src":"11624:6:24"}],"functionName":{"name":"add","nativeSrc":"11609:3:24","nodeType":"YulIdentifier","src":"11609:3:24"},"nativeSrc":"11609:22:24","nodeType":"YulFunctionCall","src":"11609:22:24"},{"name":"dataEnd","nativeSrc":"11633:7:24","nodeType":"YulIdentifier","src":"11633:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11588:20:24","nodeType":"YulIdentifier","src":"11588:20:24"},"nativeSrc":"11588:53:24","nodeType":"YulFunctionCall","src":"11588:53:24"},"variableNames":[{"name":"value1","nativeSrc":"11578:6:24","nodeType":"YulIdentifier","src":"11578:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"11184:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11229:9:24","nodeType":"YulTypedName","src":"11229:9:24","type":""},{"name":"dataEnd","nativeSrc":"11240:7:24","nodeType":"YulTypedName","src":"11240:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11252:6:24","nodeType":"YulTypedName","src":"11252:6:24","type":""},{"name":"value1","nativeSrc":"11260:6:24","nodeType":"YulTypedName","src":"11260:6:24","type":""}],"src":"11184:474:24"},{"body":{"nativeSrc":"11692:152:24","nodeType":"YulBlock","src":"11692:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11709:1:24","nodeType":"YulLiteral","src":"11709:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"11712:77:24","nodeType":"YulLiteral","src":"11712:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11702:6:24","nodeType":"YulIdentifier","src":"11702:6:24"},"nativeSrc":"11702:88:24","nodeType":"YulFunctionCall","src":"11702:88:24"},"nativeSrc":"11702:88:24","nodeType":"YulExpressionStatement","src":"11702:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11806:1:24","nodeType":"YulLiteral","src":"11806:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"11809:4:24","nodeType":"YulLiteral","src":"11809:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11799:6:24","nodeType":"YulIdentifier","src":"11799:6:24"},"nativeSrc":"11799:15:24","nodeType":"YulFunctionCall","src":"11799:15:24"},"nativeSrc":"11799:15:24","nodeType":"YulExpressionStatement","src":"11799:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11830:1:24","nodeType":"YulLiteral","src":"11830:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"11833:4:24","nodeType":"YulLiteral","src":"11833:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11823:6:24","nodeType":"YulIdentifier","src":"11823:6:24"},"nativeSrc":"11823:15:24","nodeType":"YulFunctionCall","src":"11823:15:24"},"nativeSrc":"11823:15:24","nodeType":"YulExpressionStatement","src":"11823:15:24"}]},"name":"panic_error_0x22","nativeSrc":"11664:180:24","nodeType":"YulFunctionDefinition","src":"11664:180:24"},{"body":{"nativeSrc":"11901:269:24","nodeType":"YulBlock","src":"11901:269:24","statements":[{"nativeSrc":"11911:22:24","nodeType":"YulAssignment","src":"11911:22:24","value":{"arguments":[{"name":"data","nativeSrc":"11925:4:24","nodeType":"YulIdentifier","src":"11925:4:24"},{"kind":"number","nativeSrc":"11931:1:24","nodeType":"YulLiteral","src":"11931:1:24","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11921:3:24","nodeType":"YulIdentifier","src":"11921:3:24"},"nativeSrc":"11921:12:24","nodeType":"YulFunctionCall","src":"11921:12:24"},"variableNames":[{"name":"length","nativeSrc":"11911:6:24","nodeType":"YulIdentifier","src":"11911:6:24"}]},{"nativeSrc":"11942:38:24","nodeType":"YulVariableDeclaration","src":"11942:38:24","value":{"arguments":[{"name":"data","nativeSrc":"11972:4:24","nodeType":"YulIdentifier","src":"11972:4:24"},{"kind":"number","nativeSrc":"11978:1:24","nodeType":"YulLiteral","src":"11978:1:24","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11968:3:24","nodeType":"YulIdentifier","src":"11968:3:24"},"nativeSrc":"11968:12:24","nodeType":"YulFunctionCall","src":"11968:12:24"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11946:18:24","nodeType":"YulTypedName","src":"11946:18:24","type":""}]},{"body":{"nativeSrc":"12019:51:24","nodeType":"YulBlock","src":"12019:51:24","statements":[{"nativeSrc":"12033:27:24","nodeType":"YulAssignment","src":"12033:27:24","value":{"arguments":[{"name":"length","nativeSrc":"12047:6:24","nodeType":"YulIdentifier","src":"12047:6:24"},{"kind":"number","nativeSrc":"12055:4:24","nodeType":"YulLiteral","src":"12055:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12043:3:24","nodeType":"YulIdentifier","src":"12043:3:24"},"nativeSrc":"12043:17:24","nodeType":"YulFunctionCall","src":"12043:17:24"},"variableNames":[{"name":"length","nativeSrc":"12033:6:24","nodeType":"YulIdentifier","src":"12033:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11999:18:24","nodeType":"YulIdentifier","src":"11999:18:24"}],"functionName":{"name":"iszero","nativeSrc":"11992:6:24","nodeType":"YulIdentifier","src":"11992:6:24"},"nativeSrc":"11992:26:24","nodeType":"YulFunctionCall","src":"11992:26:24"},"nativeSrc":"11989:81:24","nodeType":"YulIf","src":"11989:81:24"},{"body":{"nativeSrc":"12122:42:24","nodeType":"YulBlock","src":"12122:42:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"12136:16:24","nodeType":"YulIdentifier","src":"12136:16:24"},"nativeSrc":"12136:18:24","nodeType":"YulFunctionCall","src":"12136:18:24"},"nativeSrc":"12136:18:24","nodeType":"YulExpressionStatement","src":"12136:18:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12086:18:24","nodeType":"YulIdentifier","src":"12086:18:24"},{"arguments":[{"name":"length","nativeSrc":"12109:6:24","nodeType":"YulIdentifier","src":"12109:6:24"},{"kind":"number","nativeSrc":"12117:2:24","nodeType":"YulLiteral","src":"12117:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12106:2:24","nodeType":"YulIdentifier","src":"12106:2:24"},"nativeSrc":"12106:14:24","nodeType":"YulFunctionCall","src":"12106:14:24"}],"functionName":{"name":"eq","nativeSrc":"12083:2:24","nodeType":"YulIdentifier","src":"12083:2:24"},"nativeSrc":"12083:38:24","nodeType":"YulFunctionCall","src":"12083:38:24"},"nativeSrc":"12080:84:24","nodeType":"YulIf","src":"12080:84:24"}]},"name":"extract_byte_array_length","nativeSrc":"11850:320:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11885:4:24","nodeType":"YulTypedName","src":"11885:4:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11894:6:24","nodeType":"YulTypedName","src":"11894:6:24","type":""}],"src":"11850:320:24"},{"body":{"nativeSrc":"12204:152:24","nodeType":"YulBlock","src":"12204:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12221:1:24","nodeType":"YulLiteral","src":"12221:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"12224:77:24","nodeType":"YulLiteral","src":"12224:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12214:6:24","nodeType":"YulIdentifier","src":"12214:6:24"},"nativeSrc":"12214:88:24","nodeType":"YulFunctionCall","src":"12214:88:24"},"nativeSrc":"12214:88:24","nodeType":"YulExpressionStatement","src":"12214:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12318:1:24","nodeType":"YulLiteral","src":"12318:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"12321:4:24","nodeType":"YulLiteral","src":"12321:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"12311:6:24","nodeType":"YulIdentifier","src":"12311:6:24"},"nativeSrc":"12311:15:24","nodeType":"YulFunctionCall","src":"12311:15:24"},"nativeSrc":"12311:15:24","nodeType":"YulExpressionStatement","src":"12311:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12342:1:24","nodeType":"YulLiteral","src":"12342:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"12345:4:24","nodeType":"YulLiteral","src":"12345:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12335:6:24","nodeType":"YulIdentifier","src":"12335:6:24"},"nativeSrc":"12335:15:24","nodeType":"YulFunctionCall","src":"12335:15:24"},"nativeSrc":"12335:15:24","nodeType":"YulExpressionStatement","src":"12335:15:24"}]},"name":"panic_error_0x41","nativeSrc":"12176:180:24","nodeType":"YulFunctionDefinition","src":"12176:180:24"},{"body":{"nativeSrc":"12600:537:24","nodeType":"YulBlock","src":"12600:537:24","statements":[{"nativeSrc":"12610:27:24","nodeType":"YulAssignment","src":"12610:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"12622:9:24","nodeType":"YulIdentifier","src":"12622:9:24"},{"kind":"number","nativeSrc":"12633:3:24","nodeType":"YulLiteral","src":"12633:3:24","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12618:3:24","nodeType":"YulIdentifier","src":"12618:3:24"},"nativeSrc":"12618:19:24","nodeType":"YulFunctionCall","src":"12618:19:24"},"variableNames":[{"name":"tail","nativeSrc":"12610:4:24","nodeType":"YulIdentifier","src":"12610:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12691:6:24","nodeType":"YulIdentifier","src":"12691:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12704:9:24","nodeType":"YulIdentifier","src":"12704:9:24"},{"kind":"number","nativeSrc":"12715:1:24","nodeType":"YulLiteral","src":"12715:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12700:3:24","nodeType":"YulIdentifier","src":"12700:3:24"},"nativeSrc":"12700:17:24","nodeType":"YulFunctionCall","src":"12700:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12647:43:24","nodeType":"YulIdentifier","src":"12647:43:24"},"nativeSrc":"12647:71:24","nodeType":"YulFunctionCall","src":"12647:71:24"},"nativeSrc":"12647:71:24","nodeType":"YulExpressionStatement","src":"12647:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12772:6:24","nodeType":"YulIdentifier","src":"12772:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12785:9:24","nodeType":"YulIdentifier","src":"12785:9:24"},{"kind":"number","nativeSrc":"12796:2:24","nodeType":"YulLiteral","src":"12796:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12781:3:24","nodeType":"YulIdentifier","src":"12781:3:24"},"nativeSrc":"12781:18:24","nodeType":"YulFunctionCall","src":"12781:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12728:43:24","nodeType":"YulIdentifier","src":"12728:43:24"},"nativeSrc":"12728:72:24","nodeType":"YulFunctionCall","src":"12728:72:24"},"nativeSrc":"12728:72:24","nodeType":"YulExpressionStatement","src":"12728:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12854:6:24","nodeType":"YulIdentifier","src":"12854:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12867:9:24","nodeType":"YulIdentifier","src":"12867:9:24"},{"kind":"number","nativeSrc":"12878:2:24","nodeType":"YulLiteral","src":"12878:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12863:3:24","nodeType":"YulIdentifier","src":"12863:3:24"},"nativeSrc":"12863:18:24","nodeType":"YulFunctionCall","src":"12863:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12810:43:24","nodeType":"YulIdentifier","src":"12810:43:24"},"nativeSrc":"12810:72:24","nodeType":"YulFunctionCall","src":"12810:72:24"},"nativeSrc":"12810:72:24","nodeType":"YulExpressionStatement","src":"12810:72:24"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12936:6:24","nodeType":"YulIdentifier","src":"12936:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12949:9:24","nodeType":"YulIdentifier","src":"12949:9:24"},{"kind":"number","nativeSrc":"12960:2:24","nodeType":"YulLiteral","src":"12960:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12945:3:24","nodeType":"YulIdentifier","src":"12945:3:24"},"nativeSrc":"12945:18:24","nodeType":"YulFunctionCall","src":"12945:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12892:43:24","nodeType":"YulIdentifier","src":"12892:43:24"},"nativeSrc":"12892:72:24","nodeType":"YulFunctionCall","src":"12892:72:24"},"nativeSrc":"12892:72:24","nodeType":"YulExpressionStatement","src":"12892:72:24"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"13018:6:24","nodeType":"YulIdentifier","src":"13018:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"13031:9:24","nodeType":"YulIdentifier","src":"13031:9:24"},{"kind":"number","nativeSrc":"13042:3:24","nodeType":"YulLiteral","src":"13042:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13027:3:24","nodeType":"YulIdentifier","src":"13027:3:24"},"nativeSrc":"13027:19:24","nodeType":"YulFunctionCall","src":"13027:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12974:43:24","nodeType":"YulIdentifier","src":"12974:43:24"},"nativeSrc":"12974:73:24","nodeType":"YulFunctionCall","src":"12974:73:24"},"nativeSrc":"12974:73:24","nodeType":"YulExpressionStatement","src":"12974:73:24"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"13101:6:24","nodeType":"YulIdentifier","src":"13101:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"13114:9:24","nodeType":"YulIdentifier","src":"13114:9:24"},{"kind":"number","nativeSrc":"13125:3:24","nodeType":"YulLiteral","src":"13125:3:24","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"13110:3:24","nodeType":"YulIdentifier","src":"13110:3:24"},"nativeSrc":"13110:19:24","nodeType":"YulFunctionCall","src":"13110:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13057:43:24","nodeType":"YulIdentifier","src":"13057:43:24"},"nativeSrc":"13057:73:24","nodeType":"YulFunctionCall","src":"13057:73:24"},"nativeSrc":"13057:73:24","nodeType":"YulExpressionStatement","src":"13057:73:24"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12362:775:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12532:9:24","nodeType":"YulTypedName","src":"12532:9:24","type":""},{"name":"value5","nativeSrc":"12544:6:24","nodeType":"YulTypedName","src":"12544:6:24","type":""},{"name":"value4","nativeSrc":"12552:6:24","nodeType":"YulTypedName","src":"12552:6:24","type":""},{"name":"value3","nativeSrc":"12560:6:24","nodeType":"YulTypedName","src":"12560:6:24","type":""},{"name":"value2","nativeSrc":"12568:6:24","nodeType":"YulTypedName","src":"12568:6:24","type":""},{"name":"value1","nativeSrc":"12576:6:24","nodeType":"YulTypedName","src":"12576:6:24","type":""},{"name":"value0","nativeSrc":"12584:6:24","nodeType":"YulTypedName","src":"12584:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12595:4:24","nodeType":"YulTypedName","src":"12595:4:24","type":""}],"src":"12362:775:24"},{"body":{"nativeSrc":"13269:206:24","nodeType":"YulBlock","src":"13269:206:24","statements":[{"nativeSrc":"13279:26:24","nodeType":"YulAssignment","src":"13279:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"13291:9:24","nodeType":"YulIdentifier","src":"13291:9:24"},{"kind":"number","nativeSrc":"13302:2:24","nodeType":"YulLiteral","src":"13302:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13287:3:24","nodeType":"YulIdentifier","src":"13287:3:24"},"nativeSrc":"13287:18:24","nodeType":"YulFunctionCall","src":"13287:18:24"},"variableNames":[{"name":"tail","nativeSrc":"13279:4:24","nodeType":"YulIdentifier","src":"13279:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13359:6:24","nodeType":"YulIdentifier","src":"13359:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"13372:9:24","nodeType":"YulIdentifier","src":"13372:9:24"},{"kind":"number","nativeSrc":"13383:1:24","nodeType":"YulLiteral","src":"13383:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13368:3:24","nodeType":"YulIdentifier","src":"13368:3:24"},"nativeSrc":"13368:17:24","nodeType":"YulFunctionCall","src":"13368:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13315:43:24","nodeType":"YulIdentifier","src":"13315:43:24"},"nativeSrc":"13315:71:24","nodeType":"YulFunctionCall","src":"13315:71:24"},"nativeSrc":"13315:71:24","nodeType":"YulExpressionStatement","src":"13315:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13440:6:24","nodeType":"YulIdentifier","src":"13440:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"13453:9:24","nodeType":"YulIdentifier","src":"13453:9:24"},{"kind":"number","nativeSrc":"13464:2:24","nodeType":"YulLiteral","src":"13464:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13449:3:24","nodeType":"YulIdentifier","src":"13449:3:24"},"nativeSrc":"13449:18:24","nodeType":"YulFunctionCall","src":"13449:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13396:43:24","nodeType":"YulIdentifier","src":"13396:43:24"},"nativeSrc":"13396:72:24","nodeType":"YulFunctionCall","src":"13396:72:24"},"nativeSrc":"13396:72:24","nodeType":"YulExpressionStatement","src":"13396:72:24"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"13143:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13233:9:24","nodeType":"YulTypedName","src":"13233:9:24","type":""},{"name":"value1","nativeSrc":"13245:6:24","nodeType":"YulTypedName","src":"13245:6:24","type":""},{"name":"value0","nativeSrc":"13253:6:24","nodeType":"YulTypedName","src":"13253:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13264:4:24","nodeType":"YulTypedName","src":"13264:4:24","type":""}],"src":"13143:332:24"},{"body":{"nativeSrc":"13635:288:24","nodeType":"YulBlock","src":"13635:288:24","statements":[{"nativeSrc":"13645:26:24","nodeType":"YulAssignment","src":"13645:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"13657:9:24","nodeType":"YulIdentifier","src":"13657:9:24"},{"kind":"number","nativeSrc":"13668:2:24","nodeType":"YulLiteral","src":"13668:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13653:3:24","nodeType":"YulIdentifier","src":"13653:3:24"},"nativeSrc":"13653:18:24","nodeType":"YulFunctionCall","src":"13653:18:24"},"variableNames":[{"name":"tail","nativeSrc":"13645:4:24","nodeType":"YulIdentifier","src":"13645:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13725:6:24","nodeType":"YulIdentifier","src":"13725:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"13738:9:24","nodeType":"YulIdentifier","src":"13738:9:24"},{"kind":"number","nativeSrc":"13749:1:24","nodeType":"YulLiteral","src":"13749:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13734:3:24","nodeType":"YulIdentifier","src":"13734:3:24"},"nativeSrc":"13734:17:24","nodeType":"YulFunctionCall","src":"13734:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13681:43:24","nodeType":"YulIdentifier","src":"13681:43:24"},"nativeSrc":"13681:71:24","nodeType":"YulFunctionCall","src":"13681:71:24"},"nativeSrc":"13681:71:24","nodeType":"YulExpressionStatement","src":"13681:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13806:6:24","nodeType":"YulIdentifier","src":"13806:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"13819:9:24","nodeType":"YulIdentifier","src":"13819:9:24"},{"kind":"number","nativeSrc":"13830:2:24","nodeType":"YulLiteral","src":"13830:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13815:3:24","nodeType":"YulIdentifier","src":"13815:3:24"},"nativeSrc":"13815:18:24","nodeType":"YulFunctionCall","src":"13815:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13762:43:24","nodeType":"YulIdentifier","src":"13762:43:24"},"nativeSrc":"13762:72:24","nodeType":"YulFunctionCall","src":"13762:72:24"},"nativeSrc":"13762:72:24","nodeType":"YulExpressionStatement","src":"13762:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13888:6:24","nodeType":"YulIdentifier","src":"13888:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"13901:9:24","nodeType":"YulIdentifier","src":"13901:9:24"},{"kind":"number","nativeSrc":"13912:2:24","nodeType":"YulLiteral","src":"13912:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13897:3:24","nodeType":"YulIdentifier","src":"13897:3:24"},"nativeSrc":"13897:18:24","nodeType":"YulFunctionCall","src":"13897:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13844:43:24","nodeType":"YulIdentifier","src":"13844:43:24"},"nativeSrc":"13844:72:24","nodeType":"YulFunctionCall","src":"13844:72:24"},"nativeSrc":"13844:72:24","nodeType":"YulExpressionStatement","src":"13844:72:24"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13481:442:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13591:9:24","nodeType":"YulTypedName","src":"13591:9:24","type":""},{"name":"value2","nativeSrc":"13603:6:24","nodeType":"YulTypedName","src":"13603:6:24","type":""},{"name":"value1","nativeSrc":"13611:6:24","nodeType":"YulTypedName","src":"13611:6:24","type":""},{"name":"value0","nativeSrc":"13619:6:24","nodeType":"YulTypedName","src":"13619:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13630:4:24","nodeType":"YulTypedName","src":"13630:4:24","type":""}],"src":"13481:442:24"},{"body":{"nativeSrc":"13957:152:24","nodeType":"YulBlock","src":"13957:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13974:1:24","nodeType":"YulLiteral","src":"13974:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"13977:77:24","nodeType":"YulLiteral","src":"13977:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13967:6:24","nodeType":"YulIdentifier","src":"13967:6:24"},"nativeSrc":"13967:88:24","nodeType":"YulFunctionCall","src":"13967:88:24"},"nativeSrc":"13967:88:24","nodeType":"YulExpressionStatement","src":"13967:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14071:1:24","nodeType":"YulLiteral","src":"14071:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"14074:4:24","nodeType":"YulLiteral","src":"14074:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14064:6:24","nodeType":"YulIdentifier","src":"14064:6:24"},"nativeSrc":"14064:15:24","nodeType":"YulFunctionCall","src":"14064:15:24"},"nativeSrc":"14064:15:24","nodeType":"YulExpressionStatement","src":"14064:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14095:1:24","nodeType":"YulLiteral","src":"14095:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"14098:4:24","nodeType":"YulLiteral","src":"14098:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14088:6:24","nodeType":"YulIdentifier","src":"14088:6:24"},"nativeSrc":"14088:15:24","nodeType":"YulFunctionCall","src":"14088:15:24"},"nativeSrc":"14088:15:24","nodeType":"YulExpressionStatement","src":"14088:15:24"}]},"name":"panic_error_0x11","nativeSrc":"13929:180:24","nodeType":"YulFunctionDefinition","src":"13929:180:24"},{"body":{"nativeSrc":"14159:147:24","nodeType":"YulBlock","src":"14159:147:24","statements":[{"nativeSrc":"14169:25:24","nodeType":"YulAssignment","src":"14169:25:24","value":{"arguments":[{"name":"x","nativeSrc":"14192:1:24","nodeType":"YulIdentifier","src":"14192:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14174:17:24","nodeType":"YulIdentifier","src":"14174:17:24"},"nativeSrc":"14174:20:24","nodeType":"YulFunctionCall","src":"14174:20:24"},"variableNames":[{"name":"x","nativeSrc":"14169:1:24","nodeType":"YulIdentifier","src":"14169:1:24"}]},{"nativeSrc":"14203:25:24","nodeType":"YulAssignment","src":"14203:25:24","value":{"arguments":[{"name":"y","nativeSrc":"14226:1:24","nodeType":"YulIdentifier","src":"14226:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14208:17:24","nodeType":"YulIdentifier","src":"14208:17:24"},"nativeSrc":"14208:20:24","nodeType":"YulFunctionCall","src":"14208:20:24"},"variableNames":[{"name":"y","nativeSrc":"14203:1:24","nodeType":"YulIdentifier","src":"14203:1:24"}]},{"nativeSrc":"14237:16:24","nodeType":"YulAssignment","src":"14237:16:24","value":{"arguments":[{"name":"x","nativeSrc":"14248:1:24","nodeType":"YulIdentifier","src":"14248:1:24"},{"name":"y","nativeSrc":"14251:1:24","nodeType":"YulIdentifier","src":"14251:1:24"}],"functionName":{"name":"add","nativeSrc":"14244:3:24","nodeType":"YulIdentifier","src":"14244:3:24"},"nativeSrc":"14244:9:24","nodeType":"YulFunctionCall","src":"14244:9:24"},"variableNames":[{"name":"sum","nativeSrc":"14237:3:24","nodeType":"YulIdentifier","src":"14237:3:24"}]},{"body":{"nativeSrc":"14277:22:24","nodeType":"YulBlock","src":"14277:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14279:16:24","nodeType":"YulIdentifier","src":"14279:16:24"},"nativeSrc":"14279:18:24","nodeType":"YulFunctionCall","src":"14279:18:24"},"nativeSrc":"14279:18:24","nodeType":"YulExpressionStatement","src":"14279:18:24"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"14269:1:24","nodeType":"YulIdentifier","src":"14269:1:24"},{"name":"sum","nativeSrc":"14272:3:24","nodeType":"YulIdentifier","src":"14272:3:24"}],"functionName":{"name":"gt","nativeSrc":"14266:2:24","nodeType":"YulIdentifier","src":"14266:2:24"},"nativeSrc":"14266:10:24","nodeType":"YulFunctionCall","src":"14266:10:24"},"nativeSrc":"14263:36:24","nodeType":"YulIf","src":"14263:36:24"}]},"name":"checked_add_t_uint256","nativeSrc":"14115:191:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14146:1:24","nodeType":"YulTypedName","src":"14146:1:24","type":""},{"name":"y","nativeSrc":"14149:1:24","nodeType":"YulTypedName","src":"14149:1:24","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"14155:3:24","nodeType":"YulTypedName","src":"14155:3:24","type":""}],"src":"14115:191:24"},{"body":{"nativeSrc":"14522:454:24","nodeType":"YulBlock","src":"14522:454:24","statements":[{"nativeSrc":"14532:27:24","nodeType":"YulAssignment","src":"14532:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"14544:9:24","nodeType":"YulIdentifier","src":"14544:9:24"},{"kind":"number","nativeSrc":"14555:3:24","nodeType":"YulLiteral","src":"14555:3:24","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14540:3:24","nodeType":"YulIdentifier","src":"14540:3:24"},"nativeSrc":"14540:19:24","nodeType":"YulFunctionCall","src":"14540:19:24"},"variableNames":[{"name":"tail","nativeSrc":"14532:4:24","nodeType":"YulIdentifier","src":"14532:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14613:6:24","nodeType":"YulIdentifier","src":"14613:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"14626:9:24","nodeType":"YulIdentifier","src":"14626:9:24"},{"kind":"number","nativeSrc":"14637:1:24","nodeType":"YulLiteral","src":"14637:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14622:3:24","nodeType":"YulIdentifier","src":"14622:3:24"},"nativeSrc":"14622:17:24","nodeType":"YulFunctionCall","src":"14622:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14569:43:24","nodeType":"YulIdentifier","src":"14569:43:24"},"nativeSrc":"14569:71:24","nodeType":"YulFunctionCall","src":"14569:71:24"},"nativeSrc":"14569:71:24","nodeType":"YulExpressionStatement","src":"14569:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14694:6:24","nodeType":"YulIdentifier","src":"14694:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"14707:9:24","nodeType":"YulIdentifier","src":"14707:9:24"},{"kind":"number","nativeSrc":"14718:2:24","nodeType":"YulLiteral","src":"14718:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14703:3:24","nodeType":"YulIdentifier","src":"14703:3:24"},"nativeSrc":"14703:18:24","nodeType":"YulFunctionCall","src":"14703:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14650:43:24","nodeType":"YulIdentifier","src":"14650:43:24"},"nativeSrc":"14650:72:24","nodeType":"YulFunctionCall","src":"14650:72:24"},"nativeSrc":"14650:72:24","nodeType":"YulExpressionStatement","src":"14650:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14776:6:24","nodeType":"YulIdentifier","src":"14776:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"14789:9:24","nodeType":"YulIdentifier","src":"14789:9:24"},{"kind":"number","nativeSrc":"14800:2:24","nodeType":"YulLiteral","src":"14800:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14785:3:24","nodeType":"YulIdentifier","src":"14785:3:24"},"nativeSrc":"14785:18:24","nodeType":"YulFunctionCall","src":"14785:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14732:43:24","nodeType":"YulIdentifier","src":"14732:43:24"},"nativeSrc":"14732:72:24","nodeType":"YulFunctionCall","src":"14732:72:24"},"nativeSrc":"14732:72:24","nodeType":"YulExpressionStatement","src":"14732:72:24"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14858:6:24","nodeType":"YulIdentifier","src":"14858:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"14871:9:24","nodeType":"YulIdentifier","src":"14871:9:24"},{"kind":"number","nativeSrc":"14882:2:24","nodeType":"YulLiteral","src":"14882:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14867:3:24","nodeType":"YulIdentifier","src":"14867:3:24"},"nativeSrc":"14867:18:24","nodeType":"YulFunctionCall","src":"14867:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14814:43:24","nodeType":"YulIdentifier","src":"14814:43:24"},"nativeSrc":"14814:72:24","nodeType":"YulFunctionCall","src":"14814:72:24"},"nativeSrc":"14814:72:24","nodeType":"YulExpressionStatement","src":"14814:72:24"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14940:6:24","nodeType":"YulIdentifier","src":"14940:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"14953:9:24","nodeType":"YulIdentifier","src":"14953:9:24"},{"kind":"number","nativeSrc":"14964:3:24","nodeType":"YulLiteral","src":"14964:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14949:3:24","nodeType":"YulIdentifier","src":"14949:3:24"},"nativeSrc":"14949:19:24","nodeType":"YulFunctionCall","src":"14949:19:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14896:43:24","nodeType":"YulIdentifier","src":"14896:43:24"},"nativeSrc":"14896:73:24","nodeType":"YulFunctionCall","src":"14896:73:24"},"nativeSrc":"14896:73:24","nodeType":"YulExpressionStatement","src":"14896:73:24"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"14312:664:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14462:9:24","nodeType":"YulTypedName","src":"14462:9:24","type":""},{"name":"value4","nativeSrc":"14474:6:24","nodeType":"YulTypedName","src":"14474:6:24","type":""},{"name":"value3","nativeSrc":"14482:6:24","nodeType":"YulTypedName","src":"14482:6:24","type":""},{"name":"value2","nativeSrc":"14490:6:24","nodeType":"YulTypedName","src":"14490:6:24","type":""},{"name":"value1","nativeSrc":"14498:6:24","nodeType":"YulTypedName","src":"14498:6:24","type":""},{"name":"value0","nativeSrc":"14506:6:24","nodeType":"YulTypedName","src":"14506:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14517:4:24","nodeType":"YulTypedName","src":"14517:4:24","type":""}],"src":"14312:664:24"},{"body":{"nativeSrc":"15160:367:24","nodeType":"YulBlock","src":"15160:367:24","statements":[{"nativeSrc":"15170:27:24","nodeType":"YulAssignment","src":"15170:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"15182:9:24","nodeType":"YulIdentifier","src":"15182:9:24"},{"kind":"number","nativeSrc":"15193:3:24","nodeType":"YulLiteral","src":"15193:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15178:3:24","nodeType":"YulIdentifier","src":"15178:3:24"},"nativeSrc":"15178:19:24","nodeType":"YulFunctionCall","src":"15178:19:24"},"variableNames":[{"name":"tail","nativeSrc":"15170:4:24","nodeType":"YulIdentifier","src":"15170:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15251:6:24","nodeType":"YulIdentifier","src":"15251:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"15264:9:24","nodeType":"YulIdentifier","src":"15264:9:24"},{"kind":"number","nativeSrc":"15275:1:24","nodeType":"YulLiteral","src":"15275:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15260:3:24","nodeType":"YulIdentifier","src":"15260:3:24"},"nativeSrc":"15260:17:24","nodeType":"YulFunctionCall","src":"15260:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15207:43:24","nodeType":"YulIdentifier","src":"15207:43:24"},"nativeSrc":"15207:71:24","nodeType":"YulFunctionCall","src":"15207:71:24"},"nativeSrc":"15207:71:24","nodeType":"YulExpressionStatement","src":"15207:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15328:6:24","nodeType":"YulIdentifier","src":"15328:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"15341:9:24","nodeType":"YulIdentifier","src":"15341:9:24"},{"kind":"number","nativeSrc":"15352:2:24","nodeType":"YulLiteral","src":"15352:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15337:3:24","nodeType":"YulIdentifier","src":"15337:3:24"},"nativeSrc":"15337:18:24","nodeType":"YulFunctionCall","src":"15337:18:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"15288:39:24","nodeType":"YulIdentifier","src":"15288:39:24"},"nativeSrc":"15288:68:24","nodeType":"YulFunctionCall","src":"15288:68:24"},"nativeSrc":"15288:68:24","nodeType":"YulExpressionStatement","src":"15288:68:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15410:6:24","nodeType":"YulIdentifier","src":"15410:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"15423:9:24","nodeType":"YulIdentifier","src":"15423:9:24"},{"kind":"number","nativeSrc":"15434:2:24","nodeType":"YulLiteral","src":"15434:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15419:3:24","nodeType":"YulIdentifier","src":"15419:3:24"},"nativeSrc":"15419:18:24","nodeType":"YulFunctionCall","src":"15419:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15366:43:24","nodeType":"YulIdentifier","src":"15366:43:24"},"nativeSrc":"15366:72:24","nodeType":"YulFunctionCall","src":"15366:72:24"},"nativeSrc":"15366:72:24","nodeType":"YulExpressionStatement","src":"15366:72:24"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15492:6:24","nodeType":"YulIdentifier","src":"15492:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"15505:9:24","nodeType":"YulIdentifier","src":"15505:9:24"},{"kind":"number","nativeSrc":"15516:2:24","nodeType":"YulLiteral","src":"15516:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15501:3:24","nodeType":"YulIdentifier","src":"15501:3:24"},"nativeSrc":"15501:18:24","nodeType":"YulFunctionCall","src":"15501:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15448:43:24","nodeType":"YulIdentifier","src":"15448:43:24"},"nativeSrc":"15448:72:24","nodeType":"YulFunctionCall","src":"15448:72:24"},"nativeSrc":"15448:72:24","nodeType":"YulExpressionStatement","src":"15448:72:24"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"14982:545:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15108:9:24","nodeType":"YulTypedName","src":"15108:9:24","type":""},{"name":"value3","nativeSrc":"15120:6:24","nodeType":"YulTypedName","src":"15120:6:24","type":""},{"name":"value2","nativeSrc":"15128:6:24","nodeType":"YulTypedName","src":"15128:6:24","type":""},{"name":"value1","nativeSrc":"15136:6:24","nodeType":"YulTypedName","src":"15136:6:24","type":""},{"name":"value0","nativeSrc":"15144:6:24","nodeType":"YulTypedName","src":"15144:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15155:4:24","nodeType":"YulTypedName","src":"15155:4:24","type":""}],"src":"14982:545:24"},{"body":{"nativeSrc":"15561:152:24","nodeType":"YulBlock","src":"15561:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15578:1:24","nodeType":"YulLiteral","src":"15578:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"15581:77:24","nodeType":"YulLiteral","src":"15581:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15571:6:24","nodeType":"YulIdentifier","src":"15571:6:24"},"nativeSrc":"15571:88:24","nodeType":"YulFunctionCall","src":"15571:88:24"},"nativeSrc":"15571:88:24","nodeType":"YulExpressionStatement","src":"15571:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15675:1:24","nodeType":"YulLiteral","src":"15675:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"15678:4:24","nodeType":"YulLiteral","src":"15678:4:24","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15668:6:24","nodeType":"YulIdentifier","src":"15668:6:24"},"nativeSrc":"15668:15:24","nodeType":"YulFunctionCall","src":"15668:15:24"},"nativeSrc":"15668:15:24","nodeType":"YulExpressionStatement","src":"15668:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15699:1:24","nodeType":"YulLiteral","src":"15699:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"15702:4:24","nodeType":"YulLiteral","src":"15702:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15692:6:24","nodeType":"YulIdentifier","src":"15692:6:24"},"nativeSrc":"15692:15:24","nodeType":"YulFunctionCall","src":"15692:15:24"},"nativeSrc":"15692:15:24","nodeType":"YulExpressionStatement","src":"15692:15:24"}]},"name":"panic_error_0x21","nativeSrc":"15533:180:24","nodeType":"YulFunctionDefinition","src":"15533:180:24"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2825":[{"length":32,"start":3042}],"2827":[{"length":32,"start":3001}],"2829":[{"length":32,"start":2915}],"2831":[{"length":32,"start":5096}],"2833":[{"length":32,"start":5129}],"2836":[{"length":32,"start":3769}],"2839":[{"length":32,"start":3828}],"4301":[{"length":32,"start":1190}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad57806395d89b411161007157806395d89b41146102fe578063a9059cbb1461031c578063d505accf1461034c578063dd62ed3e14610368578063f2fde38b1461039857610121565b8063715018a61461026657806379cc6790146102705780637ecebe001461028c57806384b0196e146102bc5780638da5cb5b146102e057610121565b8063313ce567116100f4578063313ce567146101c25780633644e515146101e057806340c10f19146101fe57806342966c681461021a57806370a082311461023657610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103b4565b60405161013b91906118f6565b60405180910390f35b61015e600480360381019061015991906119b1565b610446565b60405161016b9190611a0c565b60405180910390f35b61017c610469565b6040516101899190611a36565b60405180910390f35b6101ac60048036038101906101a79190611a51565b610473565b6040516101b99190611a0c565b60405180910390f35b6101ca6104a2565b6040516101d79190611ac0565b60405180910390f35b6101e86104ca565b6040516101f59190611af4565b60405180910390f35b610218600480360381019061021391906119b1565b6104d9565b005b610234600480360381019061022f9190611b0f565b61053d565b005b610250600480360381019061024b9190611b3c565b610551565b60405161025d9190611a36565b60405180910390f35b61026e610599565b005b61028a600480360381019061028591906119b1565b6105ad565b005b6102a660048036038101906102a19190611b3c565b6105cd565b6040516102b39190611a36565b60405180910390f35b6102c46105df565b6040516102d79796959493929190611c71565b60405180910390f35b6102e8610689565b6040516102f59190611cf5565b60405180910390f35b6103066106b3565b60405161031391906118f6565b60405180910390f35b610336600480360381019061033191906119b1565b610745565b6040516103439190611a0c565b60405180910390f35b61036660048036038101906103619190611d68565b610768565b005b610382600480360381019061037d9190611e0a565b6108b0565b60405161038f9190611a36565b60405180910390f35b6103b260048036038101906103ad9190611b3c565b610937565b005b6060600380546103c390611e79565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611e79565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b6000806104516109bd565b905061045e8185856109c5565b600191505092915050565b6000600254905090565b60008061047e6109bd565b905061048b8582856109d7565b610496858585610a6b565b60019150509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006104d4610b5f565b905090565b6104e1610c16565b6104eb8282610c9d565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516105319190611a36565b60405180910390a25050565b61054e6105486109bd565b82610d1f565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105a1610c16565b6105ab6000610da1565b565b6105bf826105b96109bd565b836109d7565b6105c98282610d1f565b5050565b60006105d882610e67565b9050919050565b6000606080600080600060606105f3610eb0565b6105fb610eeb565b46306000801b600067ffffffffffffffff81111561061c5761061b611eaa565b5b60405190808252806020026020018201604052801561064a5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106c290611e79565b80601f01602080910402602001604051908101604052809291908181526020018280546106ee90611e79565b801561073b5780601f106107105761010080835404028352916020019161073b565b820191906000526020600020905b81548152906001019060200180831161071e57829003601f168201915b5050505050905090565b6000806107506109bd565b905061075d818585610a6b565b600191505092915050565b834211156107ad57836040517f627913020000000000000000000000000000000000000000000000000000000081526004016107a49190611a36565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107dc8c610f26565b896040516020016107f296959493929190611ed9565b604051602081830303815290604052805190602001209050600061081582610f7d565b9050600061082582878787610f97565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461089957808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610890929190611f3a565b60405180910390fd5b6108a48a8a8a6109c5565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61093f610c16565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109a89190611cf5565b60405180910390fd5b6109ba81610da1565b50565b600033905090565b6109d28383836001610fc7565b505050565b60006109e384846108b0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a655781811015610a55578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a4c93929190611f63565b60405180910390fd5b610a6484848484036000610fc7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610add5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ad49190611cf5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b4f5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b469190611cf5565b60405180910390fd5b610b5a83838361119e565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610bdb57507f000000000000000000000000000000000000000000000000000000000000000046145b15610c08577f00000000000000000000000000000000000000000000000000000000000000009050610c13565b610c106113c3565b90505b90565b610c1e6109bd565b73ffffffffffffffffffffffffffffffffffffffff16610c3c610689565b73ffffffffffffffffffffffffffffffffffffffff1614610c9b57610c5f6109bd565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c929190611cf5565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d0f5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d069190611cf5565b60405180910390fd5b610d1b6000838361119e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d915760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d889190611cf5565b60405180910390fd5b610d9d8260008361119e565b5050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610ee660057f000000000000000000000000000000000000000000000000000000000000000061145990919063ffffffff16565b905090565b6060610f2160067f000000000000000000000000000000000000000000000000000000000000000061145990919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610f90610f8a610b5f565b83611509565b9050919050565b600080600080610fa98888888861154a565b925092509250610fb9828261163e565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110395760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110309190611cf5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ab5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110a29190611cf5565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611198578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161118f9190611a36565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111f05780600260008282546111e49190611fc9565b925050819055506112c3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561127c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161127393929190611f63565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361130c5780600260008282540392505081905550611359565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113b69190611a36565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161143e959493929190611ffd565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146114765761146f836117a2565b9050611503565b81805461148290611e79565b80601f01602080910402602001604051908101604052809291908181526020018280546114ae90611e79565b80156114fb5780601f106114d0576101008083540402835291602001916114fb565b820191906000526020600020905b8154815290600101906020018083116114de57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561158a576000600385925092509250611634565b6000600188888888604051600081526020016040526040516115af9493929190612050565b6020604051602081039080840390855afa1580156115d1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361162557600060016000801b93509350935050611634565b8060008060001b935093509350505b9450945094915050565b6000600381111561165257611651612095565b5b82600381111561166557611664612095565b5b031561179e576001600381111561167f5761167e612095565b5b82600381111561169257611691612095565b5b036116c9576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156116dd576116dc612095565b5b8260038111156116f0576116ef612095565b5b03611735578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161172c9190611a36565b60405180910390fd5b60038081111561174857611747612095565b5b82600381111561175b5761175a612095565b5b0361179d57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016117949190611af4565b60405180910390fd5b5b5050565b606060006117af83611816565b90506000602067ffffffffffffffff8111156117ce576117cd611eaa565b5b6040519080825280601f01601f1916602001820160405280156118005781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f81111561185d576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118a0578082015181840152602081019050611885565b60008484015250505050565b6000601f19601f8301169050919050565b60006118c882611866565b6118d28185611871565b93506118e2818560208601611882565b6118eb816118ac565b840191505092915050565b6000602082019050818103600083015261191081846118bd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119488261191d565b9050919050565b6119588161193d565b811461196357600080fd5b50565b6000813590506119758161194f565b92915050565b6000819050919050565b61198e8161197b565b811461199957600080fd5b50565b6000813590506119ab81611985565b92915050565b600080604083850312156119c8576119c7611918565b5b60006119d685828601611966565b92505060206119e78582860161199c565b9150509250929050565b60008115159050919050565b611a06816119f1565b82525050565b6000602082019050611a2160008301846119fd565b92915050565b611a308161197b565b82525050565b6000602082019050611a4b6000830184611a27565b92915050565b600080600060608486031215611a6a57611a69611918565b5b6000611a7886828701611966565b9350506020611a8986828701611966565b9250506040611a9a8682870161199c565b9150509250925092565b600060ff82169050919050565b611aba81611aa4565b82525050565b6000602082019050611ad56000830184611ab1565b92915050565b6000819050919050565b611aee81611adb565b82525050565b6000602082019050611b096000830184611ae5565b92915050565b600060208284031215611b2557611b24611918565b5b6000611b338482850161199c565b91505092915050565b600060208284031215611b5257611b51611918565b5b6000611b6084828501611966565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b9e81611b69565b82525050565b611bad8161193d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611be88161197b565b82525050565b6000611bfa8383611bdf565b60208301905092915050565b6000602082019050919050565b6000611c1e82611bb3565b611c288185611bbe565b9350611c3383611bcf565b8060005b83811015611c64578151611c4b8882611bee565b9750611c5683611c06565b925050600181019050611c37565b5085935050505092915050565b600060e082019050611c86600083018a611b95565b8181036020830152611c9881896118bd565b90508181036040830152611cac81886118bd565b9050611cbb6060830187611a27565b611cc86080830186611ba4565b611cd560a0830185611ae5565b81810360c0830152611ce78184611c13565b905098975050505050505050565b6000602082019050611d0a6000830184611ba4565b92915050565b611d1981611aa4565b8114611d2457600080fd5b50565b600081359050611d3681611d10565b92915050565b611d4581611adb565b8114611d5057600080fd5b50565b600081359050611d6281611d3c565b92915050565b600080600080600080600060e0888a031215611d8757611d86611918565b5b6000611d958a828b01611966565b9750506020611da68a828b01611966565b9650506040611db78a828b0161199c565b9550506060611dc88a828b0161199c565b9450506080611dd98a828b01611d27565b93505060a0611dea8a828b01611d53565b92505060c0611dfb8a828b01611d53565b91505092959891949750929550565b60008060408385031215611e2157611e20611918565b5b6000611e2f85828601611966565b9250506020611e4085828601611966565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e9157607f821691505b602082108103611ea457611ea3611e4a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611eee6000830189611ae5565b611efb6020830188611ba4565b611f086040830187611ba4565b611f156060830186611a27565b611f226080830185611a27565b611f2f60a0830184611a27565b979650505050505050565b6000604082019050611f4f6000830185611ba4565b611f5c6020830184611ba4565b9392505050565b6000606082019050611f786000830186611ba4565b611f856020830185611a27565b611f926040830184611a27565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fd48261197b565b9150611fdf8361197b565b9250828201905080821115611ff757611ff6611f9a565b5b92915050565b600060a0820190506120126000830188611ae5565b61201f6020830187611ae5565b61202c6040830186611ae5565b6120396060830185611a27565b6120466080830184611ba4565b9695505050505050565b60006080820190506120656000830187611ae5565b6120726020830186611ab1565b61207f6040830185611ae5565b61208c6060830184611ae5565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220add52b7969b780d48b19bf2887c9194af3cae820aa68d429fb62acc6e07a355e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x398 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x236 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x599 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3C3 SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EF SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x411 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x451 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH2 0x45E DUP2 DUP6 DUP6 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x47E PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH2 0x48B DUP6 DUP3 DUP6 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x496 DUP6 DUP6 DUP6 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4 PUSH2 0xB5F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x4EB DUP3 DUP3 PUSH2 0xC9D JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x54E PUSH2 0x548 PUSH2 0x9BD JUMP JUMPDEST DUP3 PUSH2 0xD1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x5AB PUSH1 0x0 PUSH2 0xDA1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH2 0x5B9 PUSH2 0x9BD JUMP JUMPDEST DUP4 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x5C9 DUP3 DUP3 PUSH2 0xD1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D8 DUP3 PUSH2 0xE67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x5F3 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0xEEB JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x64A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x710 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x750 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH2 0x75D DUP2 DUP6 DUP6 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x7AD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7DC DUP13 PUSH2 0xF26 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7F2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x815 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x825 DUP3 DUP8 DUP8 DUP8 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x899 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A4 DUP11 DUP11 DUP11 PUSH2 0x9C5 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x93F PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BA DUP2 PUSH2 0xDA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E3 DUP5 DUP5 PUSH2 0x8B0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA65 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA55 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA64 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xFC7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5A DUP4 DUP4 DUP4 PUSH2 0x119E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBDB JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC08 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC13 JUMP JUMPDEST PUSH2 0xC10 PUSH2 0x13C3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC1E PUSH2 0x9BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC3C PUSH2 0x689 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9B JUMPI PUSH2 0xC5F PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1B PUSH1 0x0 DUP4 DUP4 PUSH2 0x119E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD91 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9D DUP3 PUSH1 0x0 DUP4 PUSH2 0x119E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEE6 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1459 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF21 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1459 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF90 PUSH2 0xF8A PUSH2 0xB5F JUMP JUMPDEST DUP4 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xFA9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x154A JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xFB9 DUP3 DUP3 PUSH2 0x163E JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1039 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10AB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A2 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1198 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x127C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1273 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1359 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B6 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x143E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1476 JUMPI PUSH2 0x146F DUP4 PUSH2 0x17A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1503 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1482 SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14AE SWAP1 PUSH2 0x1E79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x158A JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x15AF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1625 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1634 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1652 JUMPI PUSH2 0x1651 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1665 JUMPI PUSH2 0x1664 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x179E JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1735 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172C SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x2095 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x2095 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x179D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x17AF DUP4 PUSH2 0x1816 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x1EAA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1800 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C8 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x18D2 DUP2 DUP6 PUSH2 0x1871 JUMP JUMPDEST SWAP4 POP PUSH2 0x18E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST PUSH2 0x18EB DUP2 PUSH2 0x18AC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1910 DUP2 DUP5 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1948 DUP3 PUSH2 0x191D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1958 DUP2 PUSH2 0x193D JUMP JUMPDEST DUP2 EQ PUSH2 0x1963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1975 DUP2 PUSH2 0x194F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198E DUP2 PUSH2 0x197B JUMP JUMPDEST DUP2 EQ PUSH2 0x1999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AB DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C8 JUMPI PUSH2 0x19C7 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E7 DUP6 DUP3 DUP7 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A06 DUP2 PUSH2 0x19F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A30 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A78 DUP7 DUP3 DUP8 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A89 DUP7 DUP3 DUP8 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A9A DUP7 DUP3 DUP8 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEE DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B09 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B25 JUMPI PUSH2 0x1B24 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B52 JUMPI PUSH2 0x1B51 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP5 DUP3 DUP6 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9E DUP2 PUSH2 0x1B69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BAD DUP2 PUSH2 0x193D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE8 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFA DUP4 DUP4 PUSH2 0x1BDF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP3 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x1C28 DUP2 DUP6 PUSH2 0x1BBE JUMP JUMPDEST SWAP4 POP PUSH2 0x1C33 DUP4 PUSH2 0x1BCF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C64 JUMPI DUP2 MLOAD PUSH2 0x1C4B DUP9 DUP3 PUSH2 0x1BEE JUMP JUMPDEST SWAP8 POP PUSH2 0x1C56 DUP4 PUSH2 0x1C06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C37 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1B95 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 DUP10 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CAC DUP2 DUP9 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP PUSH2 0x1CBB PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1CC8 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1CD5 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1AE5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1CE7 DUP2 DUP5 PUSH2 0x1C13 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D19 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D36 DUP2 PUSH2 0x1D10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D62 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D95 DUP11 DUP3 DUP12 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DA6 DUP11 DUP3 DUP12 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1DB7 DUP11 DUP3 DUP12 ADD PUSH2 0x199C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1DC8 DUP11 DUP3 DUP12 ADD PUSH2 0x199C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1DD9 DUP11 DUP3 DUP12 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1DEA DUP11 DUP3 DUP12 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1DFB DUP11 DUP3 DUP12 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E21 JUMPI PUSH2 0x1E20 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E2F DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E40 DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E91 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EA4 JUMPI PUSH2 0x1EA3 PUSH2 0x1E4A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1EEE PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x1EFB PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F08 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F15 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1F22 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1F2F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1A27 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F4F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F78 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1F85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1F92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A27 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD4 DUP3 PUSH2 0x197B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDF DUP4 PUSH2 0x197B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FF7 JUMPI PUSH2 0x1FF6 PUSH2 0x1F9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2012 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x201F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x202C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x2039 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x2046 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BA4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2065 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x2072 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE5 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xD5 0x2B PUSH26 0x69B780D48B19BF2887C9194AF3CAE820AA68D429FB62ACC6E07A CALLDATALOAD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"566:2008:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2482:89:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1836:223:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2406:143:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:18;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;2482:89:22:-;2532:5;2556:8;2549:15;;2482:89;:::o;2656:112:6:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;1836:223:22:-;1531:13:0;:11;:13::i;:::-;2000:19:22::1;2006:3;2011:7;2000:5;:19::i;:::-;2039:3;2034:18;;;2044:7;2034:18;;;;;;:::i;:::-;;;;;;;;1836:223:::0;;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2406:143:6:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:18:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:6:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:18:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:12:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:18:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:12:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:18:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:17:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:18:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:14:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:19:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:17:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:14:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:::-;5682:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:119;;;5737:79;;:::i;:::-;5699:119;5857:1;5882:53;5927:7;5918:6;5907:9;5903:22;5882:53;:::i;:::-;5872:63;;5828:117;5623:329;;;;:::o;5958:149::-;5994:7;6034:66;6027:5;6023:78;6012:89;;5958:149;;;:::o;6113:115::-;6198:23;6215:5;6198:23;:::i;:::-;6193:3;6186:36;6113:115;;:::o;6234:118::-;6321:24;6339:5;6321:24;:::i;:::-;6316:3;6309:37;6234:118;;:::o;6358:114::-;6425:6;6459:5;6453:12;6443:22;;6358:114;;;:::o;6478:184::-;6577:11;6611:6;6606:3;6599:19;6651:4;6646:3;6642:14;6627:29;;6478:184;;;;:::o;6668:132::-;6735:4;6758:3;6750:11;;6788:4;6783:3;6779:14;6771:22;;6668:132;;;:::o;6806:108::-;6883:24;6901:5;6883:24;:::i;:::-;6878:3;6871:37;6806:108;;:::o;6920:179::-;6989:10;7010:46;7052:3;7044:6;7010:46;:::i;:::-;7088:4;7083:3;7079:14;7065:28;;6920:179;;;;:::o;7105:113::-;7175:4;7207;7202:3;7198:14;7190:22;;7105:113;;;:::o;7254:732::-;7373:3;7402:54;7450:5;7402:54;:::i;:::-;7472:86;7551:6;7546:3;7472:86;:::i;:::-;7465:93;;7582:56;7632:5;7582:56;:::i;:::-;7661:7;7692:1;7677:284;7702:6;7699:1;7696:13;7677:284;;;7778:6;7772:13;7805:63;7864:3;7849:13;7805:63;:::i;:::-;7798:70;;7891:60;7944:6;7891:60;:::i;:::-;7881:70;;7737:224;7724:1;7721;7717:9;7712:14;;7677:284;;;7681:14;7977:3;7970:10;;7378:608;;;7254:732;;;;:::o;7992:1215::-;8341:4;8379:3;8368:9;8364:19;8356:27;;8393:69;8459:1;8448:9;8444:17;8435:6;8393:69;:::i;:::-;8509:9;8503:4;8499:20;8494:2;8483:9;8479:18;8472:48;8537:78;8610:4;8601:6;8537:78;:::i;:::-;8529:86;;8662:9;8656:4;8652:20;8647:2;8636:9;8632:18;8625:48;8690:78;8763:4;8754:6;8690:78;:::i;:::-;8682:86;;8778:72;8846:2;8835:9;8831:18;8822:6;8778:72;:::i;:::-;8860:73;8928:3;8917:9;8913:19;8904:6;8860:73;:::i;:::-;8943;9011:3;9000:9;8996:19;8987:6;8943:73;:::i;:::-;9064:9;9058:4;9054:20;9048:3;9037:9;9033:19;9026:49;9092:108;9195:4;9186:6;9092:108;:::i;:::-;9084:116;;7992:1215;;;;;;;;;;:::o;9213:222::-;9306:4;9344:2;9333:9;9329:18;9321:26;;9357:71;9425:1;9414:9;9410:17;9401:6;9357:71;:::i;:::-;9213:222;;;;:::o;9441:118::-;9512:22;9528:5;9512:22;:::i;:::-;9505:5;9502:33;9492:61;;9549:1;9546;9539:12;9492:61;9441:118;:::o;9565:135::-;9609:5;9647:6;9634:20;9625:29;;9663:31;9688:5;9663:31;:::i;:::-;9565:135;;;;:::o;9706:122::-;9779:24;9797:5;9779:24;:::i;:::-;9772:5;9769:35;9759:63;;9818:1;9815;9808:12;9759:63;9706:122;:::o;9834:139::-;9880:5;9918:6;9905:20;9896:29;;9934:33;9961:5;9934:33;:::i;:::-;9834:139;;;;:::o;9979:1199::-;10090:6;10098;10106;10114;10122;10130;10138;10187:3;10175:9;10166:7;10162:23;10158:33;10155:120;;;10194:79;;:::i;:::-;10155:120;10314:1;10339:53;10384:7;10375:6;10364:9;10360:22;10339:53;:::i;:::-;10329:63;;10285:117;10441:2;10467:53;10512:7;10503:6;10492:9;10488:22;10467:53;:::i;:::-;10457:63;;10412:118;10569:2;10595:53;10640:7;10631:6;10620:9;10616:22;10595:53;:::i;:::-;10585:63;;10540:118;10697:2;10723:53;10768:7;10759:6;10748:9;10744:22;10723:53;:::i;:::-;10713:63;;10668:118;10825:3;10852:51;10895:7;10886:6;10875:9;10871:22;10852:51;:::i;:::-;10842:61;;10796:117;10952:3;10979:53;11024:7;11015:6;11004:9;11000:22;10979:53;:::i;:::-;10969:63;;10923:119;11081:3;11108:53;11153:7;11144:6;11133:9;11129:22;11108:53;:::i;:::-;11098:63;;11052:119;9979:1199;;;;;;;;;;:::o;11184:474::-;11252:6;11260;11309:2;11297:9;11288:7;11284:23;11280:32;11277:119;;;11315:79;;:::i;:::-;11277:119;11435:1;11460:53;11505:7;11496:6;11485:9;11481:22;11460:53;:::i;:::-;11450:63;;11406:117;11562:2;11588:53;11633:7;11624:6;11613:9;11609:22;11588:53;:::i;:::-;11578:63;;11533:118;11184:474;;;;;:::o;11664:180::-;11712:77;11709:1;11702:88;11809:4;11806:1;11799:15;11833:4;11830:1;11823:15;11850:320;11894:6;11931:1;11925:4;11921:12;11911:22;;11978:1;11972:4;11968:12;11999:18;11989:81;;12055:4;12047:6;12043:17;12033:27;;11989:81;12117:2;12109:6;12106:14;12086:18;12083:38;12080:84;;12136:18;;:::i;:::-;12080:84;11901:269;11850:320;;;:::o;12176:180::-;12224:77;12221:1;12214:88;12321:4;12318:1;12311:15;12345:4;12342:1;12335:15;12362:775;12595:4;12633:3;12622:9;12618:19;12610:27;;12647:71;12715:1;12704:9;12700:17;12691:6;12647:71;:::i;:::-;12728:72;12796:2;12785:9;12781:18;12772:6;12728:72;:::i;:::-;12810;12878:2;12867:9;12863:18;12854:6;12810:72;:::i;:::-;12892;12960:2;12949:9;12945:18;12936:6;12892:72;:::i;:::-;12974:73;13042:3;13031:9;13027:19;13018:6;12974:73;:::i;:::-;13057;13125:3;13114:9;13110:19;13101:6;13057:73;:::i;:::-;12362:775;;;;;;;;;:::o;13143:332::-;13264:4;13302:2;13291:9;13287:18;13279:26;;13315:71;13383:1;13372:9;13368:17;13359:6;13315:71;:::i;:::-;13396:72;13464:2;13453:9;13449:18;13440:6;13396:72;:::i;:::-;13143:332;;;;;:::o;13481:442::-;13630:4;13668:2;13657:9;13653:18;13645:26;;13681:71;13749:1;13738:9;13734:17;13725:6;13681:71;:::i;:::-;13762:72;13830:2;13819:9;13815:18;13806:6;13762:72;:::i;:::-;13844;13912:2;13901:9;13897:18;13888:6;13844:72;:::i;:::-;13481:442;;;;;;:::o;13929:180::-;13977:77;13974:1;13967:88;14074:4;14071:1;14064:15;14098:4;14095:1;14088:15;14115:191;14155:3;14174:20;14192:1;14174:20;:::i;:::-;14169:25;;14208:20;14226:1;14208:20;:::i;:::-;14203:25;;14251:1;14248;14244:9;14237:16;;14272:3;14269:1;14266:10;14263:36;;;14279:18;;:::i;:::-;14263:36;14115:191;;;;:::o;14312:664::-;14517:4;14555:3;14544:9;14540:19;14532:27;;14569:71;14637:1;14626:9;14622:17;14613:6;14569:71;:::i;:::-;14650:72;14718:2;14707:9;14703:18;14694:6;14650:72;:::i;:::-;14732;14800:2;14789:9;14785:18;14776:6;14732:72;:::i;:::-;14814;14882:2;14871:9;14867:18;14858:6;14814:72;:::i;:::-;14896:73;14964:3;14953:9;14949:19;14940:6;14896:73;:::i;:::-;14312:664;;;;;;;;:::o;14982:545::-;15155:4;15193:3;15182:9;15178:19;15170:27;;15207:71;15275:1;15264:9;15260:17;15251:6;15207:71;:::i;:::-;15288:68;15352:2;15341:9;15337:18;15328:6;15288:68;:::i;:::-;15366:72;15434:2;15423:9;15419:18;15410:6;15366:72;:::i;:::-;15448;15516:2;15505:9;15501:18;15492:6;15448:72;:::i;:::-;14982:545;;;;;;;:::o;15533:180::-;15581:77;15578:1;15571:88;15678:4;15675:1;15668:15;15702:4;15699:1;15692:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Burn(address,uint256)\":{\"params\":{\"account\":\"Address of the account tokens are being burned from.\",\"amount\":\"Amount of tokens burned.\"}},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Mint(address,uint256)\":{\"params\":{\"account\":\"Address of the account tokens are being minted for.\",\"amount\":\"Amount of tokens minted.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"params\":{\"_decimals\":\"ERC20 decimals. NOTE: This information is only used for _display_ purposes\",\"_name\":\"ERC20 name.\",\"_symbol\":\"ERC20 symbol.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to mint.\",\"_to\":\"Address to mint tokens to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,uint256)\":{\"notice\":\"Emitted whenever tokens are burned from an account.\"},\"Mint(address,uint256)\":{\"notice\":\"Emitted whenever tokens are minted for an account.\"}},\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Allows the owner to mint tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomERC20.sol\":\"CustomERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/CustomERC20.sol\":{\"keccak256\":\"0x81ca1e56c8fa49edf436026b9648a6ea36f329904af0812d2e38c6e5e1c31ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5d14ca036aaf5451fc38648dc877d59606b619047f9161bc4a479951634f52\",\"dweb:/ipfs/QmNueRmWPUoC1MDEtD2dvVwPNkjgTvzBiusGuQs3S13Bqe\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":332,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":338,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":340,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":342,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":344,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2841,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":2843,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1751,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":8,"contract":"contracts/CustomERC20.sol:CustomERC20","label":"_owner","offset":0,"slot":"8","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}},"IMintableERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"mint(address,uint256)":"40c10f19"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomERC20.sol\":\"IMintableERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/CustomERC20.sol\":{\"keccak256\":\"0x81ca1e56c8fa49edf436026b9648a6ea36f329904af0812d2e38c6e5e1c31ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5d14ca036aaf5451fc38648dc877d59606b619047f9161bc4a479951634f52\",\"dweb:/ipfs/QmNueRmWPUoC1MDEtD2dvVwPNkjgTvzBiusGuQs3S13Bqe\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/FixedRateDistribution.sol":{"FixedRateDistribution":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bool","name":"_paused","type":"bool"},{"internalType":"bool","name":"_multiply","type":"bool"},{"internalType":"uint256","name":"_rate","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_multiply","type":"bool"}],"name":"setMultiply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rate","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1827":{"entryPoint":null,"id":1827,"parameterSlots":0,"returnSlots":0},"@_4471":{"entryPoint":null,"id":4471,"parameterSlots":4,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":332,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":731,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_boolt_boolt_uint256_fromMemory":{"entryPoint":754,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":868,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":885,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":565,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":634,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":533,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":695,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":528,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":585,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":646,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":705,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2729:24","nodeType":"YulBlock","src":"0:2729:24","statements":[{"body":{"nativeSrc":"47:35:24","nodeType":"YulBlock","src":"47:35:24","statements":[{"nativeSrc":"57:19:24","nodeType":"YulAssignment","src":"57:19:24","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:24","nodeType":"YulLiteral","src":"73:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:24","nodeType":"YulIdentifier","src":"67:5:24"},"nativeSrc":"67:9:24","nodeType":"YulFunctionCall","src":"67:9:24"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:24","nodeType":"YulIdentifier","src":"57:6:24"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:24","nodeType":"YulTypedName","src":"40:6:24","type":""}],"src":"7:75:24"},{"body":{"nativeSrc":"177:28:24","nodeType":"YulBlock","src":"177:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:24","nodeType":"YulLiteral","src":"194:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:24","nodeType":"YulLiteral","src":"197:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:24","nodeType":"YulIdentifier","src":"187:6:24"},"nativeSrc":"187:12:24","nodeType":"YulFunctionCall","src":"187:12:24"},"nativeSrc":"187:12:24","nodeType":"YulExpressionStatement","src":"187:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:24","nodeType":"YulFunctionDefinition","src":"88:117:24"},{"body":{"nativeSrc":"300:28:24","nodeType":"YulBlock","src":"300:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:24","nodeType":"YulLiteral","src":"317:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:24","nodeType":"YulLiteral","src":"320:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},"nativeSrc":"310:12:24","nodeType":"YulFunctionCall","src":"310:12:24"},"nativeSrc":"310:12:24","nodeType":"YulExpressionStatement","src":"310:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:24","nodeType":"YulFunctionDefinition","src":"211:117:24"},{"body":{"nativeSrc":"379:81:24","nodeType":"YulBlock","src":"379:81:24","statements":[{"nativeSrc":"389:65:24","nodeType":"YulAssignment","src":"389:65:24","value":{"arguments":[{"name":"value","nativeSrc":"404:5:24","nodeType":"YulIdentifier","src":"404:5:24"},{"kind":"number","nativeSrc":"411:42:24","nodeType":"YulLiteral","src":"411:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:24","nodeType":"YulIdentifier","src":"400:3:24"},"nativeSrc":"400:54:24","nodeType":"YulFunctionCall","src":"400:54:24"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:24","nodeType":"YulIdentifier","src":"389:7:24"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:24","nodeType":"YulTypedName","src":"361:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:24","nodeType":"YulTypedName","src":"371:7:24","type":""}],"src":"334:126:24"},{"body":{"nativeSrc":"511:51:24","nodeType":"YulBlock","src":"511:51:24","statements":[{"nativeSrc":"521:35:24","nodeType":"YulAssignment","src":"521:35:24","value":{"arguments":[{"name":"value","nativeSrc":"550:5:24","nodeType":"YulIdentifier","src":"550:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:24","nodeType":"YulIdentifier","src":"532:17:24"},"nativeSrc":"532:24:24","nodeType":"YulFunctionCall","src":"532:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:24","nodeType":"YulIdentifier","src":"521:7:24"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:24","nodeType":"YulTypedName","src":"493:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:24","nodeType":"YulTypedName","src":"503:7:24","type":""}],"src":"466:96:24"},{"body":{"nativeSrc":"611:79:24","nodeType":"YulBlock","src":"611:79:24","statements":[{"body":{"nativeSrc":"668:16:24","nodeType":"YulBlock","src":"668:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:24","nodeType":"YulLiteral","src":"677:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:24","nodeType":"YulLiteral","src":"680:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:24","nodeType":"YulIdentifier","src":"670:6:24"},"nativeSrc":"670:12:24","nodeType":"YulFunctionCall","src":"670:12:24"},"nativeSrc":"670:12:24","nodeType":"YulExpressionStatement","src":"670:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:24","nodeType":"YulIdentifier","src":"634:5:24"},{"arguments":[{"name":"value","nativeSrc":"659:5:24","nodeType":"YulIdentifier","src":"659:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:24","nodeType":"YulIdentifier","src":"641:17:24"},"nativeSrc":"641:24:24","nodeType":"YulFunctionCall","src":"641:24:24"}],"functionName":{"name":"eq","nativeSrc":"631:2:24","nodeType":"YulIdentifier","src":"631:2:24"},"nativeSrc":"631:35:24","nodeType":"YulFunctionCall","src":"631:35:24"}],"functionName":{"name":"iszero","nativeSrc":"624:6:24","nodeType":"YulIdentifier","src":"624:6:24"},"nativeSrc":"624:43:24","nodeType":"YulFunctionCall","src":"624:43:24"},"nativeSrc":"621:63:24","nodeType":"YulIf","src":"621:63:24"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:24","nodeType":"YulTypedName","src":"604:5:24","type":""}],"src":"568:122:24"},{"body":{"nativeSrc":"759:80:24","nodeType":"YulBlock","src":"759:80:24","statements":[{"nativeSrc":"769:22:24","nodeType":"YulAssignment","src":"769:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:24","nodeType":"YulIdentifier","src":"784:6:24"}],"functionName":{"name":"mload","nativeSrc":"778:5:24","nodeType":"YulIdentifier","src":"778:5:24"},"nativeSrc":"778:13:24","nodeType":"YulFunctionCall","src":"778:13:24"},"variableNames":[{"name":"value","nativeSrc":"769:5:24","nodeType":"YulIdentifier","src":"769:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:24","nodeType":"YulIdentifier","src":"827:5:24"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:24","nodeType":"YulIdentifier","src":"800:26:24"},"nativeSrc":"800:33:24","nodeType":"YulFunctionCall","src":"800:33:24"},"nativeSrc":"800:33:24","nodeType":"YulExpressionStatement","src":"800:33:24"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:24","nodeType":"YulTypedName","src":"737:6:24","type":""},{"name":"end","nativeSrc":"745:3:24","nodeType":"YulTypedName","src":"745:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:24","nodeType":"YulTypedName","src":"753:5:24","type":""}],"src":"696:143:24"},{"body":{"nativeSrc":"887:48:24","nodeType":"YulBlock","src":"887:48:24","statements":[{"nativeSrc":"897:32:24","nodeType":"YulAssignment","src":"897:32:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"922:5:24","nodeType":"YulIdentifier","src":"922:5:24"}],"functionName":{"name":"iszero","nativeSrc":"915:6:24","nodeType":"YulIdentifier","src":"915:6:24"},"nativeSrc":"915:13:24","nodeType":"YulFunctionCall","src":"915:13:24"}],"functionName":{"name":"iszero","nativeSrc":"908:6:24","nodeType":"YulIdentifier","src":"908:6:24"},"nativeSrc":"908:21:24","nodeType":"YulFunctionCall","src":"908:21:24"},"variableNames":[{"name":"cleaned","nativeSrc":"897:7:24","nodeType":"YulIdentifier","src":"897:7:24"}]}]},"name":"cleanup_t_bool","nativeSrc":"845:90:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"869:5:24","nodeType":"YulTypedName","src":"869:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"879:7:24","nodeType":"YulTypedName","src":"879:7:24","type":""}],"src":"845:90:24"},{"body":{"nativeSrc":"981:76:24","nodeType":"YulBlock","src":"981:76:24","statements":[{"body":{"nativeSrc":"1035:16:24","nodeType":"YulBlock","src":"1035:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1044:1:24","nodeType":"YulLiteral","src":"1044:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1047:1:24","nodeType":"YulLiteral","src":"1047:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1037:6:24","nodeType":"YulIdentifier","src":"1037:6:24"},"nativeSrc":"1037:12:24","nodeType":"YulFunctionCall","src":"1037:12:24"},"nativeSrc":"1037:12:24","nodeType":"YulExpressionStatement","src":"1037:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1004:5:24","nodeType":"YulIdentifier","src":"1004:5:24"},{"arguments":[{"name":"value","nativeSrc":"1026:5:24","nodeType":"YulIdentifier","src":"1026:5:24"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1011:14:24","nodeType":"YulIdentifier","src":"1011:14:24"},"nativeSrc":"1011:21:24","nodeType":"YulFunctionCall","src":"1011:21:24"}],"functionName":{"name":"eq","nativeSrc":"1001:2:24","nodeType":"YulIdentifier","src":"1001:2:24"},"nativeSrc":"1001:32:24","nodeType":"YulFunctionCall","src":"1001:32:24"}],"functionName":{"name":"iszero","nativeSrc":"994:6:24","nodeType":"YulIdentifier","src":"994:6:24"},"nativeSrc":"994:40:24","nodeType":"YulFunctionCall","src":"994:40:24"},"nativeSrc":"991:60:24","nodeType":"YulIf","src":"991:60:24"}]},"name":"validator_revert_t_bool","nativeSrc":"941:116:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"974:5:24","nodeType":"YulTypedName","src":"974:5:24","type":""}],"src":"941:116:24"},{"body":{"nativeSrc":"1123:77:24","nodeType":"YulBlock","src":"1123:77:24","statements":[{"nativeSrc":"1133:22:24","nodeType":"YulAssignment","src":"1133:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"1148:6:24","nodeType":"YulIdentifier","src":"1148:6:24"}],"functionName":{"name":"mload","nativeSrc":"1142:5:24","nodeType":"YulIdentifier","src":"1142:5:24"},"nativeSrc":"1142:13:24","nodeType":"YulFunctionCall","src":"1142:13:24"},"variableNames":[{"name":"value","nativeSrc":"1133:5:24","nodeType":"YulIdentifier","src":"1133:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1188:5:24","nodeType":"YulIdentifier","src":"1188:5:24"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"1164:23:24","nodeType":"YulIdentifier","src":"1164:23:24"},"nativeSrc":"1164:30:24","nodeType":"YulFunctionCall","src":"1164:30:24"},"nativeSrc":"1164:30:24","nodeType":"YulExpressionStatement","src":"1164:30:24"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"1063:137:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1101:6:24","nodeType":"YulTypedName","src":"1101:6:24","type":""},{"name":"end","nativeSrc":"1109:3:24","nodeType":"YulTypedName","src":"1109:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1117:5:24","nodeType":"YulTypedName","src":"1117:5:24","type":""}],"src":"1063:137:24"},{"body":{"nativeSrc":"1251:32:24","nodeType":"YulBlock","src":"1251:32:24","statements":[{"nativeSrc":"1261:16:24","nodeType":"YulAssignment","src":"1261:16:24","value":{"name":"value","nativeSrc":"1272:5:24","nodeType":"YulIdentifier","src":"1272:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"1261:7:24","nodeType":"YulIdentifier","src":"1261:7:24"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1206:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1233:5:24","nodeType":"YulTypedName","src":"1233:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1243:7:24","nodeType":"YulTypedName","src":"1243:7:24","type":""}],"src":"1206:77:24"},{"body":{"nativeSrc":"1332:79:24","nodeType":"YulBlock","src":"1332:79:24","statements":[{"body":{"nativeSrc":"1389:16:24","nodeType":"YulBlock","src":"1389:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1398:1:24","nodeType":"YulLiteral","src":"1398:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1401:1:24","nodeType":"YulLiteral","src":"1401:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1391:6:24","nodeType":"YulIdentifier","src":"1391:6:24"},"nativeSrc":"1391:12:24","nodeType":"YulFunctionCall","src":"1391:12:24"},"nativeSrc":"1391:12:24","nodeType":"YulExpressionStatement","src":"1391:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1355:5:24","nodeType":"YulIdentifier","src":"1355:5:24"},{"arguments":[{"name":"value","nativeSrc":"1380:5:24","nodeType":"YulIdentifier","src":"1380:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1362:17:24","nodeType":"YulIdentifier","src":"1362:17:24"},"nativeSrc":"1362:24:24","nodeType":"YulFunctionCall","src":"1362:24:24"}],"functionName":{"name":"eq","nativeSrc":"1352:2:24","nodeType":"YulIdentifier","src":"1352:2:24"},"nativeSrc":"1352:35:24","nodeType":"YulFunctionCall","src":"1352:35:24"}],"functionName":{"name":"iszero","nativeSrc":"1345:6:24","nodeType":"YulIdentifier","src":"1345:6:24"},"nativeSrc":"1345:43:24","nodeType":"YulFunctionCall","src":"1345:43:24"},"nativeSrc":"1342:63:24","nodeType":"YulIf","src":"1342:63:24"}]},"name":"validator_revert_t_uint256","nativeSrc":"1289:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1325:5:24","nodeType":"YulTypedName","src":"1325:5:24","type":""}],"src":"1289:122:24"},{"body":{"nativeSrc":"1480:80:24","nodeType":"YulBlock","src":"1480:80:24","statements":[{"nativeSrc":"1490:22:24","nodeType":"YulAssignment","src":"1490:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"1505:6:24","nodeType":"YulIdentifier","src":"1505:6:24"}],"functionName":{"name":"mload","nativeSrc":"1499:5:24","nodeType":"YulIdentifier","src":"1499:5:24"},"nativeSrc":"1499:13:24","nodeType":"YulFunctionCall","src":"1499:13:24"},"variableNames":[{"name":"value","nativeSrc":"1490:5:24","nodeType":"YulIdentifier","src":"1490:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1548:5:24","nodeType":"YulIdentifier","src":"1548:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1521:26:24","nodeType":"YulIdentifier","src":"1521:26:24"},"nativeSrc":"1521:33:24","nodeType":"YulFunctionCall","src":"1521:33:24"},"nativeSrc":"1521:33:24","nodeType":"YulExpressionStatement","src":"1521:33:24"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1417:143:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1458:6:24","nodeType":"YulTypedName","src":"1458:6:24","type":""},{"name":"end","nativeSrc":"1466:3:24","nodeType":"YulTypedName","src":"1466:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1474:5:24","nodeType":"YulTypedName","src":"1474:5:24","type":""}],"src":"1417:143:24"},{"body":{"nativeSrc":"1688:686:24","nodeType":"YulBlock","src":"1688:686:24","statements":[{"body":{"nativeSrc":"1735:83:24","nodeType":"YulBlock","src":"1735:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1737:77:24","nodeType":"YulIdentifier","src":"1737:77:24"},"nativeSrc":"1737:79:24","nodeType":"YulFunctionCall","src":"1737:79:24"},"nativeSrc":"1737:79:24","nodeType":"YulExpressionStatement","src":"1737:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1709:7:24","nodeType":"YulIdentifier","src":"1709:7:24"},{"name":"headStart","nativeSrc":"1718:9:24","nodeType":"YulIdentifier","src":"1718:9:24"}],"functionName":{"name":"sub","nativeSrc":"1705:3:24","nodeType":"YulIdentifier","src":"1705:3:24"},"nativeSrc":"1705:23:24","nodeType":"YulFunctionCall","src":"1705:23:24"},{"kind":"number","nativeSrc":"1730:3:24","nodeType":"YulLiteral","src":"1730:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1701:3:24","nodeType":"YulIdentifier","src":"1701:3:24"},"nativeSrc":"1701:33:24","nodeType":"YulFunctionCall","src":"1701:33:24"},"nativeSrc":"1698:120:24","nodeType":"YulIf","src":"1698:120:24"},{"nativeSrc":"1828:128:24","nodeType":"YulBlock","src":"1828:128:24","statements":[{"nativeSrc":"1843:15:24","nodeType":"YulVariableDeclaration","src":"1843:15:24","value":{"kind":"number","nativeSrc":"1857:1:24","nodeType":"YulLiteral","src":"1857:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1847:6:24","nodeType":"YulTypedName","src":"1847:6:24","type":""}]},{"nativeSrc":"1872:74:24","nodeType":"YulAssignment","src":"1872:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1918:9:24","nodeType":"YulIdentifier","src":"1918:9:24"},{"name":"offset","nativeSrc":"1929:6:24","nodeType":"YulIdentifier","src":"1929:6:24"}],"functionName":{"name":"add","nativeSrc":"1914:3:24","nodeType":"YulIdentifier","src":"1914:3:24"},"nativeSrc":"1914:22:24","nodeType":"YulFunctionCall","src":"1914:22:24"},{"name":"dataEnd","nativeSrc":"1938:7:24","nodeType":"YulIdentifier","src":"1938:7:24"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1882:31:24","nodeType":"YulIdentifier","src":"1882:31:24"},"nativeSrc":"1882:64:24","nodeType":"YulFunctionCall","src":"1882:64:24"},"variableNames":[{"name":"value0","nativeSrc":"1872:6:24","nodeType":"YulIdentifier","src":"1872:6:24"}]}]},{"nativeSrc":"1966:126:24","nodeType":"YulBlock","src":"1966:126:24","statements":[{"nativeSrc":"1981:16:24","nodeType":"YulVariableDeclaration","src":"1981:16:24","value":{"kind":"number","nativeSrc":"1995:2:24","nodeType":"YulLiteral","src":"1995:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1985:6:24","nodeType":"YulTypedName","src":"1985:6:24","type":""}]},{"nativeSrc":"2011:71:24","nodeType":"YulAssignment","src":"2011:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2054:9:24","nodeType":"YulIdentifier","src":"2054:9:24"},{"name":"offset","nativeSrc":"2065:6:24","nodeType":"YulIdentifier","src":"2065:6:24"}],"functionName":{"name":"add","nativeSrc":"2050:3:24","nodeType":"YulIdentifier","src":"2050:3:24"},"nativeSrc":"2050:22:24","nodeType":"YulFunctionCall","src":"2050:22:24"},{"name":"dataEnd","nativeSrc":"2074:7:24","nodeType":"YulIdentifier","src":"2074:7:24"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"2021:28:24","nodeType":"YulIdentifier","src":"2021:28:24"},"nativeSrc":"2021:61:24","nodeType":"YulFunctionCall","src":"2021:61:24"},"variableNames":[{"name":"value1","nativeSrc":"2011:6:24","nodeType":"YulIdentifier","src":"2011:6:24"}]}]},{"nativeSrc":"2102:126:24","nodeType":"YulBlock","src":"2102:126:24","statements":[{"nativeSrc":"2117:16:24","nodeType":"YulVariableDeclaration","src":"2117:16:24","value":{"kind":"number","nativeSrc":"2131:2:24","nodeType":"YulLiteral","src":"2131:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2121:6:24","nodeType":"YulTypedName","src":"2121:6:24","type":""}]},{"nativeSrc":"2147:71:24","nodeType":"YulAssignment","src":"2147:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2190:9:24","nodeType":"YulIdentifier","src":"2190:9:24"},{"name":"offset","nativeSrc":"2201:6:24","nodeType":"YulIdentifier","src":"2201:6:24"}],"functionName":{"name":"add","nativeSrc":"2186:3:24","nodeType":"YulIdentifier","src":"2186:3:24"},"nativeSrc":"2186:22:24","nodeType":"YulFunctionCall","src":"2186:22:24"},{"name":"dataEnd","nativeSrc":"2210:7:24","nodeType":"YulIdentifier","src":"2210:7:24"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"2157:28:24","nodeType":"YulIdentifier","src":"2157:28:24"},"nativeSrc":"2157:61:24","nodeType":"YulFunctionCall","src":"2157:61:24"},"variableNames":[{"name":"value2","nativeSrc":"2147:6:24","nodeType":"YulIdentifier","src":"2147:6:24"}]}]},{"nativeSrc":"2238:129:24","nodeType":"YulBlock","src":"2238:129:24","statements":[{"nativeSrc":"2253:16:24","nodeType":"YulVariableDeclaration","src":"2253:16:24","value":{"kind":"number","nativeSrc":"2267:2:24","nodeType":"YulLiteral","src":"2267:2:24","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"2257:6:24","nodeType":"YulTypedName","src":"2257:6:24","type":""}]},{"nativeSrc":"2283:74:24","nodeType":"YulAssignment","src":"2283:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2329:9:24","nodeType":"YulIdentifier","src":"2329:9:24"},{"name":"offset","nativeSrc":"2340:6:24","nodeType":"YulIdentifier","src":"2340:6:24"}],"functionName":{"name":"add","nativeSrc":"2325:3:24","nodeType":"YulIdentifier","src":"2325:3:24"},"nativeSrc":"2325:22:24","nodeType":"YulFunctionCall","src":"2325:22:24"},{"name":"dataEnd","nativeSrc":"2349:7:24","nodeType":"YulIdentifier","src":"2349:7:24"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2293:31:24","nodeType":"YulIdentifier","src":"2293:31:24"},"nativeSrc":"2293:64:24","nodeType":"YulFunctionCall","src":"2293:64:24"},"variableNames":[{"name":"value3","nativeSrc":"2283:6:24","nodeType":"YulIdentifier","src":"2283:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_boolt_boolt_uint256_fromMemory","nativeSrc":"1566:808:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1634:9:24","nodeType":"YulTypedName","src":"1634:9:24","type":""},{"name":"dataEnd","nativeSrc":"1645:7:24","nodeType":"YulTypedName","src":"1645:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1657:6:24","nodeType":"YulTypedName","src":"1657:6:24","type":""},{"name":"value1","nativeSrc":"1665:6:24","nodeType":"YulTypedName","src":"1665:6:24","type":""},{"name":"value2","nativeSrc":"1673:6:24","nodeType":"YulTypedName","src":"1673:6:24","type":""},{"name":"value3","nativeSrc":"1681:6:24","nodeType":"YulTypedName","src":"1681:6:24","type":""}],"src":"1566:808:24"},{"body":{"nativeSrc":"2445:53:24","nodeType":"YulBlock","src":"2445:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2462:3:24","nodeType":"YulIdentifier","src":"2462:3:24"},{"arguments":[{"name":"value","nativeSrc":"2485:5:24","nodeType":"YulIdentifier","src":"2485:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2467:17:24","nodeType":"YulIdentifier","src":"2467:17:24"},"nativeSrc":"2467:24:24","nodeType":"YulFunctionCall","src":"2467:24:24"}],"functionName":{"name":"mstore","nativeSrc":"2455:6:24","nodeType":"YulIdentifier","src":"2455:6:24"},"nativeSrc":"2455:37:24","nodeType":"YulFunctionCall","src":"2455:37:24"},"nativeSrc":"2455:37:24","nodeType":"YulExpressionStatement","src":"2455:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2380:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2433:5:24","nodeType":"YulTypedName","src":"2433:5:24","type":""},{"name":"pos","nativeSrc":"2440:3:24","nodeType":"YulTypedName","src":"2440:3:24","type":""}],"src":"2380:118:24"},{"body":{"nativeSrc":"2602:124:24","nodeType":"YulBlock","src":"2602:124:24","statements":[{"nativeSrc":"2612:26:24","nodeType":"YulAssignment","src":"2612:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"2624:9:24","nodeType":"YulIdentifier","src":"2624:9:24"},{"kind":"number","nativeSrc":"2635:2:24","nodeType":"YulLiteral","src":"2635:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2620:3:24","nodeType":"YulIdentifier","src":"2620:3:24"},"nativeSrc":"2620:18:24","nodeType":"YulFunctionCall","src":"2620:18:24"},"variableNames":[{"name":"tail","nativeSrc":"2612:4:24","nodeType":"YulIdentifier","src":"2612:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2692:6:24","nodeType":"YulIdentifier","src":"2692:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"2705:9:24","nodeType":"YulIdentifier","src":"2705:9:24"},{"kind":"number","nativeSrc":"2716:1:24","nodeType":"YulLiteral","src":"2716:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2701:3:24","nodeType":"YulIdentifier","src":"2701:3:24"},"nativeSrc":"2701:17:24","nodeType":"YulFunctionCall","src":"2701:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2648:43:24","nodeType":"YulIdentifier","src":"2648:43:24"},"nativeSrc":"2648:71:24","nodeType":"YulFunctionCall","src":"2648:71:24"},"nativeSrc":"2648:71:24","nodeType":"YulExpressionStatement","src":"2648:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2504:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2574:9:24","nodeType":"YulTypedName","src":"2574:9:24","type":""},{"name":"value0","nativeSrc":"2586:6:24","nodeType":"YulTypedName","src":"2586:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2597:4:24","nodeType":"YulTypedName","src":"2597:4:24","type":""}],"src":"2504:222:24"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_boolt_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620010db380380620010db8339818101604052810190620000379190620002f2565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000375565b60405180910390fd5b620000be816200014c60201b60201c565b506001808190555082600260146101000a81548160ff02191690831515021790555081600260156101000a81548160ff0219169083151502179055508060038190555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000392565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002428262000215565b9050919050565b620002548162000235565b81146200026057600080fd5b50565b600081519050620002748162000249565b92915050565b60008115159050919050565b62000291816200027a565b81146200029d57600080fd5b50565b600081519050620002b18162000286565b92915050565b6000819050919050565b620002cc81620002b7565b8114620002d857600080fd5b50565b600081519050620002ec81620002c1565b92915050565b600080600080608085870312156200030f576200030e62000210565b5b60006200031f8782880162000263565b94505060206200033287828801620002a0565b93505060406200034587828801620002a0565b92505060606200035887828801620002db565b91505092959194509250565b6200036f8162000235565b82525050565b60006020820190506200038c600083018462000364565b92915050565b610d3980620003a26000396000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a61461033a5780638da5cb5b14610351578063f170d20d1461037c578063f2fde38b146103a557610291565b806301e336671461029657806316c38b3c146102bf57806334fcf437146102e85780634782f7791461031157610291565b3661029157600260149054906101000a900460ff16156100d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cb906107e5565b60405180910390fd5b6000600260159054906101000a900460ff161561010057600354346100f9919061083e565b9050610111565b6003543461010e91906108af565b90505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161016c9190610921565b602060405180830381865afa158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad919061096d565b8111156101ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e6906109e6565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161024c929190610a15565b6020604051808303816000875af115801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190610a76565b005b600080fd5b3480156102a257600080fd5b506102bd60048036038101906102b89190610ae4565b6103ce565b005b3480156102cb57600080fd5b506102e660048036038101906102e19190610b4c565b61045a565b005b3480156102f457600080fd5b5061030f600480360381019061030a9190610b79565b61047f565b005b34801561031d57600080fd5b5061033860048036038101906103339190610be4565b610491565b005b34801561034657600080fd5b5061034f61054d565b005b34801561035d57600080fd5b50610366610561565b6040516103739190610921565b60405180910390f35b34801561038857600080fd5b506103a3600480360381019061039e9190610b4c565b61058a565b005b3480156103b157600080fd5b506103cc60048036038101906103c79190610c24565b6105af565b005b6103d6610635565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610411929190610a15565b6020604051808303816000875af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610a76565b50505050565b610462610635565b80600260146101000a81548160ff02191690831515021790555050565b610487610635565b8060038190555050565b610499610635565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516104c090610c82565b60006040518083038185875af1925050503d80600081146104fd576040519150601f19603f3d011682016040523d82523d6000602084013e610502565b606091505b509150915081610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90610ce3565b60405180910390fd5b50505050565b610555610635565b61055f60006106bc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610592610635565b80600260156101000a81548160ff02191690831515021790555050565b6105b7610635565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106295760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106209190610921565b60405180910390fd5b610632816106bc565b50565b61063d610780565b73ffffffffffffffffffffffffffffffffffffffff1661065b610561565b73ffffffffffffffffffffffffffffffffffffffff16146106ba5761067e610780565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106b19190610921565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600082825260208201905092915050565b7f446973747269627574696f6e206973207061757365642e000000000000000000600082015250565b60006107cf601783610788565b91506107da82610799565b602082019050919050565b600060208201905081810360008301526107fe816107c2565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061084982610805565b915061085483610805565b925082820261086281610805565b915082820484148315176108795761087861080f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108ba82610805565b91506108c583610805565b9250826108d5576108d4610880565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061090b826108e0565b9050919050565b61091b81610900565b82525050565b60006020820190506109366000830184610912565b92915050565b600080fd5b61094a81610805565b811461095557600080fd5b50565b60008151905061096781610941565b92915050565b6000602082840312156109835761098261093c565b5b600061099184828501610958565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000600082015250565b60006109d0601c83610788565b91506109db8261099a565b602082019050919050565b600060208201905081810360008301526109ff816109c3565b9050919050565b610a0f81610805565b82525050565b6000604082019050610a2a6000830185610912565b610a376020830184610a06565b9392505050565b60008115159050919050565b610a5381610a3e565b8114610a5e57600080fd5b50565b600081519050610a7081610a4a565b92915050565b600060208284031215610a8c57610a8b61093c565b5b6000610a9a84828501610a61565b91505092915050565b610aac81610900565b8114610ab757600080fd5b50565b600081359050610ac981610aa3565b92915050565b600081359050610ade81610941565b92915050565b600080600060608486031215610afd57610afc61093c565b5b6000610b0b86828701610aba565b9350506020610b1c86828701610aba565b9250506040610b2d86828701610acf565b9150509250925092565b600081359050610b4681610a4a565b92915050565b600060208284031215610b6257610b6161093c565b5b6000610b7084828501610b37565b91505092915050565b600060208284031215610b8f57610b8e61093c565b5b6000610b9d84828501610acf565b91505092915050565b6000610bb1826108e0565b9050919050565b610bc181610ba6565b8114610bcc57600080fd5b50565b600081359050610bde81610bb8565b92915050565b60008060408385031215610bfb57610bfa61093c565b5b6000610c0985828601610bcf565b9250506020610c1a85828601610acf565b9150509250929050565b600060208284031215610c3a57610c3961093c565b5b6000610c4884828501610aba565b91505092915050565b600081905092915050565b50565b6000610c6c600083610c51565b9150610c7782610c5c565b600082019050919050565b6000610c8d82610c5f565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610ccd601483610788565b9150610cd882610c97565b602082019050919050565b60006020820190508181036000830152610cfc81610cc0565b905091905056fea2646970667358221220cf5bc93cbc57c4bf5a22c9b6b2b1e6fa7baa3c19a5f6c62150ca2ed55912fb9c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10DB CODESIZE SUB DUP1 PUSH3 0x10DB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x14C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x392 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x242 DUP3 PUSH3 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x254 DUP2 PUSH3 0x235 JUMP JUMPDEST DUP2 EQ PUSH3 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x274 DUP2 PUSH3 0x249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x291 DUP2 PUSH3 0x27A JUMP JUMPDEST DUP2 EQ PUSH3 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B1 DUP2 PUSH3 0x286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2CC DUP2 PUSH3 0x2B7 JUMP JUMPDEST DUP2 EQ PUSH3 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2EC DUP2 PUSH3 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x30F JUMPI PUSH3 0x30E PUSH3 0x210 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x31F DUP8 DUP3 DUP9 ADD PUSH3 0x263 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x332 DUP8 DUP3 DUP9 ADD PUSH3 0x2A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x345 DUP8 DUP3 DUP9 ADD PUSH3 0x2A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x358 DUP8 DUP3 DUP9 ADD PUSH3 0x2DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x36F DUP2 PUSH3 0x235 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x38C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD39 DUP1 PUSH3 0x3A2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF170D20D EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI PUSH2 0x291 JUMP JUMPDEST DUP1 PUSH4 0x1E33667 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0x311 JUMPI PUSH2 0x291 JUMP JUMPDEST CALLDATASIZE PUSH2 0x291 JUMPI PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x100 JUMPI PUSH1 0x3 SLOAD CALLVALUE PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP PUSH2 0x111 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x8AF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D6 PUSH2 0x635 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x430 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x462 PUSH2 0x635 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x487 PUSH2 0x635 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x499 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x502 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53E SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x555 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x55F PUSH1 0x0 PUSH2 0x6BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x592 PUSH2 0x635 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x629 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP2 PUSH2 0x6BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x63D PUSH2 0x780 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x65B PUSH2 0x561 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BA JUMPI PUSH2 0x67E PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446973747269627574696F6E206973207061757365642E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF PUSH1 0x17 DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DA DUP3 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7FE DUP2 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x849 DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP2 POP PUSH2 0x854 DUP4 PUSH2 0x805 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x862 DUP2 PUSH2 0x805 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x80F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8BA DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C5 DUP4 PUSH2 0x805 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8D5 JUMPI PUSH2 0x8D4 PUSH2 0x880 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0x900 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x936 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94A DUP2 PUSH2 0x805 JUMP JUMPDEST DUP2 EQ PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x967 DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x983 JUMPI PUSH2 0x982 PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x991 DUP5 DUP3 DUP6 ADD PUSH2 0x958 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D0 PUSH1 0x1C DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH2 0x9DB DUP3 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9FF DUP2 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0F DUP2 PUSH2 0x805 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA2A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x912 JUMP JUMPDEST PUSH2 0xA37 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA53 DUP2 PUSH2 0xA3E JUMP JUMPDEST DUP2 EQ PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA70 DUP2 PUSH2 0xA4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9A DUP5 DUP3 DUP6 ADD PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAC DUP2 PUSH2 0x900 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC9 DUP2 PUSH2 0xAA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xADE DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP7 DUP3 DUP8 ADD PUSH2 0xABA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB1C DUP7 DUP3 DUP8 ADD PUSH2 0xABA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB2D DUP7 DUP3 DUP8 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB46 DUP2 PUSH2 0xA4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB62 JUMPI PUSH2 0xB61 PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP5 DUP3 DUP6 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB9D DUP5 DUP3 DUP6 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB1 DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC1 DUP2 PUSH2 0xBA6 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDE DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP6 DUP3 DUP7 ADD PUSH2 0xBCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC1A DUP6 DUP3 DUP7 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC48 DUP5 DUP3 DUP6 ADD PUSH2 0xABA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6C PUSH1 0x0 DUP4 PUSH2 0xC51 JUMP JUMPDEST SWAP2 POP PUSH2 0xC77 DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8D DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCD PUSH1 0x14 DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD8 DUP3 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCFC DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF JUMPDEST 0xC9 EXTCODECOPY 0xBC JUMPI 0xC4 0xBF GAS 0x22 0xC9 0xB6 0xB2 0xB1 0xE6 STATICCALL PUSH28 0xAA3C19A5F6C62150CA2ED55912FB9C64736F6C634300081800330000 ","sourceMap":"546:1748:23:-:0;;;751:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;878:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1713:1:13;1917:7;:21;;;;913:7:23::1;904:6;;:16;;;;;;;;;;;;;;;;;;941:9;930:8;;:20;;;;;;;;;;;;;;;;;;967:5;960:4;:12;;;;998:6;983:5;;:22;;;;;;;;;;;;;;;;;;751:261:::0;;;;546:1748;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:24:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:90::-;879:7;922:5;915:13;908:21;897:32;;845:90;;;:::o;941:116::-;1011:21;1026:5;1011:21;:::i;:::-;1004:5;1001:32;991:60;;1047:1;1044;1037:12;991:60;941:116;:::o;1063:137::-;1117:5;1148:6;1142:13;1133:22;;1164:30;1188:5;1164:30;:::i;:::-;1063:137;;;;:::o;1206:77::-;1243:7;1272:5;1261:16;;1206:77;;;:::o;1289:122::-;1362:24;1380:5;1362:24;:::i;:::-;1355:5;1352:35;1342:63;;1401:1;1398;1391:12;1342:63;1289:122;:::o;1417:143::-;1474:5;1505:6;1499:13;1490:22;;1521:33;1548:5;1521:33;:::i;:::-;1417:143;;;;:::o;1566:808::-;1657:6;1665;1673;1681;1730:3;1718:9;1709:7;1705:23;1701:33;1698:120;;;1737:79;;:::i;:::-;1698:120;1857:1;1882:64;1938:7;1929:6;1918:9;1914:22;1882:64;:::i;:::-;1872:74;;1828:128;1995:2;2021:61;2074:7;2065:6;2054:9;2050:22;2021:61;:::i;:::-;2011:71;;1966:126;2131:2;2157:61;2210:7;2201:6;2190:9;2186:22;2157:61;:::i;:::-;2147:71;;2102:126;2267:2;2293:64;2349:7;2340:6;2329:9;2325:22;2293:64;:::i;:::-;2283:74;;2238:129;1566:808;;;;;;;:::o;2380:118::-;2467:24;2485:5;2467:24;:::i;:::-;2462:3;2455:37;2380:118;;:::o;2504:222::-;2597:4;2635:2;2624:9;2620:18;2612:26;;2648:71;2716:1;2705:9;2701:17;2692:6;2648:71;:::i;:::-;2504:222;;;;:::o;546:1748:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_4524":{"entryPoint":null,"id":4524,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1589,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1719":{"entryPoint":1920,"id":1719,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1724,"id":146,"parameterSlots":1,"returnSlots":0},"@owner_67":{"entryPoint":1377,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1357,"id":98,"parameterSlots":0,"returnSlots":0},"@setMultiply_4560":{"entryPoint":1418,"id":4560,"parameterSlots":1,"returnSlots":0},"@setPaused_4536":{"entryPoint":1114,"id":4536,"parameterSlots":1,"returnSlots":0},"@setRate_4548":{"entryPoint":1151,"id":4548,"parameterSlots":1,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1455,"id":126,"parameterSlots":1,"returnSlots":0},"@withdrawETH_4606":{"entryPoint":1169,"id":4606,"parameterSlots":2,"returnSlots":0},"@withdrawToken_4580":{"entryPoint":974,"id":4580,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":3023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":2871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":2657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":3044,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2788,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool":{"entryPoint":2892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2322,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack":{"entryPoint":3264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b_to_t_string_memory_ptr_fromStack":{"entryPoint":1986,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack":{"entryPoint":2499,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3167,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2566,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":2581,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3299,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2021,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2534,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3153,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1928,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2223,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2110,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2304,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":2982,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2622,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2272,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2053,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2063,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2176,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2364,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb":{"entryPoint":3223,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b":{"entryPoint":1945,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7":{"entryPoint":2458,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":3164,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2723,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":3000,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":2634,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2369,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11046:24","nodeType":"YulBlock","src":"0:11046:24","statements":[{"body":{"nativeSrc":"103:73:24","nodeType":"YulBlock","src":"103:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"120:3:24","nodeType":"YulIdentifier","src":"120:3:24"},{"name":"length","nativeSrc":"125:6:24","nodeType":"YulIdentifier","src":"125:6:24"}],"functionName":{"name":"mstore","nativeSrc":"113:6:24","nodeType":"YulIdentifier","src":"113:6:24"},"nativeSrc":"113:19:24","nodeType":"YulFunctionCall","src":"113:19:24"},"nativeSrc":"113:19:24","nodeType":"YulExpressionStatement","src":"113:19:24"},{"nativeSrc":"141:29:24","nodeType":"YulAssignment","src":"141:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"160:3:24","nodeType":"YulIdentifier","src":"160:3:24"},{"kind":"number","nativeSrc":"165:4:24","nodeType":"YulLiteral","src":"165:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"156:3:24","nodeType":"YulIdentifier","src":"156:3:24"},"nativeSrc":"156:14:24","nodeType":"YulFunctionCall","src":"156:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"141:11:24","nodeType":"YulIdentifier","src":"141:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"75:3:24","nodeType":"YulTypedName","src":"75:3:24","type":""},{"name":"length","nativeSrc":"80:6:24","nodeType":"YulTypedName","src":"80:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"91:11:24","nodeType":"YulTypedName","src":"91:11:24","type":""}],"src":"7:169:24"},{"body":{"nativeSrc":"288:67:24","nodeType":"YulBlock","src":"288:67:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},{"kind":"number","nativeSrc":"318:1:24","nodeType":"YulLiteral","src":"318:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"306:3:24","nodeType":"YulIdentifier","src":"306:3:24"},"nativeSrc":"306:14:24","nodeType":"YulFunctionCall","src":"306:14:24"},{"hexValue":"446973747269627574696f6e206973207061757365642e","kind":"string","nativeSrc":"322:25:24","nodeType":"YulLiteral","src":"322:25:24","type":"","value":"Distribution is paused."}],"functionName":{"name":"mstore","nativeSrc":"299:6:24","nodeType":"YulIdentifier","src":"299:6:24"},"nativeSrc":"299:49:24","nodeType":"YulFunctionCall","src":"299:49:24"},"nativeSrc":"299:49:24","nodeType":"YulExpressionStatement","src":"299:49:24"}]},"name":"store_literal_in_memory_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b","nativeSrc":"182:173:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"280:6:24","nodeType":"YulTypedName","src":"280:6:24","type":""}],"src":"182:173:24"},{"body":{"nativeSrc":"507:220:24","nodeType":"YulBlock","src":"507:220:24","statements":[{"nativeSrc":"517:74:24","nodeType":"YulAssignment","src":"517:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"583:3:24","nodeType":"YulIdentifier","src":"583:3:24"},{"kind":"number","nativeSrc":"588:2:24","nodeType":"YulLiteral","src":"588:2:24","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"524:58:24","nodeType":"YulIdentifier","src":"524:58:24"},"nativeSrc":"524:67:24","nodeType":"YulFunctionCall","src":"524:67:24"},"variableNames":[{"name":"pos","nativeSrc":"517:3:24","nodeType":"YulIdentifier","src":"517:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"689:3:24","nodeType":"YulIdentifier","src":"689:3:24"}],"functionName":{"name":"store_literal_in_memory_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b","nativeSrc":"600:88:24","nodeType":"YulIdentifier","src":"600:88:24"},"nativeSrc":"600:93:24","nodeType":"YulFunctionCall","src":"600:93:24"},"nativeSrc":"600:93:24","nodeType":"YulExpressionStatement","src":"600:93:24"},{"nativeSrc":"702:19:24","nodeType":"YulAssignment","src":"702:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"713:3:24","nodeType":"YulIdentifier","src":"713:3:24"},{"kind":"number","nativeSrc":"718:2:24","nodeType":"YulLiteral","src":"718:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"709:3:24","nodeType":"YulIdentifier","src":"709:3:24"},"nativeSrc":"709:12:24","nodeType":"YulFunctionCall","src":"709:12:24"},"variableNames":[{"name":"end","nativeSrc":"702:3:24","nodeType":"YulIdentifier","src":"702:3:24"}]}]},"name":"abi_encode_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b_to_t_string_memory_ptr_fromStack","nativeSrc":"361:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"495:3:24","nodeType":"YulTypedName","src":"495:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"503:3:24","nodeType":"YulTypedName","src":"503:3:24","type":""}],"src":"361:366:24"},{"body":{"nativeSrc":"904:248:24","nodeType":"YulBlock","src":"904:248:24","statements":[{"nativeSrc":"914:26:24","nodeType":"YulAssignment","src":"914:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"926:9:24","nodeType":"YulIdentifier","src":"926:9:24"},{"kind":"number","nativeSrc":"937:2:24","nodeType":"YulLiteral","src":"937:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"922:3:24","nodeType":"YulIdentifier","src":"922:3:24"},"nativeSrc":"922:18:24","nodeType":"YulFunctionCall","src":"922:18:24"},"variableNames":[{"name":"tail","nativeSrc":"914:4:24","nodeType":"YulIdentifier","src":"914:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"961:9:24","nodeType":"YulIdentifier","src":"961:9:24"},{"kind":"number","nativeSrc":"972:1:24","nodeType":"YulLiteral","src":"972:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"957:3:24","nodeType":"YulIdentifier","src":"957:3:24"},"nativeSrc":"957:17:24","nodeType":"YulFunctionCall","src":"957:17:24"},{"arguments":[{"name":"tail","nativeSrc":"980:4:24","nodeType":"YulIdentifier","src":"980:4:24"},{"name":"headStart","nativeSrc":"986:9:24","nodeType":"YulIdentifier","src":"986:9:24"}],"functionName":{"name":"sub","nativeSrc":"976:3:24","nodeType":"YulIdentifier","src":"976:3:24"},"nativeSrc":"976:20:24","nodeType":"YulFunctionCall","src":"976:20:24"}],"functionName":{"name":"mstore","nativeSrc":"950:6:24","nodeType":"YulIdentifier","src":"950:6:24"},"nativeSrc":"950:47:24","nodeType":"YulFunctionCall","src":"950:47:24"},"nativeSrc":"950:47:24","nodeType":"YulExpressionStatement","src":"950:47:24"},{"nativeSrc":"1006:139:24","nodeType":"YulAssignment","src":"1006:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"1140:4:24","nodeType":"YulIdentifier","src":"1140:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b_to_t_string_memory_ptr_fromStack","nativeSrc":"1014:124:24","nodeType":"YulIdentifier","src":"1014:124:24"},"nativeSrc":"1014:131:24","nodeType":"YulFunctionCall","src":"1014:131:24"},"variableNames":[{"name":"tail","nativeSrc":"1006:4:24","nodeType":"YulIdentifier","src":"1006:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"733:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"884:9:24","nodeType":"YulTypedName","src":"884:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"899:4:24","nodeType":"YulTypedName","src":"899:4:24","type":""}],"src":"733:419:24"},{"body":{"nativeSrc":"1203:32:24","nodeType":"YulBlock","src":"1203:32:24","statements":[{"nativeSrc":"1213:16:24","nodeType":"YulAssignment","src":"1213:16:24","value":{"name":"value","nativeSrc":"1224:5:24","nodeType":"YulIdentifier","src":"1224:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"1213:7:24","nodeType":"YulIdentifier","src":"1213:7:24"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1158:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1185:5:24","nodeType":"YulTypedName","src":"1185:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1195:7:24","nodeType":"YulTypedName","src":"1195:7:24","type":""}],"src":"1158:77:24"},{"body":{"nativeSrc":"1269:152:24","nodeType":"YulBlock","src":"1269:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1286:1:24","nodeType":"YulLiteral","src":"1286:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1289:77:24","nodeType":"YulLiteral","src":"1289:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1279:6:24","nodeType":"YulIdentifier","src":"1279:6:24"},"nativeSrc":"1279:88:24","nodeType":"YulFunctionCall","src":"1279:88:24"},"nativeSrc":"1279:88:24","nodeType":"YulExpressionStatement","src":"1279:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1383:1:24","nodeType":"YulLiteral","src":"1383:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"1386:4:24","nodeType":"YulLiteral","src":"1386:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"1376:6:24","nodeType":"YulIdentifier","src":"1376:6:24"},"nativeSrc":"1376:15:24","nodeType":"YulFunctionCall","src":"1376:15:24"},"nativeSrc":"1376:15:24","nodeType":"YulExpressionStatement","src":"1376:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1407:1:24","nodeType":"YulLiteral","src":"1407:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1410:4:24","nodeType":"YulLiteral","src":"1410:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1400:6:24","nodeType":"YulIdentifier","src":"1400:6:24"},"nativeSrc":"1400:15:24","nodeType":"YulFunctionCall","src":"1400:15:24"},"nativeSrc":"1400:15:24","nodeType":"YulExpressionStatement","src":"1400:15:24"}]},"name":"panic_error_0x11","nativeSrc":"1241:180:24","nodeType":"YulFunctionDefinition","src":"1241:180:24"},{"body":{"nativeSrc":"1475:362:24","nodeType":"YulBlock","src":"1475:362:24","statements":[{"nativeSrc":"1485:25:24","nodeType":"YulAssignment","src":"1485:25:24","value":{"arguments":[{"name":"x","nativeSrc":"1508:1:24","nodeType":"YulIdentifier","src":"1508:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1490:17:24","nodeType":"YulIdentifier","src":"1490:17:24"},"nativeSrc":"1490:20:24","nodeType":"YulFunctionCall","src":"1490:20:24"},"variableNames":[{"name":"x","nativeSrc":"1485:1:24","nodeType":"YulIdentifier","src":"1485:1:24"}]},{"nativeSrc":"1519:25:24","nodeType":"YulAssignment","src":"1519:25:24","value":{"arguments":[{"name":"y","nativeSrc":"1542:1:24","nodeType":"YulIdentifier","src":"1542:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1524:17:24","nodeType":"YulIdentifier","src":"1524:17:24"},"nativeSrc":"1524:20:24","nodeType":"YulFunctionCall","src":"1524:20:24"},"variableNames":[{"name":"y","nativeSrc":"1519:1:24","nodeType":"YulIdentifier","src":"1519:1:24"}]},{"nativeSrc":"1553:28:24","nodeType":"YulVariableDeclaration","src":"1553:28:24","value":{"arguments":[{"name":"x","nativeSrc":"1576:1:24","nodeType":"YulIdentifier","src":"1576:1:24"},{"name":"y","nativeSrc":"1579:1:24","nodeType":"YulIdentifier","src":"1579:1:24"}],"functionName":{"name":"mul","nativeSrc":"1572:3:24","nodeType":"YulIdentifier","src":"1572:3:24"},"nativeSrc":"1572:9:24","nodeType":"YulFunctionCall","src":"1572:9:24"},"variables":[{"name":"product_raw","nativeSrc":"1557:11:24","nodeType":"YulTypedName","src":"1557:11:24","type":""}]},{"nativeSrc":"1590:41:24","nodeType":"YulAssignment","src":"1590:41:24","value":{"arguments":[{"name":"product_raw","nativeSrc":"1619:11:24","nodeType":"YulIdentifier","src":"1619:11:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1601:17:24","nodeType":"YulIdentifier","src":"1601:17:24"},"nativeSrc":"1601:30:24","nodeType":"YulFunctionCall","src":"1601:30:24"},"variableNames":[{"name":"product","nativeSrc":"1590:7:24","nodeType":"YulIdentifier","src":"1590:7:24"}]},{"body":{"nativeSrc":"1808:22:24","nodeType":"YulBlock","src":"1808:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"1810:16:24","nodeType":"YulIdentifier","src":"1810:16:24"},"nativeSrc":"1810:18:24","nodeType":"YulFunctionCall","src":"1810:18:24"},"nativeSrc":"1810:18:24","nodeType":"YulExpressionStatement","src":"1810:18:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"1741:1:24","nodeType":"YulIdentifier","src":"1741:1:24"}],"functionName":{"name":"iszero","nativeSrc":"1734:6:24","nodeType":"YulIdentifier","src":"1734:6:24"},"nativeSrc":"1734:9:24","nodeType":"YulFunctionCall","src":"1734:9:24"},{"arguments":[{"name":"y","nativeSrc":"1764:1:24","nodeType":"YulIdentifier","src":"1764:1:24"},{"arguments":[{"name":"product","nativeSrc":"1771:7:24","nodeType":"YulIdentifier","src":"1771:7:24"},{"name":"x","nativeSrc":"1780:1:24","nodeType":"YulIdentifier","src":"1780:1:24"}],"functionName":{"name":"div","nativeSrc":"1767:3:24","nodeType":"YulIdentifier","src":"1767:3:24"},"nativeSrc":"1767:15:24","nodeType":"YulFunctionCall","src":"1767:15:24"}],"functionName":{"name":"eq","nativeSrc":"1761:2:24","nodeType":"YulIdentifier","src":"1761:2:24"},"nativeSrc":"1761:22:24","nodeType":"YulFunctionCall","src":"1761:22:24"}],"functionName":{"name":"or","nativeSrc":"1714:2:24","nodeType":"YulIdentifier","src":"1714:2:24"},"nativeSrc":"1714:83:24","nodeType":"YulFunctionCall","src":"1714:83:24"}],"functionName":{"name":"iszero","nativeSrc":"1694:6:24","nodeType":"YulIdentifier","src":"1694:6:24"},"nativeSrc":"1694:113:24","nodeType":"YulFunctionCall","src":"1694:113:24"},"nativeSrc":"1691:139:24","nodeType":"YulIf","src":"1691:139:24"}]},"name":"checked_mul_t_uint256","nativeSrc":"1427:410:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"1458:1:24","nodeType":"YulTypedName","src":"1458:1:24","type":""},{"name":"y","nativeSrc":"1461:1:24","nodeType":"YulTypedName","src":"1461:1:24","type":""}],"returnVariables":[{"name":"product","nativeSrc":"1467:7:24","nodeType":"YulTypedName","src":"1467:7:24","type":""}],"src":"1427:410:24"},{"body":{"nativeSrc":"1871:152:24","nodeType":"YulBlock","src":"1871:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1888:1:24","nodeType":"YulLiteral","src":"1888:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1891:77:24","nodeType":"YulLiteral","src":"1891:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1881:6:24","nodeType":"YulIdentifier","src":"1881:6:24"},"nativeSrc":"1881:88:24","nodeType":"YulFunctionCall","src":"1881:88:24"},"nativeSrc":"1881:88:24","nodeType":"YulExpressionStatement","src":"1881:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1985:1:24","nodeType":"YulLiteral","src":"1985:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"1988:4:24","nodeType":"YulLiteral","src":"1988:4:24","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"1978:6:24","nodeType":"YulIdentifier","src":"1978:6:24"},"nativeSrc":"1978:15:24","nodeType":"YulFunctionCall","src":"1978:15:24"},"nativeSrc":"1978:15:24","nodeType":"YulExpressionStatement","src":"1978:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2009:1:24","nodeType":"YulLiteral","src":"2009:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2012:4:24","nodeType":"YulLiteral","src":"2012:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2002:6:24","nodeType":"YulIdentifier","src":"2002:6:24"},"nativeSrc":"2002:15:24","nodeType":"YulFunctionCall","src":"2002:15:24"},"nativeSrc":"2002:15:24","nodeType":"YulExpressionStatement","src":"2002:15:24"}]},"name":"panic_error_0x12","nativeSrc":"1843:180:24","nodeType":"YulFunctionDefinition","src":"1843:180:24"},{"body":{"nativeSrc":"2071:143:24","nodeType":"YulBlock","src":"2071:143:24","statements":[{"nativeSrc":"2081:25:24","nodeType":"YulAssignment","src":"2081:25:24","value":{"arguments":[{"name":"x","nativeSrc":"2104:1:24","nodeType":"YulIdentifier","src":"2104:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2086:17:24","nodeType":"YulIdentifier","src":"2086:17:24"},"nativeSrc":"2086:20:24","nodeType":"YulFunctionCall","src":"2086:20:24"},"variableNames":[{"name":"x","nativeSrc":"2081:1:24","nodeType":"YulIdentifier","src":"2081:1:24"}]},{"nativeSrc":"2115:25:24","nodeType":"YulAssignment","src":"2115:25:24","value":{"arguments":[{"name":"y","nativeSrc":"2138:1:24","nodeType":"YulIdentifier","src":"2138:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2120:17:24","nodeType":"YulIdentifier","src":"2120:17:24"},"nativeSrc":"2120:20:24","nodeType":"YulFunctionCall","src":"2120:20:24"},"variableNames":[{"name":"y","nativeSrc":"2115:1:24","nodeType":"YulIdentifier","src":"2115:1:24"}]},{"body":{"nativeSrc":"2162:22:24","nodeType":"YulBlock","src":"2162:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"2164:16:24","nodeType":"YulIdentifier","src":"2164:16:24"},"nativeSrc":"2164:18:24","nodeType":"YulFunctionCall","src":"2164:18:24"},"nativeSrc":"2164:18:24","nodeType":"YulExpressionStatement","src":"2164:18:24"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"2159:1:24","nodeType":"YulIdentifier","src":"2159:1:24"}],"functionName":{"name":"iszero","nativeSrc":"2152:6:24","nodeType":"YulIdentifier","src":"2152:6:24"},"nativeSrc":"2152:9:24","nodeType":"YulFunctionCall","src":"2152:9:24"},"nativeSrc":"2149:35:24","nodeType":"YulIf","src":"2149:35:24"},{"nativeSrc":"2194:14:24","nodeType":"YulAssignment","src":"2194:14:24","value":{"arguments":[{"name":"x","nativeSrc":"2203:1:24","nodeType":"YulIdentifier","src":"2203:1:24"},{"name":"y","nativeSrc":"2206:1:24","nodeType":"YulIdentifier","src":"2206:1:24"}],"functionName":{"name":"div","nativeSrc":"2199:3:24","nodeType":"YulIdentifier","src":"2199:3:24"},"nativeSrc":"2199:9:24","nodeType":"YulFunctionCall","src":"2199:9:24"},"variableNames":[{"name":"r","nativeSrc":"2194:1:24","nodeType":"YulIdentifier","src":"2194:1:24"}]}]},"name":"checked_div_t_uint256","nativeSrc":"2029:185:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"2060:1:24","nodeType":"YulTypedName","src":"2060:1:24","type":""},{"name":"y","nativeSrc":"2063:1:24","nodeType":"YulTypedName","src":"2063:1:24","type":""}],"returnVariables":[{"name":"r","nativeSrc":"2069:1:24","nodeType":"YulTypedName","src":"2069:1:24","type":""}],"src":"2029:185:24"},{"body":{"nativeSrc":"2265:81:24","nodeType":"YulBlock","src":"2265:81:24","statements":[{"nativeSrc":"2275:65:24","nodeType":"YulAssignment","src":"2275:65:24","value":{"arguments":[{"name":"value","nativeSrc":"2290:5:24","nodeType":"YulIdentifier","src":"2290:5:24"},{"kind":"number","nativeSrc":"2297:42:24","nodeType":"YulLiteral","src":"2297:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2286:3:24","nodeType":"YulIdentifier","src":"2286:3:24"},"nativeSrc":"2286:54:24","nodeType":"YulFunctionCall","src":"2286:54:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2275:7:24","nodeType":"YulIdentifier","src":"2275:7:24"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2220:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2247:5:24","nodeType":"YulTypedName","src":"2247:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2257:7:24","nodeType":"YulTypedName","src":"2257:7:24","type":""}],"src":"2220:126:24"},{"body":{"nativeSrc":"2397:51:24","nodeType":"YulBlock","src":"2397:51:24","statements":[{"nativeSrc":"2407:35:24","nodeType":"YulAssignment","src":"2407:35:24","value":{"arguments":[{"name":"value","nativeSrc":"2436:5:24","nodeType":"YulIdentifier","src":"2436:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2418:17:24","nodeType":"YulIdentifier","src":"2418:17:24"},"nativeSrc":"2418:24:24","nodeType":"YulFunctionCall","src":"2418:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2407:7:24","nodeType":"YulIdentifier","src":"2407:7:24"}]}]},"name":"cleanup_t_address","nativeSrc":"2352:96:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2379:5:24","nodeType":"YulTypedName","src":"2379:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2389:7:24","nodeType":"YulTypedName","src":"2389:7:24","type":""}],"src":"2352:96:24"},{"body":{"nativeSrc":"2519:53:24","nodeType":"YulBlock","src":"2519:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2536:3:24","nodeType":"YulIdentifier","src":"2536:3:24"},{"arguments":[{"name":"value","nativeSrc":"2559:5:24","nodeType":"YulIdentifier","src":"2559:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2541:17:24","nodeType":"YulIdentifier","src":"2541:17:24"},"nativeSrc":"2541:24:24","nodeType":"YulFunctionCall","src":"2541:24:24"}],"functionName":{"name":"mstore","nativeSrc":"2529:6:24","nodeType":"YulIdentifier","src":"2529:6:24"},"nativeSrc":"2529:37:24","nodeType":"YulFunctionCall","src":"2529:37:24"},"nativeSrc":"2529:37:24","nodeType":"YulExpressionStatement","src":"2529:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2454:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2507:5:24","nodeType":"YulTypedName","src":"2507:5:24","type":""},{"name":"pos","nativeSrc":"2514:3:24","nodeType":"YulTypedName","src":"2514:3:24","type":""}],"src":"2454:118:24"},{"body":{"nativeSrc":"2676:124:24","nodeType":"YulBlock","src":"2676:124:24","statements":[{"nativeSrc":"2686:26:24","nodeType":"YulAssignment","src":"2686:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"2698:9:24","nodeType":"YulIdentifier","src":"2698:9:24"},{"kind":"number","nativeSrc":"2709:2:24","nodeType":"YulLiteral","src":"2709:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2694:3:24","nodeType":"YulIdentifier","src":"2694:3:24"},"nativeSrc":"2694:18:24","nodeType":"YulFunctionCall","src":"2694:18:24"},"variableNames":[{"name":"tail","nativeSrc":"2686:4:24","nodeType":"YulIdentifier","src":"2686:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2766:6:24","nodeType":"YulIdentifier","src":"2766:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"2779:9:24","nodeType":"YulIdentifier","src":"2779:9:24"},{"kind":"number","nativeSrc":"2790:1:24","nodeType":"YulLiteral","src":"2790:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2775:3:24","nodeType":"YulIdentifier","src":"2775:3:24"},"nativeSrc":"2775:17:24","nodeType":"YulFunctionCall","src":"2775:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2722:43:24","nodeType":"YulIdentifier","src":"2722:43:24"},"nativeSrc":"2722:71:24","nodeType":"YulFunctionCall","src":"2722:71:24"},"nativeSrc":"2722:71:24","nodeType":"YulExpressionStatement","src":"2722:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2578:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2648:9:24","nodeType":"YulTypedName","src":"2648:9:24","type":""},{"name":"value0","nativeSrc":"2660:6:24","nodeType":"YulTypedName","src":"2660:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2671:4:24","nodeType":"YulTypedName","src":"2671:4:24","type":""}],"src":"2578:222:24"},{"body":{"nativeSrc":"2846:35:24","nodeType":"YulBlock","src":"2846:35:24","statements":[{"nativeSrc":"2856:19:24","nodeType":"YulAssignment","src":"2856:19:24","value":{"arguments":[{"kind":"number","nativeSrc":"2872:2:24","nodeType":"YulLiteral","src":"2872:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2866:5:24","nodeType":"YulIdentifier","src":"2866:5:24"},"nativeSrc":"2866:9:24","nodeType":"YulFunctionCall","src":"2866:9:24"},"variableNames":[{"name":"memPtr","nativeSrc":"2856:6:24","nodeType":"YulIdentifier","src":"2856:6:24"}]}]},"name":"allocate_unbounded","nativeSrc":"2806:75:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"2839:6:24","nodeType":"YulTypedName","src":"2839:6:24","type":""}],"src":"2806:75:24"},{"body":{"nativeSrc":"2976:28:24","nodeType":"YulBlock","src":"2976:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2993:1:24","nodeType":"YulLiteral","src":"2993:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2996:1:24","nodeType":"YulLiteral","src":"2996:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2986:6:24","nodeType":"YulIdentifier","src":"2986:6:24"},"nativeSrc":"2986:12:24","nodeType":"YulFunctionCall","src":"2986:12:24"},"nativeSrc":"2986:12:24","nodeType":"YulExpressionStatement","src":"2986:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2887:117:24","nodeType":"YulFunctionDefinition","src":"2887:117:24"},{"body":{"nativeSrc":"3099:28:24","nodeType":"YulBlock","src":"3099:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3116:1:24","nodeType":"YulLiteral","src":"3116:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3119:1:24","nodeType":"YulLiteral","src":"3119:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3109:6:24","nodeType":"YulIdentifier","src":"3109:6:24"},"nativeSrc":"3109:12:24","nodeType":"YulFunctionCall","src":"3109:12:24"},"nativeSrc":"3109:12:24","nodeType":"YulExpressionStatement","src":"3109:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3010:117:24","nodeType":"YulFunctionDefinition","src":"3010:117:24"},{"body":{"nativeSrc":"3176:79:24","nodeType":"YulBlock","src":"3176:79:24","statements":[{"body":{"nativeSrc":"3233:16:24","nodeType":"YulBlock","src":"3233:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3242:1:24","nodeType":"YulLiteral","src":"3242:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3245:1:24","nodeType":"YulLiteral","src":"3245:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3235:6:24","nodeType":"YulIdentifier","src":"3235:6:24"},"nativeSrc":"3235:12:24","nodeType":"YulFunctionCall","src":"3235:12:24"},"nativeSrc":"3235:12:24","nodeType":"YulExpressionStatement","src":"3235:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3199:5:24","nodeType":"YulIdentifier","src":"3199:5:24"},{"arguments":[{"name":"value","nativeSrc":"3224:5:24","nodeType":"YulIdentifier","src":"3224:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3206:17:24","nodeType":"YulIdentifier","src":"3206:17:24"},"nativeSrc":"3206:24:24","nodeType":"YulFunctionCall","src":"3206:24:24"}],"functionName":{"name":"eq","nativeSrc":"3196:2:24","nodeType":"YulIdentifier","src":"3196:2:24"},"nativeSrc":"3196:35:24","nodeType":"YulFunctionCall","src":"3196:35:24"}],"functionName":{"name":"iszero","nativeSrc":"3189:6:24","nodeType":"YulIdentifier","src":"3189:6:24"},"nativeSrc":"3189:43:24","nodeType":"YulFunctionCall","src":"3189:43:24"},"nativeSrc":"3186:63:24","nodeType":"YulIf","src":"3186:63:24"}]},"name":"validator_revert_t_uint256","nativeSrc":"3133:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3169:5:24","nodeType":"YulTypedName","src":"3169:5:24","type":""}],"src":"3133:122:24"},{"body":{"nativeSrc":"3324:80:24","nodeType":"YulBlock","src":"3324:80:24","statements":[{"nativeSrc":"3334:22:24","nodeType":"YulAssignment","src":"3334:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"3349:6:24","nodeType":"YulIdentifier","src":"3349:6:24"}],"functionName":{"name":"mload","nativeSrc":"3343:5:24","nodeType":"YulIdentifier","src":"3343:5:24"},"nativeSrc":"3343:13:24","nodeType":"YulFunctionCall","src":"3343:13:24"},"variableNames":[{"name":"value","nativeSrc":"3334:5:24","nodeType":"YulIdentifier","src":"3334:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3392:5:24","nodeType":"YulIdentifier","src":"3392:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3365:26:24","nodeType":"YulIdentifier","src":"3365:26:24"},"nativeSrc":"3365:33:24","nodeType":"YulFunctionCall","src":"3365:33:24"},"nativeSrc":"3365:33:24","nodeType":"YulExpressionStatement","src":"3365:33:24"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3261:143:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3302:6:24","nodeType":"YulTypedName","src":"3302:6:24","type":""},{"name":"end","nativeSrc":"3310:3:24","nodeType":"YulTypedName","src":"3310:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3318:5:24","nodeType":"YulTypedName","src":"3318:5:24","type":""}],"src":"3261:143:24"},{"body":{"nativeSrc":"3487:274:24","nodeType":"YulBlock","src":"3487:274:24","statements":[{"body":{"nativeSrc":"3533:83:24","nodeType":"YulBlock","src":"3533:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3535:77:24","nodeType":"YulIdentifier","src":"3535:77:24"},"nativeSrc":"3535:79:24","nodeType":"YulFunctionCall","src":"3535:79:24"},"nativeSrc":"3535:79:24","nodeType":"YulExpressionStatement","src":"3535:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3508:7:24","nodeType":"YulIdentifier","src":"3508:7:24"},{"name":"headStart","nativeSrc":"3517:9:24","nodeType":"YulIdentifier","src":"3517:9:24"}],"functionName":{"name":"sub","nativeSrc":"3504:3:24","nodeType":"YulIdentifier","src":"3504:3:24"},"nativeSrc":"3504:23:24","nodeType":"YulFunctionCall","src":"3504:23:24"},{"kind":"number","nativeSrc":"3529:2:24","nodeType":"YulLiteral","src":"3529:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3500:3:24","nodeType":"YulIdentifier","src":"3500:3:24"},"nativeSrc":"3500:32:24","nodeType":"YulFunctionCall","src":"3500:32:24"},"nativeSrc":"3497:119:24","nodeType":"YulIf","src":"3497:119:24"},{"nativeSrc":"3626:128:24","nodeType":"YulBlock","src":"3626:128:24","statements":[{"nativeSrc":"3641:15:24","nodeType":"YulVariableDeclaration","src":"3641:15:24","value":{"kind":"number","nativeSrc":"3655:1:24","nodeType":"YulLiteral","src":"3655:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3645:6:24","nodeType":"YulTypedName","src":"3645:6:24","type":""}]},{"nativeSrc":"3670:74:24","nodeType":"YulAssignment","src":"3670:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3716:9:24","nodeType":"YulIdentifier","src":"3716:9:24"},{"name":"offset","nativeSrc":"3727:6:24","nodeType":"YulIdentifier","src":"3727:6:24"}],"functionName":{"name":"add","nativeSrc":"3712:3:24","nodeType":"YulIdentifier","src":"3712:3:24"},"nativeSrc":"3712:22:24","nodeType":"YulFunctionCall","src":"3712:22:24"},{"name":"dataEnd","nativeSrc":"3736:7:24","nodeType":"YulIdentifier","src":"3736:7:24"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3680:31:24","nodeType":"YulIdentifier","src":"3680:31:24"},"nativeSrc":"3680:64:24","nodeType":"YulFunctionCall","src":"3680:64:24"},"variableNames":[{"name":"value0","nativeSrc":"3670:6:24","nodeType":"YulIdentifier","src":"3670:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"3410:351:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3457:9:24","nodeType":"YulTypedName","src":"3457:9:24","type":""},{"name":"dataEnd","nativeSrc":"3468:7:24","nodeType":"YulTypedName","src":"3468:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3480:6:24","nodeType":"YulTypedName","src":"3480:6:24","type":""}],"src":"3410:351:24"},{"body":{"nativeSrc":"3873:72:24","nodeType":"YulBlock","src":"3873:72:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3895:6:24","nodeType":"YulIdentifier","src":"3895:6:24"},{"kind":"number","nativeSrc":"3903:1:24","nodeType":"YulLiteral","src":"3903:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3891:3:24","nodeType":"YulIdentifier","src":"3891:3:24"},"nativeSrc":"3891:14:24","nodeType":"YulFunctionCall","src":"3891:14:24"},{"hexValue":"4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e","kind":"string","nativeSrc":"3907:30:24","nodeType":"YulLiteral","src":"3907:30:24","type":"","value":"Not enough tokens available."}],"functionName":{"name":"mstore","nativeSrc":"3884:6:24","nodeType":"YulIdentifier","src":"3884:6:24"},"nativeSrc":"3884:54:24","nodeType":"YulFunctionCall","src":"3884:54:24"},"nativeSrc":"3884:54:24","nodeType":"YulExpressionStatement","src":"3884:54:24"}]},"name":"store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7","nativeSrc":"3767:178:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3865:6:24","nodeType":"YulTypedName","src":"3865:6:24","type":""}],"src":"3767:178:24"},{"body":{"nativeSrc":"4097:220:24","nodeType":"YulBlock","src":"4097:220:24","statements":[{"nativeSrc":"4107:74:24","nodeType":"YulAssignment","src":"4107:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"4173:3:24","nodeType":"YulIdentifier","src":"4173:3:24"},{"kind":"number","nativeSrc":"4178:2:24","nodeType":"YulLiteral","src":"4178:2:24","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4114:58:24","nodeType":"YulIdentifier","src":"4114:58:24"},"nativeSrc":"4114:67:24","nodeType":"YulFunctionCall","src":"4114:67:24"},"variableNames":[{"name":"pos","nativeSrc":"4107:3:24","nodeType":"YulIdentifier","src":"4107:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4279:3:24","nodeType":"YulIdentifier","src":"4279:3:24"}],"functionName":{"name":"store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7","nativeSrc":"4190:88:24","nodeType":"YulIdentifier","src":"4190:88:24"},"nativeSrc":"4190:93:24","nodeType":"YulFunctionCall","src":"4190:93:24"},"nativeSrc":"4190:93:24","nodeType":"YulExpressionStatement","src":"4190:93:24"},{"nativeSrc":"4292:19:24","nodeType":"YulAssignment","src":"4292:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"4303:3:24","nodeType":"YulIdentifier","src":"4303:3:24"},{"kind":"number","nativeSrc":"4308:2:24","nodeType":"YulLiteral","src":"4308:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4299:3:24","nodeType":"YulIdentifier","src":"4299:3:24"},"nativeSrc":"4299:12:24","nodeType":"YulFunctionCall","src":"4299:12:24"},"variableNames":[{"name":"end","nativeSrc":"4292:3:24","nodeType":"YulIdentifier","src":"4292:3:24"}]}]},"name":"abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack","nativeSrc":"3951:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4085:3:24","nodeType":"YulTypedName","src":"4085:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4093:3:24","nodeType":"YulTypedName","src":"4093:3:24","type":""}],"src":"3951:366:24"},{"body":{"nativeSrc":"4494:248:24","nodeType":"YulBlock","src":"4494:248:24","statements":[{"nativeSrc":"4504:26:24","nodeType":"YulAssignment","src":"4504:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"4516:9:24","nodeType":"YulIdentifier","src":"4516:9:24"},{"kind":"number","nativeSrc":"4527:2:24","nodeType":"YulLiteral","src":"4527:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4512:3:24","nodeType":"YulIdentifier","src":"4512:3:24"},"nativeSrc":"4512:18:24","nodeType":"YulFunctionCall","src":"4512:18:24"},"variableNames":[{"name":"tail","nativeSrc":"4504:4:24","nodeType":"YulIdentifier","src":"4504:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4551:9:24","nodeType":"YulIdentifier","src":"4551:9:24"},{"kind":"number","nativeSrc":"4562:1:24","nodeType":"YulLiteral","src":"4562:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4547:3:24","nodeType":"YulIdentifier","src":"4547:3:24"},"nativeSrc":"4547:17:24","nodeType":"YulFunctionCall","src":"4547:17:24"},{"arguments":[{"name":"tail","nativeSrc":"4570:4:24","nodeType":"YulIdentifier","src":"4570:4:24"},{"name":"headStart","nativeSrc":"4576:9:24","nodeType":"YulIdentifier","src":"4576:9:24"}],"functionName":{"name":"sub","nativeSrc":"4566:3:24","nodeType":"YulIdentifier","src":"4566:3:24"},"nativeSrc":"4566:20:24","nodeType":"YulFunctionCall","src":"4566:20:24"}],"functionName":{"name":"mstore","nativeSrc":"4540:6:24","nodeType":"YulIdentifier","src":"4540:6:24"},"nativeSrc":"4540:47:24","nodeType":"YulFunctionCall","src":"4540:47:24"},"nativeSrc":"4540:47:24","nodeType":"YulExpressionStatement","src":"4540:47:24"},{"nativeSrc":"4596:139:24","nodeType":"YulAssignment","src":"4596:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"4730:4:24","nodeType":"YulIdentifier","src":"4730:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack","nativeSrc":"4604:124:24","nodeType":"YulIdentifier","src":"4604:124:24"},"nativeSrc":"4604:131:24","nodeType":"YulFunctionCall","src":"4604:131:24"},"variableNames":[{"name":"tail","nativeSrc":"4596:4:24","nodeType":"YulIdentifier","src":"4596:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4323:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4474:9:24","nodeType":"YulTypedName","src":"4474:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4489:4:24","nodeType":"YulTypedName","src":"4489:4:24","type":""}],"src":"4323:419:24"},{"body":{"nativeSrc":"4813:53:24","nodeType":"YulBlock","src":"4813:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4830:3:24","nodeType":"YulIdentifier","src":"4830:3:24"},{"arguments":[{"name":"value","nativeSrc":"4853:5:24","nodeType":"YulIdentifier","src":"4853:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4835:17:24","nodeType":"YulIdentifier","src":"4835:17:24"},"nativeSrc":"4835:24:24","nodeType":"YulFunctionCall","src":"4835:24:24"}],"functionName":{"name":"mstore","nativeSrc":"4823:6:24","nodeType":"YulIdentifier","src":"4823:6:24"},"nativeSrc":"4823:37:24","nodeType":"YulFunctionCall","src":"4823:37:24"},"nativeSrc":"4823:37:24","nodeType":"YulExpressionStatement","src":"4823:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4748:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4801:5:24","nodeType":"YulTypedName","src":"4801:5:24","type":""},{"name":"pos","nativeSrc":"4808:3:24","nodeType":"YulTypedName","src":"4808:3:24","type":""}],"src":"4748:118:24"},{"body":{"nativeSrc":"4998:206:24","nodeType":"YulBlock","src":"4998:206:24","statements":[{"nativeSrc":"5008:26:24","nodeType":"YulAssignment","src":"5008:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"5020:9:24","nodeType":"YulIdentifier","src":"5020:9:24"},{"kind":"number","nativeSrc":"5031:2:24","nodeType":"YulLiteral","src":"5031:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5016:3:24","nodeType":"YulIdentifier","src":"5016:3:24"},"nativeSrc":"5016:18:24","nodeType":"YulFunctionCall","src":"5016:18:24"},"variableNames":[{"name":"tail","nativeSrc":"5008:4:24","nodeType":"YulIdentifier","src":"5008:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5088:6:24","nodeType":"YulIdentifier","src":"5088:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"5101:9:24","nodeType":"YulIdentifier","src":"5101:9:24"},{"kind":"number","nativeSrc":"5112:1:24","nodeType":"YulLiteral","src":"5112:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5097:3:24","nodeType":"YulIdentifier","src":"5097:3:24"},"nativeSrc":"5097:17:24","nodeType":"YulFunctionCall","src":"5097:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5044:43:24","nodeType":"YulIdentifier","src":"5044:43:24"},"nativeSrc":"5044:71:24","nodeType":"YulFunctionCall","src":"5044:71:24"},"nativeSrc":"5044:71:24","nodeType":"YulExpressionStatement","src":"5044:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5169:6:24","nodeType":"YulIdentifier","src":"5169:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"5182:9:24","nodeType":"YulIdentifier","src":"5182:9:24"},{"kind":"number","nativeSrc":"5193:2:24","nodeType":"YulLiteral","src":"5193:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5178:3:24","nodeType":"YulIdentifier","src":"5178:3:24"},"nativeSrc":"5178:18:24","nodeType":"YulFunctionCall","src":"5178:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5125:43:24","nodeType":"YulIdentifier","src":"5125:43:24"},"nativeSrc":"5125:72:24","nodeType":"YulFunctionCall","src":"5125:72:24"},"nativeSrc":"5125:72:24","nodeType":"YulExpressionStatement","src":"5125:72:24"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4872:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4962:9:24","nodeType":"YulTypedName","src":"4962:9:24","type":""},{"name":"value1","nativeSrc":"4974:6:24","nodeType":"YulTypedName","src":"4974:6:24","type":""},{"name":"value0","nativeSrc":"4982:6:24","nodeType":"YulTypedName","src":"4982:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4993:4:24","nodeType":"YulTypedName","src":"4993:4:24","type":""}],"src":"4872:332:24"},{"body":{"nativeSrc":"5252:48:24","nodeType":"YulBlock","src":"5252:48:24","statements":[{"nativeSrc":"5262:32:24","nodeType":"YulAssignment","src":"5262:32:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5287:5:24","nodeType":"YulIdentifier","src":"5287:5:24"}],"functionName":{"name":"iszero","nativeSrc":"5280:6:24","nodeType":"YulIdentifier","src":"5280:6:24"},"nativeSrc":"5280:13:24","nodeType":"YulFunctionCall","src":"5280:13:24"}],"functionName":{"name":"iszero","nativeSrc":"5273:6:24","nodeType":"YulIdentifier","src":"5273:6:24"},"nativeSrc":"5273:21:24","nodeType":"YulFunctionCall","src":"5273:21:24"},"variableNames":[{"name":"cleaned","nativeSrc":"5262:7:24","nodeType":"YulIdentifier","src":"5262:7:24"}]}]},"name":"cleanup_t_bool","nativeSrc":"5210:90:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5234:5:24","nodeType":"YulTypedName","src":"5234:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5244:7:24","nodeType":"YulTypedName","src":"5244:7:24","type":""}],"src":"5210:90:24"},{"body":{"nativeSrc":"5346:76:24","nodeType":"YulBlock","src":"5346:76:24","statements":[{"body":{"nativeSrc":"5400:16:24","nodeType":"YulBlock","src":"5400:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5409:1:24","nodeType":"YulLiteral","src":"5409:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"5412:1:24","nodeType":"YulLiteral","src":"5412:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5402:6:24","nodeType":"YulIdentifier","src":"5402:6:24"},"nativeSrc":"5402:12:24","nodeType":"YulFunctionCall","src":"5402:12:24"},"nativeSrc":"5402:12:24","nodeType":"YulExpressionStatement","src":"5402:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5369:5:24","nodeType":"YulIdentifier","src":"5369:5:24"},{"arguments":[{"name":"value","nativeSrc":"5391:5:24","nodeType":"YulIdentifier","src":"5391:5:24"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"5376:14:24","nodeType":"YulIdentifier","src":"5376:14:24"},"nativeSrc":"5376:21:24","nodeType":"YulFunctionCall","src":"5376:21:24"}],"functionName":{"name":"eq","nativeSrc":"5366:2:24","nodeType":"YulIdentifier","src":"5366:2:24"},"nativeSrc":"5366:32:24","nodeType":"YulFunctionCall","src":"5366:32:24"}],"functionName":{"name":"iszero","nativeSrc":"5359:6:24","nodeType":"YulIdentifier","src":"5359:6:24"},"nativeSrc":"5359:40:24","nodeType":"YulFunctionCall","src":"5359:40:24"},"nativeSrc":"5356:60:24","nodeType":"YulIf","src":"5356:60:24"}]},"name":"validator_revert_t_bool","nativeSrc":"5306:116:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5339:5:24","nodeType":"YulTypedName","src":"5339:5:24","type":""}],"src":"5306:116:24"},{"body":{"nativeSrc":"5488:77:24","nodeType":"YulBlock","src":"5488:77:24","statements":[{"nativeSrc":"5498:22:24","nodeType":"YulAssignment","src":"5498:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"5513:6:24","nodeType":"YulIdentifier","src":"5513:6:24"}],"functionName":{"name":"mload","nativeSrc":"5507:5:24","nodeType":"YulIdentifier","src":"5507:5:24"},"nativeSrc":"5507:13:24","nodeType":"YulFunctionCall","src":"5507:13:24"},"variableNames":[{"name":"value","nativeSrc":"5498:5:24","nodeType":"YulIdentifier","src":"5498:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5553:5:24","nodeType":"YulIdentifier","src":"5553:5:24"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"5529:23:24","nodeType":"YulIdentifier","src":"5529:23:24"},"nativeSrc":"5529:30:24","nodeType":"YulFunctionCall","src":"5529:30:24"},"nativeSrc":"5529:30:24","nodeType":"YulExpressionStatement","src":"5529:30:24"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"5428:137:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5466:6:24","nodeType":"YulTypedName","src":"5466:6:24","type":""},{"name":"end","nativeSrc":"5474:3:24","nodeType":"YulTypedName","src":"5474:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5482:5:24","nodeType":"YulTypedName","src":"5482:5:24","type":""}],"src":"5428:137:24"},{"body":{"nativeSrc":"5645:271:24","nodeType":"YulBlock","src":"5645:271:24","statements":[{"body":{"nativeSrc":"5691:83:24","nodeType":"YulBlock","src":"5691:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5693:77:24","nodeType":"YulIdentifier","src":"5693:77:24"},"nativeSrc":"5693:79:24","nodeType":"YulFunctionCall","src":"5693:79:24"},"nativeSrc":"5693:79:24","nodeType":"YulExpressionStatement","src":"5693:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5666:7:24","nodeType":"YulIdentifier","src":"5666:7:24"},{"name":"headStart","nativeSrc":"5675:9:24","nodeType":"YulIdentifier","src":"5675:9:24"}],"functionName":{"name":"sub","nativeSrc":"5662:3:24","nodeType":"YulIdentifier","src":"5662:3:24"},"nativeSrc":"5662:23:24","nodeType":"YulFunctionCall","src":"5662:23:24"},{"kind":"number","nativeSrc":"5687:2:24","nodeType":"YulLiteral","src":"5687:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5658:3:24","nodeType":"YulIdentifier","src":"5658:3:24"},"nativeSrc":"5658:32:24","nodeType":"YulFunctionCall","src":"5658:32:24"},"nativeSrc":"5655:119:24","nodeType":"YulIf","src":"5655:119:24"},{"nativeSrc":"5784:125:24","nodeType":"YulBlock","src":"5784:125:24","statements":[{"nativeSrc":"5799:15:24","nodeType":"YulVariableDeclaration","src":"5799:15:24","value":{"kind":"number","nativeSrc":"5813:1:24","nodeType":"YulLiteral","src":"5813:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5803:6:24","nodeType":"YulTypedName","src":"5803:6:24","type":""}]},{"nativeSrc":"5828:71:24","nodeType":"YulAssignment","src":"5828:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5871:9:24","nodeType":"YulIdentifier","src":"5871:9:24"},{"name":"offset","nativeSrc":"5882:6:24","nodeType":"YulIdentifier","src":"5882:6:24"}],"functionName":{"name":"add","nativeSrc":"5867:3:24","nodeType":"YulIdentifier","src":"5867:3:24"},"nativeSrc":"5867:22:24","nodeType":"YulFunctionCall","src":"5867:22:24"},{"name":"dataEnd","nativeSrc":"5891:7:24","nodeType":"YulIdentifier","src":"5891:7:24"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"5838:28:24","nodeType":"YulIdentifier","src":"5838:28:24"},"nativeSrc":"5838:61:24","nodeType":"YulFunctionCall","src":"5838:61:24"},"variableNames":[{"name":"value0","nativeSrc":"5828:6:24","nodeType":"YulIdentifier","src":"5828:6:24"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"5571:345:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5615:9:24","nodeType":"YulTypedName","src":"5615:9:24","type":""},{"name":"dataEnd","nativeSrc":"5626:7:24","nodeType":"YulTypedName","src":"5626:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5638:6:24","nodeType":"YulTypedName","src":"5638:6:24","type":""}],"src":"5571:345:24"},{"body":{"nativeSrc":"5965:79:24","nodeType":"YulBlock","src":"5965:79:24","statements":[{"body":{"nativeSrc":"6022:16:24","nodeType":"YulBlock","src":"6022:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6031:1:24","nodeType":"YulLiteral","src":"6031:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"6034:1:24","nodeType":"YulLiteral","src":"6034:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6024:6:24","nodeType":"YulIdentifier","src":"6024:6:24"},"nativeSrc":"6024:12:24","nodeType":"YulFunctionCall","src":"6024:12:24"},"nativeSrc":"6024:12:24","nodeType":"YulExpressionStatement","src":"6024:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5988:5:24","nodeType":"YulIdentifier","src":"5988:5:24"},{"arguments":[{"name":"value","nativeSrc":"6013:5:24","nodeType":"YulIdentifier","src":"6013:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5995:17:24","nodeType":"YulIdentifier","src":"5995:17:24"},"nativeSrc":"5995:24:24","nodeType":"YulFunctionCall","src":"5995:24:24"}],"functionName":{"name":"eq","nativeSrc":"5985:2:24","nodeType":"YulIdentifier","src":"5985:2:24"},"nativeSrc":"5985:35:24","nodeType":"YulFunctionCall","src":"5985:35:24"}],"functionName":{"name":"iszero","nativeSrc":"5978:6:24","nodeType":"YulIdentifier","src":"5978:6:24"},"nativeSrc":"5978:43:24","nodeType":"YulFunctionCall","src":"5978:43:24"},"nativeSrc":"5975:63:24","nodeType":"YulIf","src":"5975:63:24"}]},"name":"validator_revert_t_address","nativeSrc":"5922:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5958:5:24","nodeType":"YulTypedName","src":"5958:5:24","type":""}],"src":"5922:122:24"},{"body":{"nativeSrc":"6102:87:24","nodeType":"YulBlock","src":"6102:87:24","statements":[{"nativeSrc":"6112:29:24","nodeType":"YulAssignment","src":"6112:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"6134:6:24","nodeType":"YulIdentifier","src":"6134:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"6121:12:24","nodeType":"YulIdentifier","src":"6121:12:24"},"nativeSrc":"6121:20:24","nodeType":"YulFunctionCall","src":"6121:20:24"},"variableNames":[{"name":"value","nativeSrc":"6112:5:24","nodeType":"YulIdentifier","src":"6112:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6177:5:24","nodeType":"YulIdentifier","src":"6177:5:24"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"6150:26:24","nodeType":"YulIdentifier","src":"6150:26:24"},"nativeSrc":"6150:33:24","nodeType":"YulFunctionCall","src":"6150:33:24"},"nativeSrc":"6150:33:24","nodeType":"YulExpressionStatement","src":"6150:33:24"}]},"name":"abi_decode_t_address","nativeSrc":"6050:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6080:6:24","nodeType":"YulTypedName","src":"6080:6:24","type":""},{"name":"end","nativeSrc":"6088:3:24","nodeType":"YulTypedName","src":"6088:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6096:5:24","nodeType":"YulTypedName","src":"6096:5:24","type":""}],"src":"6050:139:24"},{"body":{"nativeSrc":"6247:87:24","nodeType":"YulBlock","src":"6247:87:24","statements":[{"nativeSrc":"6257:29:24","nodeType":"YulAssignment","src":"6257:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"6279:6:24","nodeType":"YulIdentifier","src":"6279:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"6266:12:24","nodeType":"YulIdentifier","src":"6266:12:24"},"nativeSrc":"6266:20:24","nodeType":"YulFunctionCall","src":"6266:20:24"},"variableNames":[{"name":"value","nativeSrc":"6257:5:24","nodeType":"YulIdentifier","src":"6257:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6322:5:24","nodeType":"YulIdentifier","src":"6322:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"6295:26:24","nodeType":"YulIdentifier","src":"6295:26:24"},"nativeSrc":"6295:33:24","nodeType":"YulFunctionCall","src":"6295:33:24"},"nativeSrc":"6295:33:24","nodeType":"YulExpressionStatement","src":"6295:33:24"}]},"name":"abi_decode_t_uint256","nativeSrc":"6195:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6225:6:24","nodeType":"YulTypedName","src":"6225:6:24","type":""},{"name":"end","nativeSrc":"6233:3:24","nodeType":"YulTypedName","src":"6233:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6241:5:24","nodeType":"YulTypedName","src":"6241:5:24","type":""}],"src":"6195:139:24"},{"body":{"nativeSrc":"6440:519:24","nodeType":"YulBlock","src":"6440:519:24","statements":[{"body":{"nativeSrc":"6486:83:24","nodeType":"YulBlock","src":"6486:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6488:77:24","nodeType":"YulIdentifier","src":"6488:77:24"},"nativeSrc":"6488:79:24","nodeType":"YulFunctionCall","src":"6488:79:24"},"nativeSrc":"6488:79:24","nodeType":"YulExpressionStatement","src":"6488:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6461:7:24","nodeType":"YulIdentifier","src":"6461:7:24"},{"name":"headStart","nativeSrc":"6470:9:24","nodeType":"YulIdentifier","src":"6470:9:24"}],"functionName":{"name":"sub","nativeSrc":"6457:3:24","nodeType":"YulIdentifier","src":"6457:3:24"},"nativeSrc":"6457:23:24","nodeType":"YulFunctionCall","src":"6457:23:24"},{"kind":"number","nativeSrc":"6482:2:24","nodeType":"YulLiteral","src":"6482:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6453:3:24","nodeType":"YulIdentifier","src":"6453:3:24"},"nativeSrc":"6453:32:24","nodeType":"YulFunctionCall","src":"6453:32:24"},"nativeSrc":"6450:119:24","nodeType":"YulIf","src":"6450:119:24"},{"nativeSrc":"6579:117:24","nodeType":"YulBlock","src":"6579:117:24","statements":[{"nativeSrc":"6594:15:24","nodeType":"YulVariableDeclaration","src":"6594:15:24","value":{"kind":"number","nativeSrc":"6608:1:24","nodeType":"YulLiteral","src":"6608:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6598:6:24","nodeType":"YulTypedName","src":"6598:6:24","type":""}]},{"nativeSrc":"6623:63:24","nodeType":"YulAssignment","src":"6623:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6658:9:24","nodeType":"YulIdentifier","src":"6658:9:24"},{"name":"offset","nativeSrc":"6669:6:24","nodeType":"YulIdentifier","src":"6669:6:24"}],"functionName":{"name":"add","nativeSrc":"6654:3:24","nodeType":"YulIdentifier","src":"6654:3:24"},"nativeSrc":"6654:22:24","nodeType":"YulFunctionCall","src":"6654:22:24"},{"name":"dataEnd","nativeSrc":"6678:7:24","nodeType":"YulIdentifier","src":"6678:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6633:20:24","nodeType":"YulIdentifier","src":"6633:20:24"},"nativeSrc":"6633:53:24","nodeType":"YulFunctionCall","src":"6633:53:24"},"variableNames":[{"name":"value0","nativeSrc":"6623:6:24","nodeType":"YulIdentifier","src":"6623:6:24"}]}]},{"nativeSrc":"6706:118:24","nodeType":"YulBlock","src":"6706:118:24","statements":[{"nativeSrc":"6721:16:24","nodeType":"YulVariableDeclaration","src":"6721:16:24","value":{"kind":"number","nativeSrc":"6735:2:24","nodeType":"YulLiteral","src":"6735:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6725:6:24","nodeType":"YulTypedName","src":"6725:6:24","type":""}]},{"nativeSrc":"6751:63:24","nodeType":"YulAssignment","src":"6751:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6786:9:24","nodeType":"YulIdentifier","src":"6786:9:24"},{"name":"offset","nativeSrc":"6797:6:24","nodeType":"YulIdentifier","src":"6797:6:24"}],"functionName":{"name":"add","nativeSrc":"6782:3:24","nodeType":"YulIdentifier","src":"6782:3:24"},"nativeSrc":"6782:22:24","nodeType":"YulFunctionCall","src":"6782:22:24"},{"name":"dataEnd","nativeSrc":"6806:7:24","nodeType":"YulIdentifier","src":"6806:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6761:20:24","nodeType":"YulIdentifier","src":"6761:20:24"},"nativeSrc":"6761:53:24","nodeType":"YulFunctionCall","src":"6761:53:24"},"variableNames":[{"name":"value1","nativeSrc":"6751:6:24","nodeType":"YulIdentifier","src":"6751:6:24"}]}]},{"nativeSrc":"6834:118:24","nodeType":"YulBlock","src":"6834:118:24","statements":[{"nativeSrc":"6849:16:24","nodeType":"YulVariableDeclaration","src":"6849:16:24","value":{"kind":"number","nativeSrc":"6863:2:24","nodeType":"YulLiteral","src":"6863:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6853:6:24","nodeType":"YulTypedName","src":"6853:6:24","type":""}]},{"nativeSrc":"6879:63:24","nodeType":"YulAssignment","src":"6879:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6914:9:24","nodeType":"YulIdentifier","src":"6914:9:24"},{"name":"offset","nativeSrc":"6925:6:24","nodeType":"YulIdentifier","src":"6925:6:24"}],"functionName":{"name":"add","nativeSrc":"6910:3:24","nodeType":"YulIdentifier","src":"6910:3:24"},"nativeSrc":"6910:22:24","nodeType":"YulFunctionCall","src":"6910:22:24"},{"name":"dataEnd","nativeSrc":"6934:7:24","nodeType":"YulIdentifier","src":"6934:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6889:20:24","nodeType":"YulIdentifier","src":"6889:20:24"},"nativeSrc":"6889:53:24","nodeType":"YulFunctionCall","src":"6889:53:24"},"variableNames":[{"name":"value2","nativeSrc":"6879:6:24","nodeType":"YulIdentifier","src":"6879:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"6340:619:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6394:9:24","nodeType":"YulTypedName","src":"6394:9:24","type":""},{"name":"dataEnd","nativeSrc":"6405:7:24","nodeType":"YulTypedName","src":"6405:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6417:6:24","nodeType":"YulTypedName","src":"6417:6:24","type":""},{"name":"value1","nativeSrc":"6425:6:24","nodeType":"YulTypedName","src":"6425:6:24","type":""},{"name":"value2","nativeSrc":"6433:6:24","nodeType":"YulTypedName","src":"6433:6:24","type":""}],"src":"6340:619:24"},{"body":{"nativeSrc":"7014:84:24","nodeType":"YulBlock","src":"7014:84:24","statements":[{"nativeSrc":"7024:29:24","nodeType":"YulAssignment","src":"7024:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"7046:6:24","nodeType":"YulIdentifier","src":"7046:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"7033:12:24","nodeType":"YulIdentifier","src":"7033:12:24"},"nativeSrc":"7033:20:24","nodeType":"YulFunctionCall","src":"7033:20:24"},"variableNames":[{"name":"value","nativeSrc":"7024:5:24","nodeType":"YulIdentifier","src":"7024:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7086:5:24","nodeType":"YulIdentifier","src":"7086:5:24"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"7062:23:24","nodeType":"YulIdentifier","src":"7062:23:24"},"nativeSrc":"7062:30:24","nodeType":"YulFunctionCall","src":"7062:30:24"},"nativeSrc":"7062:30:24","nodeType":"YulExpressionStatement","src":"7062:30:24"}]},"name":"abi_decode_t_bool","nativeSrc":"6965:133:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6992:6:24","nodeType":"YulTypedName","src":"6992:6:24","type":""},{"name":"end","nativeSrc":"7000:3:24","nodeType":"YulTypedName","src":"7000:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7008:5:24","nodeType":"YulTypedName","src":"7008:5:24","type":""}],"src":"6965:133:24"},{"body":{"nativeSrc":"7167:260:24","nodeType":"YulBlock","src":"7167:260:24","statements":[{"body":{"nativeSrc":"7213:83:24","nodeType":"YulBlock","src":"7213:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7215:77:24","nodeType":"YulIdentifier","src":"7215:77:24"},"nativeSrc":"7215:79:24","nodeType":"YulFunctionCall","src":"7215:79:24"},"nativeSrc":"7215:79:24","nodeType":"YulExpressionStatement","src":"7215:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7188:7:24","nodeType":"YulIdentifier","src":"7188:7:24"},{"name":"headStart","nativeSrc":"7197:9:24","nodeType":"YulIdentifier","src":"7197:9:24"}],"functionName":{"name":"sub","nativeSrc":"7184:3:24","nodeType":"YulIdentifier","src":"7184:3:24"},"nativeSrc":"7184:23:24","nodeType":"YulFunctionCall","src":"7184:23:24"},{"kind":"number","nativeSrc":"7209:2:24","nodeType":"YulLiteral","src":"7209:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7180:3:24","nodeType":"YulIdentifier","src":"7180:3:24"},"nativeSrc":"7180:32:24","nodeType":"YulFunctionCall","src":"7180:32:24"},"nativeSrc":"7177:119:24","nodeType":"YulIf","src":"7177:119:24"},{"nativeSrc":"7306:114:24","nodeType":"YulBlock","src":"7306:114:24","statements":[{"nativeSrc":"7321:15:24","nodeType":"YulVariableDeclaration","src":"7321:15:24","value":{"kind":"number","nativeSrc":"7335:1:24","nodeType":"YulLiteral","src":"7335:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7325:6:24","nodeType":"YulTypedName","src":"7325:6:24","type":""}]},{"nativeSrc":"7350:60:24","nodeType":"YulAssignment","src":"7350:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7382:9:24","nodeType":"YulIdentifier","src":"7382:9:24"},{"name":"offset","nativeSrc":"7393:6:24","nodeType":"YulIdentifier","src":"7393:6:24"}],"functionName":{"name":"add","nativeSrc":"7378:3:24","nodeType":"YulIdentifier","src":"7378:3:24"},"nativeSrc":"7378:22:24","nodeType":"YulFunctionCall","src":"7378:22:24"},{"name":"dataEnd","nativeSrc":"7402:7:24","nodeType":"YulIdentifier","src":"7402:7:24"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"7360:17:24","nodeType":"YulIdentifier","src":"7360:17:24"},"nativeSrc":"7360:50:24","nodeType":"YulFunctionCall","src":"7360:50:24"},"variableNames":[{"name":"value0","nativeSrc":"7350:6:24","nodeType":"YulIdentifier","src":"7350:6:24"}]}]}]},"name":"abi_decode_tuple_t_bool","nativeSrc":"7104:323:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7137:9:24","nodeType":"YulTypedName","src":"7137:9:24","type":""},{"name":"dataEnd","nativeSrc":"7148:7:24","nodeType":"YulTypedName","src":"7148:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7160:6:24","nodeType":"YulTypedName","src":"7160:6:24","type":""}],"src":"7104:323:24"},{"body":{"nativeSrc":"7499:263:24","nodeType":"YulBlock","src":"7499:263:24","statements":[{"body":{"nativeSrc":"7545:83:24","nodeType":"YulBlock","src":"7545:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7547:77:24","nodeType":"YulIdentifier","src":"7547:77:24"},"nativeSrc":"7547:79:24","nodeType":"YulFunctionCall","src":"7547:79:24"},"nativeSrc":"7547:79:24","nodeType":"YulExpressionStatement","src":"7547:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7520:7:24","nodeType":"YulIdentifier","src":"7520:7:24"},{"name":"headStart","nativeSrc":"7529:9:24","nodeType":"YulIdentifier","src":"7529:9:24"}],"functionName":{"name":"sub","nativeSrc":"7516:3:24","nodeType":"YulIdentifier","src":"7516:3:24"},"nativeSrc":"7516:23:24","nodeType":"YulFunctionCall","src":"7516:23:24"},{"kind":"number","nativeSrc":"7541:2:24","nodeType":"YulLiteral","src":"7541:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7512:3:24","nodeType":"YulIdentifier","src":"7512:3:24"},"nativeSrc":"7512:32:24","nodeType":"YulFunctionCall","src":"7512:32:24"},"nativeSrc":"7509:119:24","nodeType":"YulIf","src":"7509:119:24"},{"nativeSrc":"7638:117:24","nodeType":"YulBlock","src":"7638:117:24","statements":[{"nativeSrc":"7653:15:24","nodeType":"YulVariableDeclaration","src":"7653:15:24","value":{"kind":"number","nativeSrc":"7667:1:24","nodeType":"YulLiteral","src":"7667:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7657:6:24","nodeType":"YulTypedName","src":"7657:6:24","type":""}]},{"nativeSrc":"7682:63:24","nodeType":"YulAssignment","src":"7682:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7717:9:24","nodeType":"YulIdentifier","src":"7717:9:24"},{"name":"offset","nativeSrc":"7728:6:24","nodeType":"YulIdentifier","src":"7728:6:24"}],"functionName":{"name":"add","nativeSrc":"7713:3:24","nodeType":"YulIdentifier","src":"7713:3:24"},"nativeSrc":"7713:22:24","nodeType":"YulFunctionCall","src":"7713:22:24"},{"name":"dataEnd","nativeSrc":"7737:7:24","nodeType":"YulIdentifier","src":"7737:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7692:20:24","nodeType":"YulIdentifier","src":"7692:20:24"},"nativeSrc":"7692:53:24","nodeType":"YulFunctionCall","src":"7692:53:24"},"variableNames":[{"name":"value0","nativeSrc":"7682:6:24","nodeType":"YulIdentifier","src":"7682:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"7433:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7469:9:24","nodeType":"YulTypedName","src":"7469:9:24","type":""},{"name":"dataEnd","nativeSrc":"7480:7:24","nodeType":"YulTypedName","src":"7480:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7492:6:24","nodeType":"YulTypedName","src":"7492:6:24","type":""}],"src":"7433:329:24"},{"body":{"nativeSrc":"7821:51:24","nodeType":"YulBlock","src":"7821:51:24","statements":[{"nativeSrc":"7831:35:24","nodeType":"YulAssignment","src":"7831:35:24","value":{"arguments":[{"name":"value","nativeSrc":"7860:5:24","nodeType":"YulIdentifier","src":"7860:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"7842:17:24","nodeType":"YulIdentifier","src":"7842:17:24"},"nativeSrc":"7842:24:24","nodeType":"YulFunctionCall","src":"7842:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"7831:7:24","nodeType":"YulIdentifier","src":"7831:7:24"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"7768:104:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7803:5:24","nodeType":"YulTypedName","src":"7803:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7813:7:24","nodeType":"YulTypedName","src":"7813:7:24","type":""}],"src":"7768:104:24"},{"body":{"nativeSrc":"7929:87:24","nodeType":"YulBlock","src":"7929:87:24","statements":[{"body":{"nativeSrc":"7994:16:24","nodeType":"YulBlock","src":"7994:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8003:1:24","nodeType":"YulLiteral","src":"8003:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"8006:1:24","nodeType":"YulLiteral","src":"8006:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7996:6:24","nodeType":"YulIdentifier","src":"7996:6:24"},"nativeSrc":"7996:12:24","nodeType":"YulFunctionCall","src":"7996:12:24"},"nativeSrc":"7996:12:24","nodeType":"YulExpressionStatement","src":"7996:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7952:5:24","nodeType":"YulIdentifier","src":"7952:5:24"},{"arguments":[{"name":"value","nativeSrc":"7985:5:24","nodeType":"YulIdentifier","src":"7985:5:24"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"7959:25:24","nodeType":"YulIdentifier","src":"7959:25:24"},"nativeSrc":"7959:32:24","nodeType":"YulFunctionCall","src":"7959:32:24"}],"functionName":{"name":"eq","nativeSrc":"7949:2:24","nodeType":"YulIdentifier","src":"7949:2:24"},"nativeSrc":"7949:43:24","nodeType":"YulFunctionCall","src":"7949:43:24"}],"functionName":{"name":"iszero","nativeSrc":"7942:6:24","nodeType":"YulIdentifier","src":"7942:6:24"},"nativeSrc":"7942:51:24","nodeType":"YulFunctionCall","src":"7942:51:24"},"nativeSrc":"7939:71:24","nodeType":"YulIf","src":"7939:71:24"}]},"name":"validator_revert_t_address_payable","nativeSrc":"7878:138:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7922:5:24","nodeType":"YulTypedName","src":"7922:5:24","type":""}],"src":"7878:138:24"},{"body":{"nativeSrc":"8082:95:24","nodeType":"YulBlock","src":"8082:95:24","statements":[{"nativeSrc":"8092:29:24","nodeType":"YulAssignment","src":"8092:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"8114:6:24","nodeType":"YulIdentifier","src":"8114:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"8101:12:24","nodeType":"YulIdentifier","src":"8101:12:24"},"nativeSrc":"8101:20:24","nodeType":"YulFunctionCall","src":"8101:20:24"},"variableNames":[{"name":"value","nativeSrc":"8092:5:24","nodeType":"YulIdentifier","src":"8092:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8165:5:24","nodeType":"YulIdentifier","src":"8165:5:24"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"8130:34:24","nodeType":"YulIdentifier","src":"8130:34:24"},"nativeSrc":"8130:41:24","nodeType":"YulFunctionCall","src":"8130:41:24"},"nativeSrc":"8130:41:24","nodeType":"YulExpressionStatement","src":"8130:41:24"}]},"name":"abi_decode_t_address_payable","nativeSrc":"8022:155:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8060:6:24","nodeType":"YulTypedName","src":"8060:6:24","type":""},{"name":"end","nativeSrc":"8068:3:24","nodeType":"YulTypedName","src":"8068:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8076:5:24","nodeType":"YulTypedName","src":"8076:5:24","type":""}],"src":"8022:155:24"},{"body":{"nativeSrc":"8274:399:24","nodeType":"YulBlock","src":"8274:399:24","statements":[{"body":{"nativeSrc":"8320:83:24","nodeType":"YulBlock","src":"8320:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8322:77:24","nodeType":"YulIdentifier","src":"8322:77:24"},"nativeSrc":"8322:79:24","nodeType":"YulFunctionCall","src":"8322:79:24"},"nativeSrc":"8322:79:24","nodeType":"YulExpressionStatement","src":"8322:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8295:7:24","nodeType":"YulIdentifier","src":"8295:7:24"},{"name":"headStart","nativeSrc":"8304:9:24","nodeType":"YulIdentifier","src":"8304:9:24"}],"functionName":{"name":"sub","nativeSrc":"8291:3:24","nodeType":"YulIdentifier","src":"8291:3:24"},"nativeSrc":"8291:23:24","nodeType":"YulFunctionCall","src":"8291:23:24"},{"kind":"number","nativeSrc":"8316:2:24","nodeType":"YulLiteral","src":"8316:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8287:3:24","nodeType":"YulIdentifier","src":"8287:3:24"},"nativeSrc":"8287:32:24","nodeType":"YulFunctionCall","src":"8287:32:24"},"nativeSrc":"8284:119:24","nodeType":"YulIf","src":"8284:119:24"},{"nativeSrc":"8413:125:24","nodeType":"YulBlock","src":"8413:125:24","statements":[{"nativeSrc":"8428:15:24","nodeType":"YulVariableDeclaration","src":"8428:15:24","value":{"kind":"number","nativeSrc":"8442:1:24","nodeType":"YulLiteral","src":"8442:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8432:6:24","nodeType":"YulTypedName","src":"8432:6:24","type":""}]},{"nativeSrc":"8457:71:24","nodeType":"YulAssignment","src":"8457:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8500:9:24","nodeType":"YulIdentifier","src":"8500:9:24"},{"name":"offset","nativeSrc":"8511:6:24","nodeType":"YulIdentifier","src":"8511:6:24"}],"functionName":{"name":"add","nativeSrc":"8496:3:24","nodeType":"YulIdentifier","src":"8496:3:24"},"nativeSrc":"8496:22:24","nodeType":"YulFunctionCall","src":"8496:22:24"},{"name":"dataEnd","nativeSrc":"8520:7:24","nodeType":"YulIdentifier","src":"8520:7:24"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"8467:28:24","nodeType":"YulIdentifier","src":"8467:28:24"},"nativeSrc":"8467:61:24","nodeType":"YulFunctionCall","src":"8467:61:24"},"variableNames":[{"name":"value0","nativeSrc":"8457:6:24","nodeType":"YulIdentifier","src":"8457:6:24"}]}]},{"nativeSrc":"8548:118:24","nodeType":"YulBlock","src":"8548:118:24","statements":[{"nativeSrc":"8563:16:24","nodeType":"YulVariableDeclaration","src":"8563:16:24","value":{"kind":"number","nativeSrc":"8577:2:24","nodeType":"YulLiteral","src":"8577:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8567:6:24","nodeType":"YulTypedName","src":"8567:6:24","type":""}]},{"nativeSrc":"8593:63:24","nodeType":"YulAssignment","src":"8593:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8628:9:24","nodeType":"YulIdentifier","src":"8628:9:24"},{"name":"offset","nativeSrc":"8639:6:24","nodeType":"YulIdentifier","src":"8639:6:24"}],"functionName":{"name":"add","nativeSrc":"8624:3:24","nodeType":"YulIdentifier","src":"8624:3:24"},"nativeSrc":"8624:22:24","nodeType":"YulFunctionCall","src":"8624:22:24"},{"name":"dataEnd","nativeSrc":"8648:7:24","nodeType":"YulIdentifier","src":"8648:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8603:20:24","nodeType":"YulIdentifier","src":"8603:20:24"},"nativeSrc":"8603:53:24","nodeType":"YulFunctionCall","src":"8603:53:24"},"variableNames":[{"name":"value1","nativeSrc":"8593:6:24","nodeType":"YulIdentifier","src":"8593:6:24"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"8183:490:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8236:9:24","nodeType":"YulTypedName","src":"8236:9:24","type":""},{"name":"dataEnd","nativeSrc":"8247:7:24","nodeType":"YulTypedName","src":"8247:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8259:6:24","nodeType":"YulTypedName","src":"8259:6:24","type":""},{"name":"value1","nativeSrc":"8267:6:24","nodeType":"YulTypedName","src":"8267:6:24","type":""}],"src":"8183:490:24"},{"body":{"nativeSrc":"8745:263:24","nodeType":"YulBlock","src":"8745:263:24","statements":[{"body":{"nativeSrc":"8791:83:24","nodeType":"YulBlock","src":"8791:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8793:77:24","nodeType":"YulIdentifier","src":"8793:77:24"},"nativeSrc":"8793:79:24","nodeType":"YulFunctionCall","src":"8793:79:24"},"nativeSrc":"8793:79:24","nodeType":"YulExpressionStatement","src":"8793:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8766:7:24","nodeType":"YulIdentifier","src":"8766:7:24"},{"name":"headStart","nativeSrc":"8775:9:24","nodeType":"YulIdentifier","src":"8775:9:24"}],"functionName":{"name":"sub","nativeSrc":"8762:3:24","nodeType":"YulIdentifier","src":"8762:3:24"},"nativeSrc":"8762:23:24","nodeType":"YulFunctionCall","src":"8762:23:24"},{"kind":"number","nativeSrc":"8787:2:24","nodeType":"YulLiteral","src":"8787:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8758:3:24","nodeType":"YulIdentifier","src":"8758:3:24"},"nativeSrc":"8758:32:24","nodeType":"YulFunctionCall","src":"8758:32:24"},"nativeSrc":"8755:119:24","nodeType":"YulIf","src":"8755:119:24"},{"nativeSrc":"8884:117:24","nodeType":"YulBlock","src":"8884:117:24","statements":[{"nativeSrc":"8899:15:24","nodeType":"YulVariableDeclaration","src":"8899:15:24","value":{"kind":"number","nativeSrc":"8913:1:24","nodeType":"YulLiteral","src":"8913:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8903:6:24","nodeType":"YulTypedName","src":"8903:6:24","type":""}]},{"nativeSrc":"8928:63:24","nodeType":"YulAssignment","src":"8928:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8963:9:24","nodeType":"YulIdentifier","src":"8963:9:24"},{"name":"offset","nativeSrc":"8974:6:24","nodeType":"YulIdentifier","src":"8974:6:24"}],"functionName":{"name":"add","nativeSrc":"8959:3:24","nodeType":"YulIdentifier","src":"8959:3:24"},"nativeSrc":"8959:22:24","nodeType":"YulFunctionCall","src":"8959:22:24"},{"name":"dataEnd","nativeSrc":"8983:7:24","nodeType":"YulIdentifier","src":"8983:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8938:20:24","nodeType":"YulIdentifier","src":"8938:20:24"},"nativeSrc":"8938:53:24","nodeType":"YulFunctionCall","src":"8938:53:24"},"variableNames":[{"name":"value0","nativeSrc":"8928:6:24","nodeType":"YulIdentifier","src":"8928:6:24"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8679:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8715:9:24","nodeType":"YulTypedName","src":"8715:9:24","type":""},{"name":"dataEnd","nativeSrc":"8726:7:24","nodeType":"YulTypedName","src":"8726:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8738:6:24","nodeType":"YulTypedName","src":"8738:6:24","type":""}],"src":"8679:329:24"},{"body":{"nativeSrc":"9127:34:24","nodeType":"YulBlock","src":"9127:34:24","statements":[{"nativeSrc":"9137:18:24","nodeType":"YulAssignment","src":"9137:18:24","value":{"name":"pos","nativeSrc":"9152:3:24","nodeType":"YulIdentifier","src":"9152:3:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"9137:11:24","nodeType":"YulIdentifier","src":"9137:11:24"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9014:147:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9099:3:24","nodeType":"YulTypedName","src":"9099:3:24","type":""},{"name":"length","nativeSrc":"9104:6:24","nodeType":"YulTypedName","src":"9104:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9115:11:24","nodeType":"YulTypedName","src":"9115:11:24","type":""}],"src":"9014:147:24"},{"body":{"nativeSrc":"9273:8:24","nodeType":"YulBlock","src":"9273:8:24","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"9167:114:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9265:6:24","nodeType":"YulTypedName","src":"9265:6:24","type":""}],"src":"9167:114:24"},{"body":{"nativeSrc":"9450:235:24","nodeType":"YulBlock","src":"9450:235:24","statements":[{"nativeSrc":"9460:90:24","nodeType":"YulAssignment","src":"9460:90:24","value":{"arguments":[{"name":"pos","nativeSrc":"9543:3:24","nodeType":"YulIdentifier","src":"9543:3:24"},{"kind":"number","nativeSrc":"9548:1:24","nodeType":"YulLiteral","src":"9548:1:24","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9467:75:24","nodeType":"YulIdentifier","src":"9467:75:24"},"nativeSrc":"9467:83:24","nodeType":"YulFunctionCall","src":"9467:83:24"},"variableNames":[{"name":"pos","nativeSrc":"9460:3:24","nodeType":"YulIdentifier","src":"9460:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9648:3:24","nodeType":"YulIdentifier","src":"9648:3:24"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"9559:88:24","nodeType":"YulIdentifier","src":"9559:88:24"},"nativeSrc":"9559:93:24","nodeType":"YulFunctionCall","src":"9559:93:24"},"nativeSrc":"9559:93:24","nodeType":"YulExpressionStatement","src":"9559:93:24"},{"nativeSrc":"9661:18:24","nodeType":"YulAssignment","src":"9661:18:24","value":{"arguments":[{"name":"pos","nativeSrc":"9672:3:24","nodeType":"YulIdentifier","src":"9672:3:24"},{"kind":"number","nativeSrc":"9677:1:24","nodeType":"YulLiteral","src":"9677:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9668:3:24","nodeType":"YulIdentifier","src":"9668:3:24"},"nativeSrc":"9668:11:24","nodeType":"YulFunctionCall","src":"9668:11:24"},"variableNames":[{"name":"end","nativeSrc":"9661:3:24","nodeType":"YulIdentifier","src":"9661:3:24"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9287:398:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9438:3:24","nodeType":"YulTypedName","src":"9438:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9446:3:24","nodeType":"YulTypedName","src":"9446:3:24","type":""}],"src":"9287:398:24"},{"body":{"nativeSrc":"9879:191:24","nodeType":"YulBlock","src":"9879:191:24","statements":[{"nativeSrc":"9890:154:24","nodeType":"YulAssignment","src":"9890:154:24","value":{"arguments":[{"name":"pos","nativeSrc":"10040:3:24","nodeType":"YulIdentifier","src":"10040:3:24"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9897:141:24","nodeType":"YulIdentifier","src":"9897:141:24"},"nativeSrc":"9897:147:24","nodeType":"YulFunctionCall","src":"9897:147:24"},"variableNames":[{"name":"pos","nativeSrc":"9890:3:24","nodeType":"YulIdentifier","src":"9890:3:24"}]},{"nativeSrc":"10054:10:24","nodeType":"YulAssignment","src":"10054:10:24","value":{"name":"pos","nativeSrc":"10061:3:24","nodeType":"YulIdentifier","src":"10061:3:24"},"variableNames":[{"name":"end","nativeSrc":"10054:3:24","nodeType":"YulIdentifier","src":"10054:3:24"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"9691:379:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9866:3:24","nodeType":"YulTypedName","src":"9866:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9875:3:24","nodeType":"YulTypedName","src":"9875:3:24","type":""}],"src":"9691:379:24"},{"body":{"nativeSrc":"10182:64:24","nodeType":"YulBlock","src":"10182:64:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10204:6:24","nodeType":"YulIdentifier","src":"10204:6:24"},{"kind":"number","nativeSrc":"10212:1:24","nodeType":"YulLiteral","src":"10212:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10200:3:24","nodeType":"YulIdentifier","src":"10200:3:24"},"nativeSrc":"10200:14:24","nodeType":"YulFunctionCall","src":"10200:14:24"},{"hexValue":"4661696c656420746f2073656e64204574686572","kind":"string","nativeSrc":"10216:22:24","nodeType":"YulLiteral","src":"10216:22:24","type":"","value":"Failed to send Ether"}],"functionName":{"name":"mstore","nativeSrc":"10193:6:24","nodeType":"YulIdentifier","src":"10193:6:24"},"nativeSrc":"10193:46:24","nodeType":"YulFunctionCall","src":"10193:46:24"},"nativeSrc":"10193:46:24","nodeType":"YulExpressionStatement","src":"10193:46:24"}]},"name":"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","nativeSrc":"10076:170:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10174:6:24","nodeType":"YulTypedName","src":"10174:6:24","type":""}],"src":"10076:170:24"},{"body":{"nativeSrc":"10398:220:24","nodeType":"YulBlock","src":"10398:220:24","statements":[{"nativeSrc":"10408:74:24","nodeType":"YulAssignment","src":"10408:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"10474:3:24","nodeType":"YulIdentifier","src":"10474:3:24"},{"kind":"number","nativeSrc":"10479:2:24","nodeType":"YulLiteral","src":"10479:2:24","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10415:58:24","nodeType":"YulIdentifier","src":"10415:58:24"},"nativeSrc":"10415:67:24","nodeType":"YulFunctionCall","src":"10415:67:24"},"variableNames":[{"name":"pos","nativeSrc":"10408:3:24","nodeType":"YulIdentifier","src":"10408:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10580:3:24","nodeType":"YulIdentifier","src":"10580:3:24"}],"functionName":{"name":"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","nativeSrc":"10491:88:24","nodeType":"YulIdentifier","src":"10491:88:24"},"nativeSrc":"10491:93:24","nodeType":"YulFunctionCall","src":"10491:93:24"},"nativeSrc":"10491:93:24","nodeType":"YulExpressionStatement","src":"10491:93:24"},{"nativeSrc":"10593:19:24","nodeType":"YulAssignment","src":"10593:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"10604:3:24","nodeType":"YulIdentifier","src":"10604:3:24"},{"kind":"number","nativeSrc":"10609:2:24","nodeType":"YulLiteral","src":"10609:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10600:3:24","nodeType":"YulIdentifier","src":"10600:3:24"},"nativeSrc":"10600:12:24","nodeType":"YulFunctionCall","src":"10600:12:24"},"variableNames":[{"name":"end","nativeSrc":"10593:3:24","nodeType":"YulIdentifier","src":"10593:3:24"}]}]},"name":"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack","nativeSrc":"10252:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10386:3:24","nodeType":"YulTypedName","src":"10386:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10394:3:24","nodeType":"YulTypedName","src":"10394:3:24","type":""}],"src":"10252:366:24"},{"body":{"nativeSrc":"10795:248:24","nodeType":"YulBlock","src":"10795:248:24","statements":[{"nativeSrc":"10805:26:24","nodeType":"YulAssignment","src":"10805:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"10817:9:24","nodeType":"YulIdentifier","src":"10817:9:24"},{"kind":"number","nativeSrc":"10828:2:24","nodeType":"YulLiteral","src":"10828:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10813:3:24","nodeType":"YulIdentifier","src":"10813:3:24"},"nativeSrc":"10813:18:24","nodeType":"YulFunctionCall","src":"10813:18:24"},"variableNames":[{"name":"tail","nativeSrc":"10805:4:24","nodeType":"YulIdentifier","src":"10805:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10852:9:24","nodeType":"YulIdentifier","src":"10852:9:24"},{"kind":"number","nativeSrc":"10863:1:24","nodeType":"YulLiteral","src":"10863:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10848:3:24","nodeType":"YulIdentifier","src":"10848:3:24"},"nativeSrc":"10848:17:24","nodeType":"YulFunctionCall","src":"10848:17:24"},{"arguments":[{"name":"tail","nativeSrc":"10871:4:24","nodeType":"YulIdentifier","src":"10871:4:24"},{"name":"headStart","nativeSrc":"10877:9:24","nodeType":"YulIdentifier","src":"10877:9:24"}],"functionName":{"name":"sub","nativeSrc":"10867:3:24","nodeType":"YulIdentifier","src":"10867:3:24"},"nativeSrc":"10867:20:24","nodeType":"YulFunctionCall","src":"10867:20:24"}],"functionName":{"name":"mstore","nativeSrc":"10841:6:24","nodeType":"YulIdentifier","src":"10841:6:24"},"nativeSrc":"10841:47:24","nodeType":"YulFunctionCall","src":"10841:47:24"},"nativeSrc":"10841:47:24","nodeType":"YulExpressionStatement","src":"10841:47:24"},{"nativeSrc":"10897:139:24","nodeType":"YulAssignment","src":"10897:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"11031:4:24","nodeType":"YulIdentifier","src":"11031:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack","nativeSrc":"10905:124:24","nodeType":"YulIdentifier","src":"10905:124:24"},"nativeSrc":"10905:131:24","nodeType":"YulFunctionCall","src":"10905:131:24"},"variableNames":[{"name":"tail","nativeSrc":"10897:4:24","nodeType":"YulIdentifier","src":"10897:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10624:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10775:9:24","nodeType":"YulTypedName","src":"10775:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10790:4:24","nodeType":"YulTypedName","src":"10790:4:24","type":""}],"src":"10624:419:24"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Distribution is paused.\")\n\n    }\n\n    function abi_encode_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44d9fb98c7dc47c463929e4aec543d042dadef6b283896998c94652450bfd03b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a61461033a5780638da5cb5b14610351578063f170d20d1461037c578063f2fde38b146103a557610291565b806301e336671461029657806316c38b3c146102bf57806334fcf437146102e85780634782f7791461031157610291565b3661029157600260149054906101000a900460ff16156100d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cb906107e5565b60405180910390fd5b6000600260159054906101000a900460ff161561010057600354346100f9919061083e565b9050610111565b6003543461010e91906108af565b90505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161016c9190610921565b602060405180830381865afa158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad919061096d565b8111156101ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e6906109e6565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161024c929190610a15565b6020604051808303816000875af115801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190610a76565b005b600080fd5b3480156102a257600080fd5b506102bd60048036038101906102b89190610ae4565b6103ce565b005b3480156102cb57600080fd5b506102e660048036038101906102e19190610b4c565b61045a565b005b3480156102f457600080fd5b5061030f600480360381019061030a9190610b79565b61047f565b005b34801561031d57600080fd5b5061033860048036038101906103339190610be4565b610491565b005b34801561034657600080fd5b5061034f61054d565b005b34801561035d57600080fd5b50610366610561565b6040516103739190610921565b60405180910390f35b34801561038857600080fd5b506103a3600480360381019061039e9190610b4c565b61058a565b005b3480156103b157600080fd5b506103cc60048036038101906103c79190610c24565b6105af565b005b6103d6610635565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610411929190610a15565b6020604051808303816000875af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610a76565b50505050565b610462610635565b80600260146101000a81548160ff02191690831515021790555050565b610487610635565b8060038190555050565b610499610635565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516104c090610c82565b60006040518083038185875af1925050503d80600081146104fd576040519150601f19603f3d011682016040523d82523d6000602084013e610502565b606091505b509150915081610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90610ce3565b60405180910390fd5b50505050565b610555610635565b61055f60006106bc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610592610635565b80600260156101000a81548160ff02191690831515021790555050565b6105b7610635565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106295760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106209190610921565b60405180910390fd5b610632816106bc565b50565b61063d610780565b73ffffffffffffffffffffffffffffffffffffffff1661065b610561565b73ffffffffffffffffffffffffffffffffffffffff16146106ba5761067e610780565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106b19190610921565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600082825260208201905092915050565b7f446973747269627574696f6e206973207061757365642e000000000000000000600082015250565b60006107cf601783610788565b91506107da82610799565b602082019050919050565b600060208201905081810360008301526107fe816107c2565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061084982610805565b915061085483610805565b925082820261086281610805565b915082820484148315176108795761087861080f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108ba82610805565b91506108c583610805565b9250826108d5576108d4610880565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061090b826108e0565b9050919050565b61091b81610900565b82525050565b60006020820190506109366000830184610912565b92915050565b600080fd5b61094a81610805565b811461095557600080fd5b50565b60008151905061096781610941565b92915050565b6000602082840312156109835761098261093c565b5b600061099184828501610958565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000600082015250565b60006109d0601c83610788565b91506109db8261099a565b602082019050919050565b600060208201905081810360008301526109ff816109c3565b9050919050565b610a0f81610805565b82525050565b6000604082019050610a2a6000830185610912565b610a376020830184610a06565b9392505050565b60008115159050919050565b610a5381610a3e565b8114610a5e57600080fd5b50565b600081519050610a7081610a4a565b92915050565b600060208284031215610a8c57610a8b61093c565b5b6000610a9a84828501610a61565b91505092915050565b610aac81610900565b8114610ab757600080fd5b50565b600081359050610ac981610aa3565b92915050565b600081359050610ade81610941565b92915050565b600080600060608486031215610afd57610afc61093c565b5b6000610b0b86828701610aba565b9350506020610b1c86828701610aba565b9250506040610b2d86828701610acf565b9150509250925092565b600081359050610b4681610a4a565b92915050565b600060208284031215610b6257610b6161093c565b5b6000610b7084828501610b37565b91505092915050565b600060208284031215610b8f57610b8e61093c565b5b6000610b9d84828501610acf565b91505092915050565b6000610bb1826108e0565b9050919050565b610bc181610ba6565b8114610bcc57600080fd5b50565b600081359050610bde81610bb8565b92915050565b60008060408385031215610bfb57610bfa61093c565b5b6000610c0985828601610bcf565b9250506020610c1a85828601610acf565b9150509250929050565b600060208284031215610c3a57610c3961093c565b5b6000610c4884828501610aba565b91505092915050565b600081905092915050565b50565b6000610c6c600083610c51565b9150610c7782610c5c565b600082019050919050565b6000610c8d82610c5f565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610ccd601483610788565b9150610cd882610c97565b602082019050919050565b60006020820190508181036000830152610cfc81610cc0565b905091905056fea2646970667358221220cf5bc93cbc57c4bf5a22c9b6b2b1e6fa7baa3c19a5f6c62150ca2ed55912fb9c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF170D20D EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI PUSH2 0x291 JUMP JUMPDEST DUP1 PUSH4 0x1E33667 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0x311 JUMPI PUSH2 0x291 JUMP JUMPDEST CALLDATASIZE PUSH2 0x291 JUMPI PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x100 JUMPI PUSH1 0x3 SLOAD CALLVALUE PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP PUSH2 0x111 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x8AF JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D6 PUSH2 0x635 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x430 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x462 PUSH2 0x635 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x487 PUSH2 0x635 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x499 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x502 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53E SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x555 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x55F PUSH1 0x0 PUSH2 0x6BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x592 PUSH2 0x635 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x629 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP2 PUSH2 0x6BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x63D PUSH2 0x780 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x65B PUSH2 0x561 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BA JUMPI PUSH2 0x67E PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446973747269627574696F6E206973207061757365642E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF PUSH1 0x17 DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DA DUP3 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7FE DUP2 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x849 DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP2 POP PUSH2 0x854 DUP4 PUSH2 0x805 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x862 DUP2 PUSH2 0x805 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x80F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8BA DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C5 DUP4 PUSH2 0x805 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8D5 JUMPI PUSH2 0x8D4 PUSH2 0x880 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0x900 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x936 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94A DUP2 PUSH2 0x805 JUMP JUMPDEST DUP2 EQ PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x967 DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x983 JUMPI PUSH2 0x982 PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x991 DUP5 DUP3 DUP6 ADD PUSH2 0x958 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D0 PUSH1 0x1C DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH2 0x9DB DUP3 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9FF DUP2 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0F DUP2 PUSH2 0x805 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA2A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x912 JUMP JUMPDEST PUSH2 0xA37 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA53 DUP2 PUSH2 0xA3E JUMP JUMPDEST DUP2 EQ PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA70 DUP2 PUSH2 0xA4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9A DUP5 DUP3 DUP6 ADD PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAC DUP2 PUSH2 0x900 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC9 DUP2 PUSH2 0xAA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xADE DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB0B DUP7 DUP3 DUP8 ADD PUSH2 0xABA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB1C DUP7 DUP3 DUP8 ADD PUSH2 0xABA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB2D DUP7 DUP3 DUP8 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB46 DUP2 PUSH2 0xA4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB62 JUMPI PUSH2 0xB61 PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP5 DUP3 DUP6 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB9D DUP5 DUP3 DUP6 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB1 DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC1 DUP2 PUSH2 0xBA6 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDE DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP6 DUP3 DUP7 ADD PUSH2 0xBCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC1A DUP6 DUP3 DUP7 ADD PUSH2 0xACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0x93C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC48 DUP5 DUP3 DUP6 ADD PUSH2 0xABA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6C PUSH1 0x0 DUP4 PUSH2 0xC51 JUMP JUMPDEST SWAP2 POP PUSH2 0xC77 DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8D DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCD PUSH1 0x14 DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD8 DUP3 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCFC DUP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF JUMPDEST 0xC9 EXTCODECOPY 0xBC JUMPI 0xC4 0xBF GAS 0x22 0xC9 0xB6 0xB2 0xB1 0xE6 STATICCALL PUSH28 0xAA3C19A5F6C62150CA2ED55912FB9C64736F6C634300081800330000 ","sourceMap":"546:1748:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1064:6;;;;;;;;;;;1063:7;1055:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1109:19;1146:8;;;;;;;;;;;1142:130;;;1196:4;;1184:9;:16;;;;:::i;:::-;1170:30;;1142:130;;;1257:4;;1245:9;:16;;;;:::i;:::-;1231:30;;1142:130;1318:5;;;;;;;;;;;:15;;;1342:4;1318:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1303:11;:45;;1282:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:5;;;;;;;;;;;:14;;;1427:10;1439:11;1412:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;546:1748;;;;1842:200;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1464:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1589:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2048:243;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1709:127:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1842:200:23;1531:13:0;:11;:13::i;:::-;2001:12:23::1;1994:29;;;2024:2;2028:6;1994:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1842:200:::0;;;:::o;1464:119::-;1531:13:0;:11;:13::i;:::-;1569:7:23::1;1560:6;;:16;;;;;;;;;;;;;;;;;;1464:119:::0;:::o;1589:114::-;1531:13:0;:11;:13::i;:::-;1691:5:23::1;1684:4;:12;;;;1589:114:::0;:::o;2048:243::-;1531:13:0;:11;:13::i;:::-;2178:9:23::1;2189:17:::0;2210:3:::1;:8;;2226:6;2210:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:60;;;;2255:4;2247:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;2167:124;;2048:243:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1709:127:23:-;1531:13:0;:11;:13::i;:::-;1820:9:23::1;1809:8;;:20;;;;;;;;;;;;;;;;;;1709:127:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;7:169:24:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:173::-;322:25;318:1;310:6;306:14;299:49;182:173;:::o;361:366::-;503:3;524:67;588:2;583:3;524:67;:::i;:::-;517:74;;600:93;689:3;600:93;:::i;:::-;718:2;713:3;709:12;702:19;;361:366;;;:::o;733:419::-;899:4;937:2;926:9;922:18;914:26;;986:9;980:4;976:20;972:1;961:9;957:17;950:47;1014:131;1140:4;1014:131;:::i;:::-;1006:139;;733:419;;;:::o;1158:77::-;1195:7;1224:5;1213:16;;1158:77;;;:::o;1241:180::-;1289:77;1286:1;1279:88;1386:4;1383:1;1376:15;1410:4;1407:1;1400:15;1427:410;1467:7;1490:20;1508:1;1490:20;:::i;:::-;1485:25;;1524:20;1542:1;1524:20;:::i;:::-;1519:25;;1579:1;1576;1572:9;1601:30;1619:11;1601:30;:::i;:::-;1590:41;;1780:1;1771:7;1767:15;1764:1;1761:22;1741:1;1734:9;1714:83;1691:139;;1810:18;;:::i;:::-;1691:139;1475:362;1427:410;;;;:::o;1843:180::-;1891:77;1888:1;1881:88;1988:4;1985:1;1978:15;2012:4;2009:1;2002:15;2029:185;2069:1;2086:20;2104:1;2086:20;:::i;:::-;2081:25;;2120:20;2138:1;2120:20;:::i;:::-;2115:25;;2159:1;2149:35;;2164:18;;:::i;:::-;2149:35;2206:1;2203;2199:9;2194:14;;2029:185;;;;:::o;2220:126::-;2257:7;2297:42;2290:5;2286:54;2275:65;;2220:126;;;:::o;2352:96::-;2389:7;2418:24;2436:5;2418:24;:::i;:::-;2407:35;;2352:96;;;:::o;2454:118::-;2541:24;2559:5;2541:24;:::i;:::-;2536:3;2529:37;2454:118;;:::o;2578:222::-;2671:4;2709:2;2698:9;2694:18;2686:26;;2722:71;2790:1;2779:9;2775:17;2766:6;2722:71;:::i;:::-;2578:222;;;;:::o;2887:117::-;2996:1;2993;2986:12;3133:122;3206:24;3224:5;3206:24;:::i;:::-;3199:5;3196:35;3186:63;;3245:1;3242;3235:12;3186:63;3133:122;:::o;3261:143::-;3318:5;3349:6;3343:13;3334:22;;3365:33;3392:5;3365:33;:::i;:::-;3261:143;;;;:::o;3410:351::-;3480:6;3529:2;3517:9;3508:7;3504:23;3500:32;3497:119;;;3535:79;;:::i;:::-;3497:119;3655:1;3680:64;3736:7;3727:6;3716:9;3712:22;3680:64;:::i;:::-;3670:74;;3626:128;3410:351;;;;:::o;3767:178::-;3907:30;3903:1;3895:6;3891:14;3884:54;3767:178;:::o;3951:366::-;4093:3;4114:67;4178:2;4173:3;4114:67;:::i;:::-;4107:74;;4190:93;4279:3;4190:93;:::i;:::-;4308:2;4303:3;4299:12;4292:19;;3951:366;;;:::o;4323:419::-;4489:4;4527:2;4516:9;4512:18;4504:26;;4576:9;4570:4;4566:20;4562:1;4551:9;4547:17;4540:47;4604:131;4730:4;4604:131;:::i;:::-;4596:139;;4323:419;;;:::o;4748:118::-;4835:24;4853:5;4835:24;:::i;:::-;4830:3;4823:37;4748:118;;:::o;4872:332::-;4993:4;5031:2;5020:9;5016:18;5008:26;;5044:71;5112:1;5101:9;5097:17;5088:6;5044:71;:::i;:::-;5125:72;5193:2;5182:9;5178:18;5169:6;5125:72;:::i;:::-;4872:332;;;;;:::o;5210:90::-;5244:7;5287:5;5280:13;5273:21;5262:32;;5210:90;;;:::o;5306:116::-;5376:21;5391:5;5376:21;:::i;:::-;5369:5;5366:32;5356:60;;5412:1;5409;5402:12;5356:60;5306:116;:::o;5428:137::-;5482:5;5513:6;5507:13;5498:22;;5529:30;5553:5;5529:30;:::i;:::-;5428:137;;;;:::o;5571:345::-;5638:6;5687:2;5675:9;5666:7;5662:23;5658:32;5655:119;;;5693:79;;:::i;:::-;5655:119;5813:1;5838:61;5891:7;5882:6;5871:9;5867:22;5838:61;:::i;:::-;5828:71;;5784:125;5571:345;;;;:::o;5922:122::-;5995:24;6013:5;5995:24;:::i;:::-;5988:5;5985:35;5975:63;;6034:1;6031;6024:12;5975:63;5922:122;:::o;6050:139::-;6096:5;6134:6;6121:20;6112:29;;6150:33;6177:5;6150:33;:::i;:::-;6050:139;;;;:::o;6195:::-;6241:5;6279:6;6266:20;6257:29;;6295:33;6322:5;6295:33;:::i;:::-;6195:139;;;;:::o;6340:619::-;6417:6;6425;6433;6482:2;6470:9;6461:7;6457:23;6453:32;6450:119;;;6488:79;;:::i;:::-;6450:119;6608:1;6633:53;6678:7;6669:6;6658:9;6654:22;6633:53;:::i;:::-;6623:63;;6579:117;6735:2;6761:53;6806:7;6797:6;6786:9;6782:22;6761:53;:::i;:::-;6751:63;;6706:118;6863:2;6889:53;6934:7;6925:6;6914:9;6910:22;6889:53;:::i;:::-;6879:63;;6834:118;6340:619;;;;;:::o;6965:133::-;7008:5;7046:6;7033:20;7024:29;;7062:30;7086:5;7062:30;:::i;:::-;6965:133;;;;:::o;7104:323::-;7160:6;7209:2;7197:9;7188:7;7184:23;7180:32;7177:119;;;7215:79;;:::i;:::-;7177:119;7335:1;7360:50;7402:7;7393:6;7382:9;7378:22;7360:50;:::i;:::-;7350:60;;7306:114;7104:323;;;;:::o;7433:329::-;7492:6;7541:2;7529:9;7520:7;7516:23;7512:32;7509:119;;;7547:79;;:::i;:::-;7509:119;7667:1;7692:53;7737:7;7728:6;7717:9;7713:22;7692:53;:::i;:::-;7682:63;;7638:117;7433:329;;;;:::o;7768:104::-;7813:7;7842:24;7860:5;7842:24;:::i;:::-;7831:35;;7768:104;;;:::o;7878:138::-;7959:32;7985:5;7959:32;:::i;:::-;7952:5;7949:43;7939:71;;8006:1;8003;7996:12;7939:71;7878:138;:::o;8022:155::-;8076:5;8114:6;8101:20;8092:29;;8130:41;8165:5;8130:41;:::i;:::-;8022:155;;;;:::o;8183:490::-;8259:6;8267;8316:2;8304:9;8295:7;8291:23;8287:32;8284:119;;;8322:79;;:::i;:::-;8284:119;8442:1;8467:61;8520:7;8511:6;8500:9;8496:22;8467:61;:::i;:::-;8457:71;;8413:125;8577:2;8603:53;8648:7;8639:6;8628:9;8624:22;8603:53;:::i;:::-;8593:63;;8548:118;8183:490;;;;;:::o;8679:329::-;8738:6;8787:2;8775:9;8766:7;8762:23;8758:32;8755:119;;;8793:79;;:::i;:::-;8755:119;8913:1;8938:53;8983:7;8974:6;8963:9;8959:22;8938:53;:::i;:::-;8928:63;;8884:117;8679:329;;;;:::o;9014:147::-;9115:11;9152:3;9137:18;;9014:147;;;;:::o;9167:114::-;;:::o;9287:398::-;9446:3;9467:83;9548:1;9543:3;9467:83;:::i;:::-;9460:90;;9559:93;9648:3;9559:93;:::i;:::-;9677:1;9672:3;9668:11;9661:18;;9287:398;;;:::o;9691:379::-;9875:3;9897:147;10040:3;9897:147;:::i;:::-;9890:154;;10061:3;10054:10;;9691:379;;;:::o;10076:170::-;10216:22;10212:1;10204:6;10200:14;10193:46;10076:170;:::o;10252:366::-;10394:3;10415:67;10479:2;10474:3;10415:67;:::i;:::-;10408:74;;10491:93;10580:3;10491:93;:::i;:::-;10609:2;10604:3;10600:12;10593:19;;10252:366;;;:::o;10624:419::-;10790:4;10828:2;10817:9;10813:18;10805:26;;10877:9;10871:4;10867:20;10863:1;10852:9;10848:17;10841:47;10905:131;11031:4;10905:131;:::i;:::-;10897:139;;10624:419;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMultiply(bool)":"f170d20d","setPaused(bool)":"16c38b3c","setRate(uint256)":"34fcf437","transferOwnership(address)":"f2fde38b","withdrawETH(address,uint256)":"4782f779","withdrawToken(address,address,uint256)":"01e33667"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_multiply\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_multiply\",\"type\":\"bool\"}],\"name\":\"setMultiply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FixedRateDistribution.sol\":\"FixedRateDistribution\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/FixedRateDistribution.sol\":{\"keccak256\":\"0xaaf0b861db8fc7ca6df49afd0840a7792d5acc4d66578afd37b805ea96db48e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://817e105c66eb9ad60d2df7b4025c30e5240aebc086b4c3e2f519d0fcac350a68\",\"dweb:/ipfs/QmTDVq5LVou4Dz4HyvQ9eCLTvKByfaJUswEnYBjWtSPGCu\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/FixedRateDistribution.sol:FixedRateDistribution","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1816,"contract":"contracts/FixedRateDistribution.sol:FixedRateDistribution","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":4431,"contract":"contracts/FixedRateDistribution.sol:FixedRateDistribution","label":"token","offset":0,"slot":"2","type":"t_contract(IERC20)902"},{"astId":4433,"contract":"contracts/FixedRateDistribution.sol:FixedRateDistribution","label":"paused","offset":20,"slot":"2","type":"t_bool"},{"astId":4435,"contract":"contracts/FixedRateDistribution.sol:FixedRateDistribution","label":"multiply","offset":21,"slot":"2","type":"t_bool"},{"astId":4437,"contract":"contracts/FixedRateDistribution.sol:FixedRateDistribution","label":"rate","offset":0,"slot":"3","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)902":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}},"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200df672df4711a7c24569e35e158b62500a60e8c6bd8c10e4fabcc8c72d65243764736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xF6 PUSH19 0xDF4711A7C24569E35E158B62500A60E8C6BD8C LT 0xE4 STATICCALL 0xBC 0xC8 0xC7 0x2D PUSH6 0x243764736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"288:256:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200df672df4711a7c24569e35e158b62500a60e8c6bd8c10e4fabcc8c72d65243764736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xF6 PUSH19 0xDF4711A7C24569E35E158B62500A60E8C6BD8C LT 0xE4 STATICCALL 0xBC 0xC8 0xC7 0x2D PUSH6 0x243764736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"288:256:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FixedRateDistribution.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/FixedRateDistribution.sol\":{\"keccak256\":\"0xaaf0b861db8fc7ca6df49afd0840a7792d5acc4d66578afd37b805ea96db48e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://817e105c66eb9ad60d2df7b4025c30e5240aebc086b4c3e2f519d0fcac350a68\",\"dweb:/ipfs/QmTDVq5LVou4Dz4HyvQ9eCLTvKByfaJUswEnYBjWtSPGCu\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}